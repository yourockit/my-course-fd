{"version":3,"file":"static/js/615.9e4630ce.chunk.js","mappings":"qOAUA,EATwB,SAAAA,GAOtB,QALIA,EAAY,EACD,QAAU,KAAV,IAAUA,EAAa,GAEvB,IAAMC,KAAKC,IAAIF,EAAY,GAAK,GAE1B,KAAKG,QAAQ,EACnC,E,oBCPM,SAASC,EAAqBC,GACnC,OAAOC,EAAAA,EAAAA,GAAqB,WAAYD,EACzC,EACoBE,EAAAA,EAAAA,GAAuB,WAAY,CAAC,OAAQ,UAAW,WAAY,YAAa,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,gBAAnc,I,SCDMC,EAAY,CAAC,YAAa,YAAa,YAAa,SAAU,WAyB9DC,GAAYC,EAAAA,EAAAA,IAAO,MAAO,CAC9BC,KAAM,WACNN,KAAM,OACNO,kBAAmB,SAACC,EAAOC,GACzB,IACEC,EACEF,EADFE,WAEF,MAAO,CAACD,EAAOE,KAAMF,EAAOC,EAAWE,UAAWF,EAAWG,QAAUJ,EAAOK,QAAgC,cAAvBJ,EAAWE,SAA2BH,EAAO,YAAD,OAAaC,EAAWf,YAC5J,GAReU,EASf,YAGG,IACAU,EAHJC,EAEI,EAFJA,MACAN,EACI,EADJA,WAGA,OAAOO,EAAAA,EAAAA,GAAS,CACdC,iBAAkBF,EAAMG,MAAQH,GAAOI,QAAQC,WAAWC,MAC1DC,OAAQP,EAAMG,MAAQH,GAAOI,QAAQI,KAAKC,QAC1CC,WAAYV,EAAMW,YAAYC,OAAO,gBACnClB,EAAWG,QAAU,CACvBgB,aAAcb,EAAMc,MAAMD,cACF,aAAvBnB,EAAWE,SAA0B,CACtCmB,OAAQ,aAAF,QAAgBf,EAAMG,MAAQH,GAAOI,QAAQY,UAC3B,cAAvBtB,EAAWE,UAA2BK,EAAAA,EAAAA,GAAS,CAChDgB,WAAYjB,EAAMG,MAAQH,GAAOkB,QAAQxB,EAAWf,aAClDqB,EAAMG,MAA+B,SAAvBH,EAAMI,QAAQe,MAAmB,CACjDC,gBAAiB,mBAAF,QAAqBC,EAAAA,EAAAA,IAAM,OAAQC,EAAgB5B,EAAWf,YAA9D,cAA8E0C,EAAAA,EAAAA,IAAM,OAAQC,EAAgB5B,EAAWf,YAAvH,MACdqB,EAAMG,MAAQ,CACfiB,gBAAiE,OAA/CrB,EAAuBC,EAAMG,KAAKoB,eAAoB,EAASxB,EAAqBL,EAAWf,aAEpH,IAuFD,EAtF2B6C,EAAAA,YAAiB,SAAeC,EAASC,GAClE,IAAMlC,GAAQmC,EAAAA,EAAAA,GAAc,CAC1BnC,MAAOiC,EACPnC,KAAM,aAGJsC,EAKEpC,EALFoC,UADJ,EAMMpC,EAJFqC,UAAAA,OAFJ,MAEgB,MAFhB,IAMMrC,EAHFb,UAAAA,OAHJ,MAGgB,EAHhB,IAMMa,EAFFK,OAAAA,OAJJ,WAMML,EADFI,QAAAA,OALJ,MAKc,YALd,EAOEkC,GAAQC,EAAAA,EAAAA,GAA8BvC,EAAOL,GACzCO,GAAaO,EAAAA,EAAAA,GAAS,CAAC,EAAGT,EAAO,CACrCqC,UAAAA,EACAlD,UAAAA,EACAkB,OAAAA,EACAD,QAAAA,IAEIoC,EA7DkB,SAAAtC,GACxB,IACEG,EAIEH,EAJFG,OACAlB,EAGEe,EAHFf,UACAiB,EAEEF,EAFFE,QACAoC,EACEtC,EADFsC,QAEIC,EAAQ,CACZtC,KAAM,CAAC,OAAQC,GAAUC,GAAU,UAAuB,cAAZD,GAAA,mBAAuCjB,KAEvF,OAAOuD,EAAAA,EAAAA,GAAeD,EAAOlD,EAAsBiD,EACpD,CAkDiBG,CAAkBzC,GAQlC,OAAoB0C,EAAAA,EAAAA,KAAKhD,GAAWa,EAAAA,EAAAA,GAAS,CAC3CoC,GAAIR,EACJnC,WAAYA,EACZkC,WAAWU,EAAAA,EAAAA,GAAKN,EAAQrC,KAAMiC,GAC9BF,IAAKA,GACJI,GACJ,IC1FM,SAASS,EAAoBvD,GAClC,OAAOC,EAAAA,EAAAA,GAAqB,UAAWD,EACxC,EACmBE,EAAAA,EAAAA,GAAuB,UAAW,CAAC,SAAvD,ICDMC,EAAY,CAAC,YAAa,UAoB1BqD,GAAWnD,EAAAA,EAAAA,IAAOoD,EAAO,CAC7BnD,KAAM,UACNN,KAAM,OACNO,kBAAmB,SAACC,EAAOC,GAAR,OAAmBA,EAAOE,IAA1B,GAHJN,EAId,WACD,MAAO,CACLqD,SAAU,SAEb,IAsDD,EArD0BlB,EAAAA,YAAiB,SAAcC,EAASC,GAChE,IAAMlC,GAAQmC,EAAAA,EAAAA,GAAc,CAC1BnC,MAAOiC,EACPnC,KAAM,YAGJsC,EAEEpC,EAFFoC,UADJ,EAGMpC,EADFmD,OAAAA,OAFJ,SAIEb,GAAQC,EAAAA,EAAAA,GAA8BvC,EAAOL,GACzCO,GAAaO,EAAAA,EAAAA,GAAS,CAAC,EAAGT,EAAO,CACrCmD,OAAAA,IAEIX,EA/BkB,SAAAtC,GACxB,IACEsC,EACEtC,EADFsC,QAKF,OAAOE,EAAAA,EAAAA,GAHO,CACZvC,KAAM,CAAC,SAEoB4C,EAAqBP,EACnD,CAuBiBG,CAAkBzC,GAClC,OAAoB0C,EAAAA,EAAAA,KAAKI,GAAUvC,EAAAA,EAAAA,GAAS,CAC1C2B,WAAWU,EAAAA,EAAAA,GAAKN,EAAQrC,KAAMiC,GAC9BjD,UAAWgE,EAAS,OAAIC,EACxBlB,IAAKA,EACLhC,WAAYA,GACXoC,GACJ,G,qJCnDM,SAASe,EAAyB7D,GACvC,OAAOC,EAAAA,EAAAA,GAAqB,eAAgBD,EAC7C,EACwBE,EAAAA,EAAAA,GAAuB,eAAgB,CAAC,OAAQ,QAAS,QAAlF,I,SCDMC,EAAY,CAAC,WAAY,YAAa,YAAa,QAAS,MAAO,SAqBnE2D,GAAgBzD,EAAAA,EAAAA,IAAO,MAAO,CAClCC,KAAM,eACNN,KAAM,OACNO,kBAAmB,SAACC,EAAOC,GACzB,IACEC,EACEF,EADFE,WAGAqD,EAEErD,EAFFqD,iBACAC,EACEtD,EADFsD,iBAEF,MAAO,CAACvD,EAAOE,KAAMoD,GAAoBtD,EAAOwD,MAAOD,GAAoBvD,EAAOyD,IACnF,GAZmB7D,EAanB,gBACDK,EADC,EACDA,WADC,OAEGO,EAAAA,EAAAA,GAAS,CACbkD,QAAS,QACTC,eAAgB,QAChBC,iBAAkB,YAClBC,mBAAoB,UACnB5D,EAAWqD,kBAAoB,CAChCQ,MAAO,QACN7D,EAAWsD,kBAAoB,CAEhCQ,UAAW,SAXV,IAaGC,EAAmB,CAAC,QAAS,QAAS,UAAW,SAAU,OAC3DC,EAAmB,CAAC,UAAW,OAqFrC,EApF+BlC,EAAAA,YAAiB,SAAmBC,EAASC,GAC1E,IAAMlC,GAAQmC,EAAAA,EAAAA,GAAc,CAC1BnC,MAAOiC,EACPnC,KAAM,iBAGJqE,EAMEnE,EANFmE,SACA/B,EAKEpC,EALFoC,UAFJ,EAOMpC,EAJFqC,UAAAA,OAHJ,MAGgB,MAHhB,EAII+B,EAGEpE,EAHFoE,MACAC,EAEErE,EAFFqE,IACAC,EACEtE,EADFsE,MAEFhC,GAAQC,EAAAA,EAAAA,GAA8BvC,EAAOL,GACzC4D,GAA4D,IAAzCU,EAAiBM,QAAQlC,GAC5CmC,GAAiBjB,GAAoBa,GAAQ3D,EAAAA,EAAAA,GAAS,CAC1DmB,gBAAiB,QAAF,OAAUwC,EAAV,OACdE,GAASA,EACNpE,GAAaO,EAAAA,EAAAA,GAAS,CAAC,EAAGT,EAAO,CACrCqC,UAAAA,EACAkB,iBAAAA,EACAC,kBAA2D,IAAzCU,EAAiBK,QAAQlC,KAEvCG,EA9DkB,SAAAtC,GACxB,IACEsC,EAGEtC,EAHFsC,QAIIC,EAAQ,CACZtC,KAAM,CAAC,OAFLD,EAFFqD,kBAImC,QAFjCrD,EADFsD,kBAGgE,QAElE,OAAOd,EAAAA,EAAAA,GAAeD,EAAOY,EAA0Bb,EACxD,CAoDiBG,CAAkBzC,GAClC,OAAoB0C,EAAAA,EAAAA,KAAKU,GAAe7C,EAAAA,EAAAA,GAAS,CAC/C2B,WAAWU,EAAAA,EAAAA,GAAKN,EAAQrC,KAAMiC,GAC9BS,GAAIR,EACJoC,MAAOlB,GAAoBa,EAAQ,WAAQhB,EAC3ClB,IAAKA,EACLoC,MAAOE,EACPtE,WAAYA,EACZmE,IAAKd,EAAmBa,GAASC,OAAMjB,GACtCd,EAAO,CACR6B,SAAUA,IAEb,G,6GCxFD,GACY,E,UCQDO,EAAY,YACZC,EAAS,SACTC,EAAW,WACXC,EAAU,UACVC,EAAU,UA6FjBC,EAA0B,SAAUC,GAGtC,SAASD,EAAW/E,EAAOiF,GACzB,IAAIC,EAEJA,EAAQF,EAAiBG,KAAKC,KAAMpF,EAAOiF,IAAYG,KACvD,IAGIC,EADAC,EAFcL,MAEuBM,WAAavF,EAAMwF,MAAQxF,EAAMsF,OAuB1E,OArBAJ,EAAMO,aAAe,KAEjBzF,EAAM0F,GACJJ,GACFD,EAAgBV,EAChBO,EAAMO,aAAeb,GAErBS,EAAgBR,EAIhBQ,EADErF,EAAM2F,eAAiB3F,EAAM4F,aACflB,EAEAC,EAIpBO,EAAMW,MAAQ,CACZC,OAAQT,GAEVH,EAAMa,aAAe,KACdb,CACR,EAhCDc,EAAAA,EAAAA,GAAejB,EAAYC,GAkC3BD,EAAWkB,yBAA2B,SAAkCC,EAAMC,GAG5E,OAFaD,EAAKR,IAEJS,EAAUL,SAAWpB,EAC1B,CACLoB,OAAQnB,GAIL,IACR,EAkBD,IAAIyB,EAASrB,EAAWsB,UAkPxB,OAhPAD,EAAOE,kBAAoB,WACzBlB,KAAKmB,cAAa,EAAMnB,KAAKK,aAC9B,EAEDW,EAAOI,mBAAqB,SAA4BC,GACtD,IAAIC,EAAa,KAEjB,GAAID,IAAcrB,KAAKpF,MAAO,CAC5B,IAAI8F,EAASV,KAAKS,MAAMC,OAEpBV,KAAKpF,MAAM0F,GACTI,IAAWlB,GAAYkB,IAAWjB,IACpC6B,EAAa9B,GAGXkB,IAAWlB,GAAYkB,IAAWjB,IACpC6B,EAAa5B,EAGlB,CAEDM,KAAKmB,cAAa,EAAOG,EAC1B,EAEDN,EAAOO,qBAAuB,WAC5BvB,KAAKwB,oBACN,EAEDR,EAAOS,YAAc,WACnB,IACIC,EAAMtB,EAAOF,EADbyB,EAAU3B,KAAKpF,MAAM+G,QAWzB,OATAD,EAAOtB,EAAQF,EAASyB,EAET,MAAXA,GAAsC,kBAAZA,IAC5BD,EAAOC,EAAQD,KACftB,EAAQuB,EAAQvB,MAEhBF,OAA4BlC,IAAnB2D,EAAQzB,OAAuByB,EAAQzB,OAASE,GAGpD,CACLsB,KAAMA,EACNtB,MAAOA,EACPF,OAAQA,EAEX,EAEDc,EAAOG,aAAe,SAAsBS,EAAUN,GAKpD,QAJiB,IAAbM,IACFA,GAAW,GAGM,OAAfN,EAIF,GAFAtB,KAAKwB,qBAEDF,IAAe9B,EAAU,CAC3B,GAAIQ,KAAKpF,MAAM2F,eAAiBP,KAAKpF,MAAM4F,aAAc,CACvD,IAAIqB,EAAO7B,KAAKpF,MAAMkH,QAAU9B,KAAKpF,MAAMkH,QAAQC,QAAUC,EAAAA,YAAqBhC,MAI9E6B,GCzOW,SAAqBA,GACrCA,EAAKI,SACb,CDuOmBC,CAAYL,EACvB,CAED7B,KAAKmC,aAAaP,EACnB,MACC5B,KAAKoC,mBAEEpC,KAAKpF,MAAM2F,eAAiBP,KAAKS,MAAMC,SAAWnB,GAC3DS,KAAKqC,SAAS,CACZ3B,OAAQpB,GAGb,EAED0B,EAAOmB,aAAe,SAAsBP,GAC1C,IAAIU,EAAStC,KAETI,EAAQJ,KAAKpF,MAAMwF,MACnBmC,EAAYvC,KAAKH,QAAUG,KAAKH,QAAQM,WAAayB,EAErDY,EAAQxC,KAAKpF,MAAMkH,QAAU,CAACS,GAAa,CAACP,EAAAA,YAAqBhC,MAAOuC,GACxEE,EAAYD,EAAM,GAClBE,EAAiBF,EAAM,GAEvBG,EAAW3C,KAAKyB,cAChBmB,EAAeL,EAAYI,EAASzC,OAASyC,EAASvC,OAGrDwB,IAAaxB,GAASyC,EACzB7C,KAAK8C,aAAa,CAChBpC,OAAQjB,IACP,WACD6C,EAAO1H,MAAMmI,UAAUN,EACxB,KAIHzC,KAAKpF,MAAMoI,QAAQP,EAAWC,GAC9B1C,KAAK8C,aAAa,CAChBpC,OAAQlB,IACP,WACD8C,EAAO1H,MAAMqI,WAAWR,EAAWC,GAEnCJ,EAAOY,gBAAgBN,GAAc,WACnCN,EAAOQ,aAAa,CAClBpC,OAAQjB,IACP,WACD6C,EAAO1H,MAAMmI,UAAUN,EAAWC,EACnC,GACF,GACF,IACF,EAED1B,EAAOoB,YAAc,WACnB,IAAIe,EAASnD,KAET0B,EAAO1B,KAAKpF,MAAM8G,KAClBiB,EAAW3C,KAAKyB,cAChBgB,EAAYzC,KAAKpF,MAAMkH,aAAU9D,EAAYgE,EAAAA,YAAqBhC,MAEjE0B,IAAQmB,GASb7C,KAAKpF,MAAMwI,OAAOX,GAClBzC,KAAK8C,aAAa,CAChBpC,OAAQhB,IACP,WACDyD,EAAOvI,MAAMyI,UAAUZ,GAEvBU,EAAOD,gBAAgBP,EAASjB,MAAM,WACpCyB,EAAOL,aAAa,CAClBpC,OAAQnB,IACP,WACD4D,EAAOvI,MAAM0I,SAASb,EACvB,GACF,GACF,KArBCzC,KAAK8C,aAAa,CAChBpC,OAAQnB,IACP,WACD4D,EAAOvI,MAAM0I,SAASb,EACvB,GAkBJ,EAEDzB,EAAOQ,mBAAqB,WACA,OAAtBxB,KAAKW,eACPX,KAAKW,aAAa4C,SAClBvD,KAAKW,aAAe,KAEvB,EAEDK,EAAO8B,aAAe,SAAsBU,EAAWC,GAIrDA,EAAWzD,KAAK0D,gBAAgBD,GAChCzD,KAAKqC,SAASmB,EAAWC,EAC1B,EAEDzC,EAAO0C,gBAAkB,SAAyBD,GAChD,IAAIE,EAAS3D,KAET4D,GAAS,EAcb,OAZA5D,KAAKW,aAAe,SAAUkD,GACxBD,IACFA,GAAS,EACTD,EAAOhD,aAAe,KACtB8C,EAASI,GAEZ,EAED7D,KAAKW,aAAa4C,OAAS,WACzBK,GAAS,CACV,EAEM5D,KAAKW,YACb,EAEDK,EAAOkC,gBAAkB,SAAyBvB,EAASmC,GACzD9D,KAAK0D,gBAAgBI,GACrB,IAAIjC,EAAO7B,KAAKpF,MAAMkH,QAAU9B,KAAKpF,MAAMkH,QAAQC,QAAUC,EAAAA,YAAqBhC,MAC9E+D,EAA0C,MAAXpC,IAAoB3B,KAAKpF,MAAMoJ,eAElE,GAAKnC,IAAQkC,EAAb,CAKA,GAAI/D,KAAKpF,MAAMoJ,eAAgB,CAC7B,IAAIC,EAAQjE,KAAKpF,MAAMkH,QAAU,CAAC9B,KAAKW,cAAgB,CAACkB,EAAM7B,KAAKW,cAC/D8B,EAAYwB,EAAM,GAClBC,EAAoBD,EAAM,GAE9BjE,KAAKpF,MAAMoJ,eAAevB,EAAWyB,EACtC,CAEc,MAAXvC,GACFwC,WAAWnE,KAAKW,aAAcgB,EAX/B,MAFCwC,WAAWnE,KAAKW,aAAc,EAejC,EAEDK,EAAOoD,OAAS,WACd,IAAI1D,EAASV,KAAKS,MAAMC,OAExB,GAAIA,IAAWpB,EACb,OAAO,KAGT,IAAI+E,EAAcrE,KAAKpF,MACnBmE,EAAWsF,EAAYtF,SAgBvBuF,GAfMD,EAAY/D,GACF+D,EAAY7D,aACX6D,EAAY9D,cACnB8D,EAAYnE,OACbmE,EAAYjE,MACbiE,EAAY3C,KACT2C,EAAY1C,QACL0C,EAAYL,eACnBK,EAAYrB,QACTqB,EAAYpB,WACboB,EAAYtB,UACfsB,EAAYjB,OACTiB,EAAYhB,UACbgB,EAAYf,SACbe,EAAYvC,SACV3E,EAAAA,EAAAA,GAA8BkH,EAAa,CAAC,WAAY,KAAM,eAAgB,gBAAiB,SAAU,QAAS,OAAQ,UAAW,iBAAkB,UAAW,aAAc,YAAa,SAAU,YAAa,WAAY,aAEjP,OAGEzH,EAAAA,cAAoB2H,EAAAA,EAAAA,SAAiC,CACnDC,MAAO,MACc,oBAAbzF,EAA0BA,EAAS2B,EAAQ4D,GAAc1H,EAAAA,aAAmBA,EAAAA,SAAAA,KAAoBmC,GAAWuF,GAExH,EAEM3E,CACR,CAlT6B,CAkT5B/C,EAAAA,WA+LF,SAAS6H,IAAS,CA7LlB9E,EAAW+E,YAAcH,EAAAA,EACzB5E,EAAWgF,UA0LP,CAAC,EAILhF,EAAWiF,aAAe,CACxBtE,IAAI,EACJE,cAAc,EACdD,eAAe,EACfL,QAAQ,EACRE,OAAO,EACPsB,MAAM,EACNsB,QAASyB,EACTxB,WAAYwB,EACZ1B,UAAW0B,EACXrB,OAAQqB,EACRpB,UAAWoB,EACXnB,SAAUmB,GAEZ9E,EAAWL,UAAYA,EACvBK,EAAWJ,OAASA,EACpBI,EAAWH,SAAWA,EACtBG,EAAWF,QAAUA,EACrBE,EAAWD,QAAUA,EACrB,Q,UE/mBO,SAASmF,EAAmBjK,EAAOkK,GACxC,IAAIC,EAAuBC,EAEzBrD,EAGE/G,EAHF+G,QACAsD,EAEErK,EAFFqK,OAFF,EAIIrK,EADFsE,MAAAA,OAHF,MAGU,CAAC,EAHX,EAKA,MAAO,CACLgG,SAAgE,OAArDH,EAAwB7F,EAAMiG,oBAA8BJ,EAA2C,kBAAZpD,EAAuBA,EAAUA,EAAQmD,EAAQvI,OAAS,EAChK0I,OAAoE,OAA3DD,EAAwB9F,EAAMkG,0BAAoCJ,EAA0C,kBAAXC,EAAsBA,EAAOH,EAAQvI,MAAQ0I,EACvJI,MAAOnG,EAAMoG,gBAEhB,C,uBCTK/K,EAAY,CAAC,iBAAkB,SAAU,WAAY,SAAU,KAAM,UAAW,YAAa,aAAc,SAAU,WAAY,YAAa,QAAS,UAAW,uBASlKM,EAAS,CACb0K,SAAU,CACRC,UAAW,QAEbC,QAAS,CACPD,UAAW,SA0Lf,EAjL0B5I,EAAAA,YAAiB,SAAchC,EAAOkC,GAC9D,IAAM1B,GAAQsK,EAAAA,EAAAA,KACRC,EAAiB,CACrBvF,MAAOhF,EAAMW,YAAYmJ,SAASU,eAClClE,KAAMtG,EAAMW,YAAYmJ,SAASW,eAG/B7B,EAeEpJ,EAfFoJ,eADJ,EAgBMpJ,EAdFsF,OAAAA,OAFJ,SAGInB,EAaEnE,EAbFmE,SACAkG,EAYErK,EAZFqK,OACIa,EAWFlL,EAXF0F,GACA0C,EAUEpI,EAVFoI,QACAD,EASEnI,EATFmI,UACAE,EAQErI,EARFqI,WACAG,EAOExI,EAPFwI,OACAE,EAME1I,EANF0I,SACAD,EAKEzI,EALFyI,UACAnE,EAIEtE,EAJFsE,MAZJ,EAgBMtE,EAHF+G,QAAAA,OAbJ,MAacgE,EAbd,IAgBM/K,EADFmL,oBAAAA,OAfJ,MAe0BpG,EAf1B,EAiBEzC,GAAQC,EAAAA,EAAAA,GAA8BvC,EAAOL,GACzCuH,EAAUlF,EAAAA,OAAa,MACvBoJ,GAAYC,EAAAA,EAAAA,GAAWnE,EAAS/C,EAASjC,IAAKA,GAC9CoJ,EAA+B,SAAAzC,GAAQ,OAAI,SAAA0C,GAC/C,GAAI1C,EAAU,CACZ,IAAM5B,EAAOC,EAAQC,aAGI/D,IAArBmI,EACF1C,EAAS5B,GAET4B,EAAS5B,EAAMsE,EAElB,CACF,CAX4C,EAYvCC,EAAiBF,EAA6BjD,GAC9CoD,EAAcH,GAA6B,SAACrE,EAAMyE,IDlEpC,SAAAzE,GAAQA,EAAKI,SAAT,CCmEtBsE,CAAO1E,GAEP,IAAM2E,EAAkB3B,EAAmB,CACzC3F,MAAAA,EACAyC,QAAAA,EACAsD,OAAAA,GACC,CACD1I,KAAM,UAERsF,EAAK3C,MAAMuH,iBAAmBrL,EAAMW,YAAYC,OAAO,YAAawK,GACpE3E,EAAK3C,MAAMpD,WAAaV,EAAMW,YAAYC,OAAO,YAAawK,GAC1DxD,GACFA,EAAQnB,EAAMyE,EAEjB,IACKI,EAAgBR,EAA6BnD,GAC7C4D,EAAgBT,EAA6B7C,GAC7CuD,EAAaV,GAA6B,SAAArE,GAC9C,IAAM2E,EAAkB3B,EAAmB,CACzC3F,MAAAA,EACAyC,QAAAA,EACAsD,OAAAA,GACC,CACD1I,KAAM,SAERsF,EAAK3C,MAAMuH,iBAAmBrL,EAAMW,YAAYC,OAAO,YAAawK,GACpE3E,EAAK3C,MAAMpD,WAAaV,EAAMW,YAAYC,OAAO,YAAawK,GAC1DpD,GACFA,EAAOvB,EAEV,IACKgF,EAAeX,EAA6B5C,GAOlD,OAAoB9F,EAAAA,EAAAA,KAAKuI,GAAqB1K,EAAAA,EAAAA,GAAS,CACrD6E,OAAQA,EACRI,GAAIwF,EACJhE,QAASA,EACTkB,QAASqD,EACTtD,UAAW2D,EACXzD,WAAYmD,EACZhD,OAAQwD,EACRtD,SAAUuD,EACVxD,UAAWsD,EACX3C,eAhB2B,SAAA8C,GACvB9C,GAEFA,EAAelC,EAAQC,QAAS+E,EAEnC,EAYCnF,QAASA,GACRzE,EAAO,CACR6B,SAAU,SAAC0B,EAAO6D,GAChB,OAAoB1H,EAAAA,aAAmBmC,GAAU1D,EAAAA,EAAAA,GAAS,CACxD6D,OAAO7D,EAAAA,EAAAA,GAAS,CACdmK,UAAW,WACXuB,WAAsB,WAAVtG,GAAuBqF,OAAoB9H,EAAX,UAC3CnD,EAAO4F,GAAQvB,EAAOH,EAASnE,MAAMsE,OACxCpC,IAAKkJ,GACJ1B,GACJ,IAEJ,G,qEC/HD,SAAS0C,EAAQC,EAAQC,GACvB,IAAIC,EAAOC,OAAOD,KAAKF,GACvB,GAAIG,OAAOC,sBAAuB,CAChC,IAAIC,EAAUF,OAAOC,sBAAsBJ,GAC3CC,IAAmBI,EAAUA,EAAQC,QAAO,SAAUC,GACpD,OAAOJ,OAAOK,yBAAyBR,EAAQO,GAAKE,UACtD,KAAKP,EAAKQ,KAAKC,MAAMT,EAAMG,EAC7B,CACA,OAAOH,CACT,CACe,SAASU,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAS,MAAQF,UAAUD,GAAKC,UAAUD,GAAK,CAAC,EACpDA,EAAI,EAAIf,EAAQI,OAAOc,IAAS,GAAIC,SAAQ,SAAUC,IACpD,OAAeN,EAAQM,EAAKF,EAAOE,GACrC,IAAKhB,OAAOiB,0BAA4BjB,OAAOkB,iBAAiBR,EAAQV,OAAOiB,0BAA0BH,IAAWlB,EAAQI,OAAOc,IAASC,SAAQ,SAAUC,GAC5JhB,OAAOmB,eAAeT,EAAQM,EAAKhB,OAAOK,yBAAyBS,EAAQE,GAC7E,GACF,CACA,OAAON,CACT,C,gFChBMU,GAAsBC,EAAAA,EAAAA,eAAc,CACtCC,mBAAoB,SAACC,GAAD,OAAOA,CAAP,EACpBC,UAAU,EACVC,cAAe,UCNbC,GAAgBL,EAAAA,EAAAA,eAAc,CAAC,GCG/BM,GAAkBN,EAAAA,EAAAA,eAAc,MCLhCO,EAAgC,qBAAbC,SCGnBC,EAA4BF,EAAYG,EAAAA,gBAAkBC,EAAAA,UCD1DC,GAAcZ,EAAAA,EAAAA,eAAc,CAAEa,QAAQ,ICF5C,SAASC,EAAYzM,GACjB,MAAuB,kBAARA,GACXsK,OAAOnG,UAAUuI,eAAezJ,KAAKjD,EAAK,UACjD,CCAD,SAAS2M,EAAeC,GACpB,MAAoB,kBAANA,GAAkBC,MAAMC,QAAQF,EACjD,CCLD,SAASG,EAAoBH,GACzB,MAAoB,kBAANA,GAAqC,oBAAZA,EAAEI,KAC5C,CCFD,IAAMC,EAAuB,CACzB,UACA,cACA,aACA,aACA,WACA,YACA,QAEEC,EAAe,CAAC,WAAJ,OAAkBD,GCLpC,SAASE,EAAsBrP,GAC3B,OAAQiP,EAAoBjP,EAAMsP,UAC9BF,EAAaG,MAAK,SAACzP,GAAD,OAAU+O,EAAe7O,EAAMF,GAA/B,GACzB,CACD,SAAS0P,EAAcxP,GACnB,OAAOyP,QAAQJ,EAAsBrP,IAAUA,EAAM0P,SACxD,CCND,SAASC,EAAuB3P,GAC5B,MCFJ,SAAgCA,EAAOiF,GACnC,GAAIoK,EAAsBrP,GAAQ,CAC9B,IAAQ4P,EAAqB5P,EAArB4P,QAASN,EAAYtP,EAAZsP,QACjB,MAAO,CACHM,SAAqB,IAAZA,GAAqBf,EAAee,GACvCA,OACAxM,EACNkM,QAAST,EAAeS,GAAWA,OAAUlM,EAEpD,CACD,OAAyB,IAAlBpD,EAAM6P,QAAoB5K,EAAU,CAAC,CAC/C,CDTgC6K,CAAuB9P,GAAO+P,EAAAA,EAAAA,YAAW7B,IAA9D0B,EAAR,EAAQA,QAASN,EAAjB,EAAiBA,QACjB,OAAOU,EAAAA,EAAAA,UAAQ,iBAAO,CAAEJ,QAAAA,EAASN,QAAAA,EAAlB,GAA8B,CAACW,EAA0BL,GAAUK,EAA0BX,IAC/G,CACD,SAASW,EAA0BC,GAC/B,OAAOnB,MAAMC,QAAQkB,GAAQA,EAAKC,KAAK,KAAOD,CACjD,CEVD,IAAME,EAAe,CACjBC,UAAW,CACP,UACA,WACA,aACA,WACA,OACA,cACA,aACA,aAEJvJ,KAAM,CAAC,QACPwJ,KAAM,CAAC,OAAQ,gBACfC,MAAO,CAAC,cACRC,MAAO,CAAC,aAAc,eAAgB,cACtCC,IAAK,CAAC,WAAY,QAAS,aAAc,eACzCC,IAAK,CAAC,QAAS,aAAc,oBAAqB,YAClDC,OAAQ,CAAC,cAAe,kBAAmB,mBAC3CC,OAAQ,CAAC,SAAU,aAEjBC,EAAqB,CAAC,E,WACjBrD,GACPqD,EAAmBrD,GAAO,CACtBsD,UAAW,SAAC9Q,GAAD,OAAWoQ,EAAa5C,GAAK+B,MAAK,SAACzP,GAAD,QAAYE,EAAMF,EAAlB,GAAlC,E,EAFnB,IAAK,IAAM0N,KAAO4C,EAAc,EAArB5C,GCnBX,IAAMuD,GAAqBlD,EAAAA,EAAAA,eAAc,CAAC,GCGpCmD,GAA2BnD,EAAAA,EAAAA,eAAc,CAAC,GCL1CoD,EAAwBC,OAAOC,IAAI,yBCuBzC,SAASC,EAAT,GAAkH,IAAjFC,EAAiF,EAAjFA,kBAAmBC,EAA8D,EAA9DA,oBAAqBC,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,eAAgBC,EAAc,EAAdA,UAChGJ,GCtBJ,SAAsBK,GAClB,IAAK,IAAMlE,KAAOkE,EACdb,EAAmBrD,IAAnB,kBACOqD,EAAmBrD,IACnBkE,EAASlE,GAGvB,CDewBmE,CAAaN,GA2ClC,IAAMO,GAAsBC,EAAAA,EAAAA,aA1C5B,SAAyB7R,EAAO8R,GAK5B,IAAIC,EACEC,GAAiB,2BAChBjC,EAAAA,EAAAA,YAAWnC,IACX5N,GAFa,IAGhBiS,SAAUC,EAAYlS,KAElBgO,EAAagE,EAAbhE,SACF/I,EAAU0K,EAAuB3P,GACjCmS,EAAcX,EAAexR,EAAOgO,GAC1C,IAAKA,GAAYI,EAAW,CAOxBnJ,EAAQmN,cEvCpB,SAA0BX,EAAWU,EAAanS,EAAOsR,GACrD,IAAuBe,GAAWtC,EAAAA,EAAAA,YAAW7B,GAArCkE,cACFE,GAAcvC,EAAAA,EAAAA,YAAWtB,GACzB8D,GAAkBxC,EAAAA,EAAAA,YAAW5B,GAC7BqE,GAAsBzC,EAAAA,EAAAA,YAAWnC,GAAqBK,cACtDwE,GAAmBC,EAAAA,EAAAA,UAIzBpB,EAAsBA,GAAuBgB,EAAYK,UACpDF,EAAiBtL,SAAWmK,IAC7BmB,EAAiBtL,QAAUmK,EAAoBG,EAAW,CACtDU,YAAAA,EACAE,OAAAA,EACArS,MAAAA,EACAuS,gBAAAA,EACAK,wBAAuBL,IACW,IAA5BA,EAAgB3C,QAEtB4C,oBAAAA,KAGR,IAAMJ,EAAgBK,EAAiBtL,QA4BvC,OA3BA0L,EAAAA,EAAAA,qBAAmB,WACfT,GAAiBA,EAAcU,OAAO9S,EAAOuS,EAChD,IACDjE,GAA0B,WACtB8D,GAAiBA,EAAc5I,QAClC,KACDgF,EAAAA,EAAAA,YAAU,WACN4D,GAAiBA,EAAcW,gBAClC,KAW+BC,OAAOC,wBACjC3E,EACAE,EAAAA,YACkB,WAChB4D,GAAiBA,EAAcc,gBAC/Bd,EAAcc,eAAeC,gBAEpC,IACMf,CACV,CFZmCgB,CAAiB3B,EAAWU,EAAaH,EAAgBV,GAKjF,IAAM+B,GAA2BtD,EAAAA,EAAAA,YAAWiB,GACtCsC,GAAWvD,EAAAA,EAAAA,YAAWtB,GAAaC,OACrCzJ,EAAQmN,gBACRL,EAAgB9M,EAAQmN,cAAcT,aAEtCK,EAAgBsB,EAAUjC,EAAmBgC,GAEpD,CAKD,OAAQrR,EAAAA,cAAoBkM,EAAcqF,SAAU,CAAE3J,MAAO3E,GACzD8M,GAAiB9M,EAAQmN,cAAiBpQ,EAAAA,cAAoB+P,GAApB,QAAqCK,cAAenN,EAAQmN,eAAkBJ,IAAqB,KAC7IT,EAAUE,EAAWzR,EG1DjC,SAAsBmS,EAAaC,EAAeN,GAC9C,OAAO0B,EAAAA,EAAAA,cAAY,SAACC,GAChBA,GAAYtB,EAAYuB,OAASvB,EAAYuB,MAAMD,GAC/CrB,IACAqB,EACMrB,EAAcsB,MAAMD,GACpBrB,EAAcuB,WAEpB7B,IAC2B,oBAAhBA,EACPA,EAAY2B,GAEP9E,EAAYmD,KACjBA,EAAY3K,QAAUsM,GAGjC,GAMD,CAACrB,GACJ,CHmCuCwB,CAAazB,EAAalN,EAAQmN,cAAeN,GAAcK,EAAanE,EAAU/I,EAAQmN,eACjI,IAGD,OADAR,EAAoBX,GAAyBQ,EACtCG,CACV,CACD,SAASM,EAAT,GAAmC,IAAZD,EAAY,EAAZA,SACb4B,GAAgB9D,EAAAA,EAAAA,YAAWgB,GAAoB+C,GACrD,OAAOD,QAA8BzQ,IAAb6O,EAClB4B,EAAgB,IAAM5B,EACtBA,CACT,CI5DD,SAAS8B,EAAkBC,GACvB,SAASC,EAAOxC,GAA6C,IAAlCyC,EAAkC,uDAAJ,CAAC,EACtD,OAAO9C,EAAsB4C,EAAavC,EAAWyC,GACxD,CACD,GAAqB,qBAAVC,MACP,OAAOF,EAMX,IAAMG,EAAiB,IAAIC,IAC3B,OAAO,IAAIF,MAAMF,EAAQ,CAMrBK,IAAK,SAACC,EAAS/G,GAOX,OAHK4G,EAAeI,IAAIhH,IACpB4G,EAAeK,IAAIjH,EAAKyG,EAAOzG,IAE5B4G,EAAeE,IAAI9G,EAC7B,GAER,CCxCD,IAAMkH,EAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,MACA,OACA,QACA,MACA,QC3BJ,SAASC,EAAelD,GACpB,MAKqB,kBAAdA,IAIHA,EAAUmD,SAAS,SAOvBF,EAAqBnQ,QAAQkN,IAAc,GAIvC,QAAQoD,KAAKpD,GAIpB,CC3BD,IAAMqD,EAAkB,CAAC,ECGzB,IAAMC,EAAqB,CACvB,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,SAKEC,EAAiB,IAAIC,IAAIF,GCtB/B,SAASG,EAAoB1H,EAA7B,GAAwD,IAApBoD,EAAoB,EAApBA,OAAQqB,EAAY,EAAZA,SACxC,OAAQ+C,EAAeR,IAAIhH,IACvBA,EAAI2H,WAAW,YACbvE,QAAuBxN,IAAb6O,OACL6C,EAAgBtH,IAAgB,YAARA,EACtC,CCRD,IAAM4H,EAAgB,SAACxL,GAAD,OAAW6F,QAAQ7F,GAASA,EAAMyL,YAAlC,ECEhBC,EAAiB,CACnBC,EAAG,aACHC,EAAG,aACHC,EAAG,aACHC,qBAAsB,eAEpBC,EAAgBZ,EAAmB1H,OCRzC,IAAMuI,EAAwB,SAACC,GAAD,OAAW,SAACrI,GAAD,MAAwB,kBAARA,GAAoBA,EAAI2H,WAAWU,EAAnD,CAAX,EACxBC,EAAoBF,EAAsB,MAC1CG,EAAqBH,EAAsB,UCC3CI,EAAiB,SAACpM,EAAOqM,GAC3B,OAAOA,GAAyB,kBAAVrM,EAChBqM,EAAKrL,UAAUhB,GACfA,CACT,ECPKsM,EAAQ,SAACC,EAAKC,EAAKtH,GAAX,OAAiB1P,KAAK+W,IAAI/W,KAAKgX,IAAItH,EAAGqH,GAAMC,EAA5C,ECERC,EAAS,CACXxB,KAAM,SAAC/F,GAAD,MAAoB,kBAANA,CAAd,EACNwH,MAAOC,WACP3L,UAAW,SAACkE,GAAD,OAAOA,CAAP,GAETjN,GAAQ,kBACPwU,GADI,IAEPzL,UAAW,SAACkE,GAAD,OAAOoH,EAAM,EAAG,EAAGpH,EAAnB,IAET0H,GAAQ,kBACPH,GADI,IAEPI,QAAS,ICPPC,EAAW,SAAC5H,GAAD,OAAO1P,KAAKuX,MAAU,IAAJ7H,GAAc,GAAhC,EACX8H,EAAa,uBACbC,EAAa,8FACbC,EAAmB,+FACzB,SAASC,EAASjI,GACd,MAAoB,kBAANA,CACjB,CCVD,IAAMkI,EAAiB,SAACC,GAAD,MAAW,CAC9BpC,KAAM,SAAC/F,GAAD,OAAOiI,EAASjI,IAAMA,EAAEoI,SAASD,IAAiC,IAAxBnI,EAAEqI,MAAM,KAAK9J,MAAvD,EACNiJ,MAAOC,WACP3L,UAAW,SAACkE,GAAD,gBAAUA,GAAV,OAAcmI,EAAd,EAHQ,EAKjBG,EAAUJ,EAAe,OACzBK,GAAUL,EAAe,KACzBM,GAAKN,EAAe,MACpBO,GAAKP,EAAe,MACpBQ,GAAKR,EAAe,MACpBS,IAAqB,kBACpBJ,IADiB,IAEpBf,MAAO,SAACxH,GAAD,OAAOuI,GAAQf,MAAMxH,GAAK,GAA1B,EACPlE,UAAW,SAACkE,GAAD,OAAOuI,GAAQzM,UAAc,IAAJkE,EAAzB,ICbT4I,IAAM,kBACLrB,GADE,IAELzL,UAAWxL,KAAKuX,QCAdgB,GAAmB,CAErBC,YAAaN,GACbO,eAAgBP,GAChBQ,iBAAkBR,GAClBS,kBAAmBT,GACnBU,gBAAiBV,GACjBjW,aAAciW,GACdW,OAAQX,GACRY,oBAAqBZ,GACrBa,qBAAsBb,GACtBc,wBAAyBd,GACzBe,uBAAwBf,GAExBvT,MAAOuT,GACPgB,SAAUhB,GACViB,OAAQjB,GACRkB,UAAWlB,GACXmB,KAAMnB,GACNoB,IAAKpB,GACLqB,MAAOrB,GACPsB,OAAQtB,GACRuB,KAAMvB,GAENwB,QAASxB,GACTyB,WAAYzB,GACZ0B,aAAc1B,GACd2B,cAAe3B,GACf4B,YAAa5B,GACb6B,OAAQ7B,GACR8B,UAAW9B,GACX+B,YAAa/B,GACbgC,aAAchC,GACdiC,WAAYjC,GAEZkC,OAAQpC,EACRqC,QAASrC,EACTsC,QAAStC,EACTuC,QAASvC,EACTZ,MAAAA,EACAoD,OAAQpD,EACRqD,OAAQrD,EACRsD,OAAQtD,EACRuD,KAAM3C,EACN4C,MAAO5C,EACP6C,MAAO7C,EACP8C,SAAU5C,GACV6C,WAAY7C,GACZ8C,WAAY9C,GACZ+C,WAAY/C,GACZ/B,EAAG+B,GACH9B,EAAG8B,GACH7B,EAAG6B,GACHgD,YAAahD,GACb5B,qBAAsB4B,GACtBiD,QAAS1Y,EACT2Y,QAAS/C,GACTgD,QAAShD,GACTiD,QAASpD,GAETqD,OAAQjD,GAERkD,YAAa/Y,EACbgZ,cAAehZ,EACfiZ,WAAYpD,IC9DhB,SAASqD,GAAgBlV,EAAOmV,EAAc9Q,EAAS+Q,GACnD,IAAQ3W,EAA4CuB,EAA5CvB,MAAO3D,EAAqCkF,EAArClF,KAAMiK,EAA+B/E,EAA/B+E,UAAWsQ,EAAoBrV,EAApBqV,gBAE5BC,GAAe,EACfC,GAAqB,EAErBC,GAAkB,EAOtB,IAAK,IAAM7N,KAAOwN,EAAc,CAC5B,IAAMpR,EAAQoR,EAAaxN,GAI3B,GAAIsI,EAAkBtI,GAClB7M,EAAK6M,GAAO5D,MADhB,CAKA,IAAM0R,EAAY3D,GAAiBnK,GAC7B+N,EAAcvF,EAAepM,EAAO0R,GAC1C,GAAItG,EAAeR,IAAIhH,GAAM,CAKzB,GAHA2N,GAAe,EACfvQ,EAAU4C,GAAO+N,GAEZF,EACD,SAEAzR,KAAW0R,EAAU7E,SAAW,KAChC4E,GAAkB,EACzB,MACQ7N,EAAI2H,WAAW,WAEpBiG,GAAqB,EACrBF,EAAgB1N,GAAO+N,GAGvBjX,EAAMkJ,GAAO+N,CArBhB,CAuBJ,CAiBD,GAhBKP,EAAapQ,YACVuQ,GAAgBF,EAChB3W,EAAMsG,UTtClB,SAAwBA,EAAxB,EAAsG4Q,EAAoBP,GAOtH,IAPyI,QAAxGQ,2BAAAA,OAAwG,aAArEC,mBAAAA,OAAqE,SAErIC,EAAkB,GAKbxO,EAAI,EAAGA,EAAIwI,EAAexI,IAAK,CACpC,IAAMK,EAAMuH,EAAmB5H,QACR/J,IAAnBwH,EAAU4C,KAEVmO,GAAmB,GAAJ,OADOrG,EAAe9H,IAAQA,EAC9B,YAAwB5C,EAAU4C,GAAlC,MAEtB,CAaD,OAZIiO,IAA+B7Q,EAAU6K,IACzCkG,GAAmB,iBAEvBA,EAAkBA,EAAgBC,OAG9BX,EACAU,EAAkBV,EAAkBrQ,EAAW4Q,EAAqB,GAAKG,GAEpED,GAAsBF,IAC3BG,EAAkB,QAEfA,CACV,CSW6BE,CAAehW,EAAM+E,UAAWV,EAASmR,EAAiBJ,GAEvE3W,EAAMsG,YAKXtG,EAAMsG,UAAY,SAOtBwQ,EAAoB,CACpB,MAA2DF,EAAnDV,QAAAA,OAAR,MAAkB,MAAlB,IAA2DU,EAAlCT,QAAAA,OAAzB,MAAmC,MAAnC,IAA2DS,EAAjBR,QAAAA,OAA1C,MAAoD,EAApD,EACApW,EAAM4W,gBAAN,UAA2BV,EAA3B,YAAsCC,EAAtC,YAAiDC,EACpD,CACJ,CCvED,IAAMoB,GAAwB,iBAAO,CACjCxX,MAAO,CAAC,EACRsG,UAAW,CAAC,EACZsQ,gBAAiB,CAAC,EAClBva,KAAM,CAAC,EAJmB,ECM9B,SAASob,GAAkB7O,EAAQI,EAAQtN,GACvC,IAAK,IAAMwN,KAAOF,EACT8H,EAAc9H,EAAOE,KAAU0H,EAAoB1H,EAAKxN,KACzDkN,EAAOM,GAAOF,EAAOE,GAGhC,CAQD,SAASwO,GAAShc,EAAOmS,EAAanE,GAClC,IACM1J,EAAQ,CAAC,EAMf,OAFAyX,GAAkBzX,EALAtE,EAAMsE,OAAS,CAAC,EAKEtE,GACpCwM,OAAOyP,OAAO3X,EAdlB,WAAuD6N,EAAanE,GAAU,IAA5CiN,EAA4C,EAA5CA,kBAC9B,OAAOjL,EAAAA,EAAAA,UAAQ,WACX,IAAMnK,EDfuB,CACjCvB,MAAO,CAAC,EACRsG,UAAW,CAAC,EACZsQ,gBAAiB,CAAC,EAClBva,KAAM,CAAC,GCaH,OADAoa,GAAgBlV,EAAOsM,EAAa,CAAEsJ,4BAA6BzN,GAAYiN,GACxEzO,OAAOyP,OAAO,CAAC,EAAGpW,EAAMlF,KAAMkF,EAAMvB,MAC9C,GAAE,CAAC6N,GACP,CAQwB+J,CAAuBlc,EAAOmS,EAAanE,IACzDhO,EAAMmc,gBAAkBnc,EAAMmc,gBAAgB7X,GAASA,CACjE,CACD,SAAS8X,GAAapc,EAAOmS,EAAanE,GAEtC,IAAMqO,EAAY,CAAC,EACb/X,EAAQ0X,GAAShc,EAAOmS,EAAanE,GAoB3C,OAnBIhO,EAAMsQ,OAA+B,IAAvBtQ,EAAMsc,eAEpBD,EAAUE,WAAY,EAEtBjY,EAAMkY,WACFlY,EAAMmY,iBACFnY,EAAMoY,mBACF,OAEZpY,EAAMqY,aACa,IAAf3c,EAAMsQ,KACA,OADN,cAE4B,MAAftQ,EAAMsQ,KAAe,IAAM,WAEzBlN,IAAnBpD,EAAM4c,WACL5c,EAAM6c,OAAS7c,EAAM8c,YAAc9c,EAAM+c,YAC1CV,EAAUO,SAAW,GAEzBP,EAAU/X,MAAQA,EACX+X,CACV,CChDD,IAAMW,GAAmB,IAAI/H,IAAI,CAC7B,UACA,OACA,WACA,UACA,QACA,SACA,WACA,aACA,oBACA,kBACA,SACA,UACA,yBACA,4BACA,kBACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,SACA,SACA,eACA,aACA,kBACA,kBACA,eACA,aAUJ,SAASgI,GAAkBzP,GACvB,OAAQA,EAAI2H,WAAW,UAClB3H,EAAI2H,WAAW,SAAmB,cAAR3H,GAC3BA,EAAI2H,WAAW,WACf3H,EAAI2H,WAAW,UACf3H,EAAI2H,WAAW,UACf6H,GAAiBxI,IAAIhH,EAC5B,CCtDD,IACiC0P,GAD7BC,GAAgB,SAAC3P,GAAD,OAAUyP,GAAkBzP,EAA5B,EAoBpB,KAnBiC0P,GAyBLE,QAAQ,0BAA0B3G,WArB1D0G,GAAgB,SAAC3P,GAAD,OAASA,EAAI2H,WAAW,OAAS8H,GAAkBzP,GAAO0P,GAAY1P,EAAtE,EAyBnB,CAFD,MAAO6P,IAEN,CACD,SAASC,GAAYtd,EAAOud,EAAOC,GAC/B,IAAMC,EAAgB,CAAC,EACvB,IAAK,IAAMjQ,KAAOxN,EAQF,WAARwN,GAA4C,kBAAjBxN,EAAM0d,SAEjCP,GAAc3P,KACU,IAAvBgQ,GAA+BP,GAAkBzP,KAChD+P,IAAUN,GAAkBzP,IAE7BxN,EAAK,WAAiBwN,EAAI2H,WAAW,aACtCsI,EAAcjQ,GAAOxN,EAAMwN,IAGnC,OAAOiQ,CACV,C,eCrDc,SAASE,GAAyBrQ,EAAQsQ,GACvD,GAAc,MAAVtQ,EAAgB,MAAO,CAAC,EAC5B,IACIE,EAAKL,EADLD,GAAS,EAAA2Q,GAAA,GAA6BvQ,EAAQsQ,GAElD,GAAIpR,OAAOC,sBAAuB,CAChC,IAAIqR,EAAmBtR,OAAOC,sBAAsBa,GACpD,IAAKH,EAAI,EAAGA,EAAI2Q,EAAiBzQ,OAAQF,IACvCK,EAAMsQ,EAAiB3Q,GACnByQ,EAASrZ,QAAQiJ,IAAQ,GACxBhB,OAAOnG,UAAU0X,qBAAqB5Y,KAAKmI,EAAQE,KACxDN,EAAOM,GAAOF,EAAOE,GAEzB,CACA,OAAON,CACT,CCbA,SAAS8Q,GAAWC,EAAQC,EAAQzF,GAChC,MAAyB,kBAAXwF,EACRA,EACA3G,GAAG1M,UAAUsT,EAASzF,EAAOwF,EACtC,CCJD,IAAME,GAAW,CACbD,OAAQ,oBACRE,MAAO,oBAELC,GAAY,CACdH,OAAQ,mBACRE,MAAO,mB,iGCDX,SAASE,GAAczY,EAAvB,EAEaqE,EAASqU,EAAUtD,GAAmB,IAFnBuD,EAEmB,EAFnBA,MAAOC,EAEY,EAFZA,MAAOC,EAEK,EAFLA,UAAWlE,EAEN,EAFMA,QAASC,EAEf,EAFeA,QAASkE,EAExB,EAFwBA,WAExB,IAFoCC,YAAAA,OAEpC,MAFkD,EAElD,MAFqDC,WAAAA,OAErD,MAFkE,EAElE,EAM/C,GALA9D,GAAgBlV,EAD+B,SAChBqE,EAAS+Q,GAKpCsD,EACI1Y,EAAMvB,MAAMwa,UACZjZ,EAAMkZ,MAAMD,QAAUjZ,EAAMvB,MAAMwa,aAF1C,CAMAjZ,EAAMkZ,MAAQlZ,EAAMvB,MACpBuB,EAAMvB,MAAQ,CAAC,EACf,IAAQya,EAA6BlZ,EAA7BkZ,MAAOza,EAAsBuB,EAAtBvB,MAAO0a,EAAenZ,EAAfmZ,WAKlBD,EAAMnU,YACFoU,IACA1a,EAAMsG,UAAYmU,EAAMnU,kBACrBmU,EAAMnU,WAGboU,SACa5b,IAAZoX,QAAqCpX,IAAZqX,GAAyBnW,EAAMsG,aACzDtG,EAAM4W,gBFzBd,SAAgC8D,EAAYxE,EAASC,GACjD,IAAMwE,EAAYjB,GAAWxD,EAASwE,EAAWzJ,EAAGyJ,EAAWjb,OACzDmb,EAAYlB,GAAWvD,EAASuE,EAAWxJ,EAAGwJ,EAAWzG,QAC/D,gBAAU0G,EAAV,YAAuBC,EAC1B,CEqB+BC,CAAuBH,OAAwB5b,IAAZoX,EAAwBA,EAAU,QAAiBpX,IAAZqX,EAAwBA,EAAU,UAG1HrX,IAAVob,IACAO,EAAMxJ,EAAIiJ,QACApb,IAAVqb,IACAM,EAAMvJ,EAAIiJ,QACIrb,IAAdsb,IACAK,EAAMvI,MAAQkI,QAECtb,IAAfub,GD7BR,SAAsBI,EAAO1R,GAAqD,IAA7C+R,EAA6C,uDAAnC,EAAGlB,EAAgC,uDAAvB,EAAGmB,IAAoB,yDAE9EN,EAAMJ,WAAa,EAGnB,IAAMpS,EAAO8S,EAAclB,GAAWE,GAEtCU,EAAMxS,EAAK2R,QAAU5G,GAAG1M,WAAWsT,GAEnC,IAAMS,EAAarH,GAAG1M,UAAUyC,GAC1BuR,EAActH,GAAG1M,UAAUwU,GACjCL,EAAMxS,EAAK6R,OAAX,UAAuBO,EAAvB,YAAqCC,EACxC,CCkBOU,CAAaP,EAAOJ,EAAYC,EAAaC,GAAY,EA3B5D,CA6BJ,CC/CD,IAAMU,GAAuB,0BAAC,URFO,CACjCjb,MAAO,CAAC,EACRsG,UAAW,CAAC,EACZsQ,gBAAiB,CAAC,EAClBva,KAAM,CAAC,IQFkB,IAEzBoe,MAAO,CAAC,GAFiB,ECFvBR,GAAW,SAACiB,GAAD,MAAwB,kBAARA,GAA0C,QAAtBA,EAAIC,aAAxC,ECMjB,SAASC,GAAY1f,EAAOmS,EAAawN,EAAWlO,GAChD,IAAMmO,GAAc5P,EAAAA,EAAAA,UAAQ,WACxB,IAAMnK,EAAQ0Z,KAEd,OADAjB,GAAczY,EAAOsM,EAAa,CAAEsJ,4BAA4B,GAAS8C,GAAS9M,GAAYzR,EAAMib,oBACpG,kBACOpV,EAAMkZ,OADb,IAEIza,OAAO,UAAKuB,EAAMvB,QAEzB,GAAE,CAAC6N,IACJ,GAAInS,EAAMsE,MAAO,CACb,IAAMub,EAAY,CAAC,EACnB9D,GAAkB8D,EAAW7f,EAAMsE,MAAOtE,GAC1C4f,EAAYtb,OAAZ,kBAAyBub,GAAcD,EAAYtb,MACtD,CACD,OAAOsb,CACV,CCdD,SAASE,KAA4C,IAA5BtC,EAA4B,wDAC3CjM,EAAY,SAACE,EAAWzR,EAAOkC,EAAnB,EAA0C8L,GAAa,IAA7BgN,EAA6B,EAA7BA,aAIlC4E,GAHiBjL,EAAelD,GAChCiO,GACAtD,IAC6Bpc,EAAOgb,EAAchN,EAAUyD,GAC5DgM,EAAgBH,GAAYtd,EAA4B,kBAAdyR,EAAwB+L,GAClEuC,GAAe,0BACdtC,GACAmC,GAFW,IAGd1d,IAAAA,IAOIiC,EAAanE,EAAbmE,SACF6b,GAAmBhQ,EAAAA,EAAAA,UAAQ,kBAAOoF,EAAcjR,GAAYA,EAASmQ,MAAQnQ,CAAlD,GAA6D,CAACA,IAC/F,OAAO8b,EAAAA,EAAAA,eAAcxO,GAAD,QAAC,UACdsO,GADa,IAEhB5b,SAAU6b,IAEjB,EACD,OAAOzO,CACV,CC7BD,IAAM2O,GAAc,SAACC,GAAD,OAASA,EAAIC,QAAQ,kBAAmB,SAASX,aAAjD,ECHpB,SAASY,GAAWC,EAApB,EAA8CC,EAAWC,GAAY,IAAtClc,EAAsC,EAAtCA,MAAO3D,EAA+B,EAA/BA,KAGlC,IAAK,IAAM6M,KAFXhB,OAAOyP,OAAOqE,EAAQhc,MAAOA,EAAOkc,GAAcA,EAAWC,oBAAoBF,IAE/D5f,EACd2f,EAAQhc,MAAMoc,YAAYlT,EAAK7M,EAAK6M,GAE3C,CCHD,IAAMmT,GAAsB,IAAI1L,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,aACA,cACA,aACA,iBCtBJ,SAAS2L,GAAUN,EAASO,EAAaC,EAAYN,GAEjD,IAAK,IAAMhT,KADX6S,GAAWC,EAASO,OAAazd,EAAWod,GAC1BK,EAAY9B,MAC1BuB,EAAQS,aAAcJ,GAAoBnM,IAAIhH,GAA0BA,EAAnB0S,GAAY1S,GAAYqT,EAAY9B,MAAMvR,GAEtG,CCND,SAASwT,GAA4BhhB,EAAOyG,GACxC,IAAQnC,EAAUtE,EAAVsE,MACF2c,EAAY,CAAC,EACnB,IAAK,IAAMzT,KAAOlJ,GACV8Q,EAAc9Q,EAAMkJ,KACnB/G,EAAUnC,OAAS8Q,EAAc3O,EAAUnC,MAAMkJ,KAClD0H,EAAoB1H,EAAKxN,MACzBihB,EAAUzT,GAAOlJ,EAAMkJ,IAG/B,OAAOyT,CACV,CCVD,SAASD,GAA4BhhB,EAAOyG,GACxC,IAAMwa,EAAYC,GAA8BlhB,EAAOyG,GACvD,IAAK,IAAM+G,KAAOxN,EAAO,CACrB,GAAIoV,EAAcpV,EAAMwN,KAAS4H,EAAc3O,EAAU+G,IAIrDyT,GAHuD,IAArClM,EAAmBxQ,QAAQiJ,GACvC,OAASA,EAAI2T,OAAO,GAAGC,cAAgB5T,EAAI6T,UAAU,GACrD7T,GACiBxN,EAAMwN,EAEpC,CACD,OAAOyT,CACV,CCfD,SAASK,GAAwBthB,EAAOuhB,EAAYtN,GAAkD,IAA1CuN,EAA0C,uDAA1B,CAAC,EAAGC,EAAsB,uDAAJ,CAAC,EAsB/F,MAlB0B,oBAAfF,IACPA,EAAaA,OAAsBne,IAAX6Q,EAAuBA,EAASjU,EAAMiU,OAAQuN,EAAeC,IAM/D,kBAAfF,IACPA,EAAavhB,EAAM0P,UAAY1P,EAAM0P,SAAS6R,IAOxB,oBAAfA,IACPA,EAAaA,OAAsBne,IAAX6Q,EAAuBA,EAASjU,EAAMiU,OAAQuN,EAAeC,IAElFF,CACV,CCvBD,IAAMG,GAAoB,SAAC5S,GACvB,OAAOC,MAAMC,QAAQF,EACxB,ECMD,SAAS6S,GAAmB/X,GACxB,ICPmBkF,EDOb8S,EAAiBxM,EAAcxL,GAASA,EAAM0K,MAAQ1K,EAC5D,OCRmBkF,EDQE8S,ECPdnS,QAAQX,GAAkB,kBAANA,GAAkBA,EAAE+S,KAAO/S,EAAEgT,SDQlDF,EAAeE,UACfF,CACT,C,sCEMD,IAAMG,GAAqB,SAAC9Z,GAAD,OAAY,SAACjI,EAAOgO,GAC3C,IAAM/I,GAAU8K,EAAAA,EAAAA,YAAW7B,GACrBqE,GAAkBxC,EAAAA,EAAAA,YAAW5B,GAC7B6T,EAAO,kBAbjB,WAAiFhiB,EAAOiF,EAASsN,GAAiB,IAA7FyO,EAA6F,EAA7FA,4BAA6BiB,EAAgE,EAAhEA,kBAAmBC,EAA6C,EAA7CA,QAC3Drc,EAAQ,CACVmV,aAAcmH,GAAiBniB,EAAOiF,EAASsN,EAAiByO,GAChEH,YAAaoB,KAKjB,OAHIC,IACArc,EAAM6N,MAAQ,SAACD,GAAD,OAAcyO,EAAQliB,EAAOyT,EAAU5N,EAAvC,GAEXA,CACV,CAIsBuc,CAAUna,EAAQjI,EAAOiF,EAASsN,EAAxC,EACb,OAAOvE,EAAWgU,ICdtB,SAAqBK,GACjB,IAAMngB,GAAMwQ,EAAAA,EAAAA,QAAO,MAInB,OAHoB,OAAhBxQ,EAAIiF,UACJjF,EAAIiF,QAAUkb,KAEXngB,EAAIiF,OACd,CDQ8Bmb,CAAYN,EAC1C,CAL0B,EAM3B,SAASG,GAAiBniB,EAAOiF,EAASsN,EAAiBgQ,GACvD,IAAM7E,EAAS,CAAC,EACV8E,EAAeD,EAAmBviB,EAAO,CAAC,GAChD,IAAK,IAAMwN,KAAOgV,EACd9E,EAAOlQ,GAAOmU,GAAmBa,EAAahV,IAElD,IAAMoC,EAAqB5P,EAArB4P,QAASN,EAAYtP,EAAZsP,QACTmT,EAA0BpT,EAAsBrP,GAChD0iB,EAAkBlT,EAAcxP,GAClCiF,GACAyd,IACCD,IACiB,IAAlBziB,EAAM6P,eACUzM,IAAZwM,IACAA,EAAU3K,EAAQ2K,cACNxM,IAAZkM,IACAA,EAAUrK,EAAQqK,UAE1B,IAAIqT,IAA4BpQ,IACE,IAA5BA,EAAgB3C,QAGhBgT,GADND,EAA4BA,IAAyC,IAAZ/S,GACRN,EAAUM,EACvDgT,GACwB,mBAAjBA,IACN3T,EAAoB2T,KACR7T,MAAMC,QAAQ4T,GAAgBA,EAAe,CAACA,IACtDrV,SAAQ,SAACgU,GACV,IAAMsB,EAAWvB,GAAwBthB,EAAOuhB,GAChD,GAAKsB,EAAL,CAEA,IAAQC,EAAyCD,EAAzCC,cAA8B5V,GAAW2V,EAA1B3hB,WAAvB,GAAiD2hB,EAAjD,KACA,IAAK,IAAMrV,KAAON,EAAQ,CACtB,IAAI6V,EAAc7V,EAAOM,GACzB,GAAIuB,MAAMC,QAAQ+T,GAQdA,EAAcA,EAHAJ,EACRI,EAAY1V,OAAS,EACrB,GAGU,OAAhB0V,IACArF,EAAOlQ,GAAOuV,EAErB,CACD,IAAK,IAAMvV,KAAOsV,EACdpF,EAAOlQ,GAAOsV,EAActV,EAnBtB,CAoBb,IAEL,OAAOkQ,CACV,CEvED,IAAMsF,GAAkB,CACpBxR,eAAgBuQ,GAAmB,CAC/Bf,4BAA6BA,GAC7BiB,kBAAmB1C,GACnB2C,QAAS,SAACliB,EAAOyT,EAAR,GAAoD,IAAhCoN,EAAgC,EAAhCA,YAAa7F,EAAmB,EAAnBA,aACtC,IACI6F,EAAY7B,WAEJ,oBADGvL,EAASwP,QAEVxP,EAASwP,UACTxP,EAASyP,uBAUtB,CARD,MAAOC,GAEHtC,EAAY7B,WAAa,CACrBzJ,EAAG,EACHC,EAAG,EACHzR,MAAO,EACPwU,OAAQ,EAEf,CACD+F,GAAcuC,EAAa7F,EAAc,CAAES,4BAA4B,GAAS8C,GAAS9K,EAAS2P,SAAUpjB,EAAMib,mBAClH2F,GAAUnN,EAAUoN,EACvB,KC1BHwC,GAAmB,CACrB7R,eAAgBuQ,GAAmB,CAC/Bf,4BAAAA,GACAiB,kBAAmBnG,M,+CCP3B,SAASwH,GAAYpW,EAAQqW,EAAWra,GAAsC,IAA7BgB,EAA6B,uDAAnB,CAAEsZ,SAAS,GAElE,OADAtW,EAAOuW,iBAAiBF,EAAWra,EAASgB,GACrC,kBAAMgD,EAAOwW,oBAAoBH,EAAWra,EAA5C,CACV,CCHD,IAAMya,GAAmB,SAAC1a,GACtB,MAA0B,UAAtBA,EAAM2a,YACyB,kBAAjB3a,EAAM4a,QAAuB5a,EAAM4a,QAAU,GAWhC,IAApB5a,EAAM6a,SAEpB,ECbD,SAASC,GAAiB9a,GAA2B,IAApB+a,EAAoB,uDAAR,OACzC,MAAO,CACHC,MAAO,CACH1O,EAAGtM,EAAM+a,EAAY,KACrBxO,EAAGvM,EAAM+a,EAAY,MAGhC,CCND,SAASE,GAAgBhX,EAAQqW,EAAWra,EAASgB,GACjD,OAAOoZ,GAAYpW,EAAQqW,EDMR,SAACra,GACpB,OAAO,SAACD,GAAD,OAAW0a,GAAiB1a,IAAUC,EAAQD,EAAO8a,GAAiB9a,GAAtE,CACV,CCRyCkb,CAAejb,GAAUgB,EAClE,CCED,IAAMka,GAAmB,SAACC,EAAGC,GAAJ,OAAU,SAACxV,GAAD,OAAOwV,EAAED,EAAEvV,GAAX,CAAV,EACnByV,GAAO,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAqBA,EAAaC,OAAOL,GAAzC,ECRb,SAASM,GAAW5kB,GAChB,IAAI6kB,EAAO,KACX,OAAO,WAIH,OAAa,OAATA,IACAA,EAAO7kB,EAJM,WACb6kB,EAAO,IACV,EAMJ,CACJ,CACD,IAAMC,GAAuBF,GAAW,kBAClCG,GAAqBH,GAAW,gBACtC,SAASI,GAAcxU,GACnB,IAAIqU,GAAO,EACX,GAAa,MAATrU,EACAqU,EAAOE,UAEN,GAAa,MAATvU,EACLqU,EAAOC,SAEN,CACD,IAAMG,EAAiBH,KACjBI,EAAeH,KACjBE,GAAkBC,EAClBL,EAAO,WACHI,IACAC,GACH,GAIGD,GACAA,IACAC,GACAA,IAEX,CACD,OAAOL,CACV,CACD,SAASM,KAGL,IAAMC,EAAkBJ,IAAc,GACtC,OAAKI,IAELA,KACO,EACV,C,IClDKC,GAAAA,WACF,WAAYle,IAAM,gBACd7B,KAAKggB,WAAY,EACjBhgB,KAAK6B,KAAOA,CACf,C,sCACD,WAAY,K,EALVke,GCAN,IAAME,GAAY,CACdC,MAAO,EACPC,UAAW,EACXC,cAAc,GCCdC,IAAoB,EACpBC,IAAe,EACbC,GAAa,CACf,OACA,SACA,YACA,SACA,cAEEC,GAAQD,GAAWlB,QAAO,SAACoB,EAAKrY,GAElC,OADAqY,EAAIrY,GCdR,SAA0BkY,GAKtB,IAAII,EAAQ,GACRC,EAAiB,GAIjBC,EAAW,EAKXR,GAAe,EACfS,GAAiB,EAIfC,EAAc,IAAIC,QAClBC,EAAO,CAITC,SAAU,SAACxd,GAAmD,IACpDyd,EADoD,yDACnBd,EACjCe,EAASD,EAAoBR,EAAQC,EAU3C,OAZ0D,yDAItDG,EAAYM,IAAI3d,IAEc,IAA9B0d,EAAOhiB,QAAQsE,KACf0d,EAAOxZ,KAAKlE,GAERyd,GAAqBd,IACrBQ,EAAWF,EAAMzY,SAElBxE,CACV,EAIDF,OAAQ,SAACE,GACL,IAAM4d,EAAQV,EAAexhB,QAAQsE,IACtB,IAAX4d,GACAV,EAAeW,OAAOD,EAAO,GACjCP,EAAYS,OAAO9d,EACtB,EAID+d,QAAS,SAACvB,GAMN,GAAIG,EACAS,GAAiB,MADrB,CAIAT,GAAe,EAVK,MAWM,CAACO,EAAgBD,GAK3C,GALCA,EAXmB,MAWZC,EAXY,MAaL1Y,OAAS,EAExB2Y,EAAWF,EAAMzY,OAEb,IAAK,IAAIF,EAAI,EAAGA,EAAI6Y,EAAU7Y,IAAK,CAC/B,IAAMtE,EAAWid,EAAM3Y,GACvBtE,EAASwc,GACLa,EAAY1R,IAAI3L,KAChBud,EAAKC,SAASxd,GACd6c,IAEP,CAELF,GAAe,EACXS,IACAA,GAAiB,EACjBG,EAAKQ,QAAQvB,GApBhB,CAsBJ,GAEL,OAAOe,CACV,CDvEcS,EAAiB,kBAAOnB,IAAe,CAAtB,IACrBG,CACV,GAAE,CAAC,GACEiB,GAAc,SAACC,GAAD,OAAYnB,GAAMmB,GAAQH,QAAQvB,GAAlC,EACd2B,GAAe,SAAfA,EAAgBzB,GAClBG,IAAe,EACfL,GAAUC,MAAQG,GACZ,IAAO,GACPrmB,KAAKgX,IAAIhX,KAAK+W,IAAIoP,EAAYF,GAAUE,UAnB/B,IAmBuD,GACtEF,GAAUE,UAAYA,EACtBF,GAAUG,cAAe,EACzBG,GAAWpY,QAAQuZ,IACnBzB,GAAUG,cAAe,EACrBE,KACAD,IAAoB,EACpBwB,sBAAsBD,GAE7B,EACKE,GAAY,WACdxB,IAAe,EACfD,IAAoB,EACfJ,GAAUG,cACXyB,sBAAsBD,GAC7B,EACKG,GAAQxB,GAAWlB,QAAO,SAACoB,EAAKrY,GAClC,IAAM4Y,EAAOR,GAAMpY,GAMnB,OALAqY,EAAIrY,GAAO,SAACoZ,GAAkD,IAAzCQ,EAAyC,wDAAtBC,EAAsB,wDAG1D,OAFK3B,IACDwB,KACGd,EAAKC,SAASO,EAASQ,EAAWC,EAC5C,EACMxB,CACV,GAAE,CAAC,GACJ,SAASyB,GAAYV,GACjBjB,GAAWpY,SAAQ,SAACC,GAAD,OAASoY,GAAMpY,GAAK7E,OAAOie,EAA3B,GACtB,CE3CD,SAASW,GAActgB,EAAMugB,GACzB,IAAMjE,EAAY,WAAaiE,EAAW,QAAU,SAC9CC,EAAe,WAAaD,EAAW,QAAU,OAYvD,OAAOtD,GAAgBjd,EAAKE,QAASoc,GAXjB,SAACta,EAAOye,GACxB,GAAmB,UAAfze,EAAMgN,OAAoBgP,KAA9B,CAEA,IAAMjlB,EAAQiH,EAAK0gB,WACf1gB,EAAKiM,gBAAkBlT,EAAM4nB,YAC7B3gB,EAAKiM,eAAe2U,UAAU,aAAcL,GAE5CxnB,EAAMynB,IACNN,GAAAA,QAAa,kBAAMnnB,EAAMynB,GAAcxe,EAAOye,EAAjC,GANP,CAQb,GAC4D,CACzDlE,SAAUvc,EAAK0gB,WAAWF,IAEjC,C,IACKK,GAAAA,SAAAA,I,gIACF,WACI1iB,KAAKuO,QAAU4Q,GAAKgD,GAAcniB,KAAK6B,MAAM,GAAOsgB,GAAcniB,KAAK6B,MAAM,GAChF,G,qBACD,WAAa,K,EAJX6gB,CAAqB3C,ICpBrB4C,GAAAA,SAAAA,I,+BACF,aAAc,8BACV,eAAS3a,YACJoa,UAAW,EAFN,CAGb,C,uCACD,WACI,IAAIQ,GAAiB,EAOrB,IACIA,EAAiB5iB,KAAK6B,KAAKE,QAAQ8gB,QAAQ,iBAI9C,CAFD,MAAO9E,GACH6E,GAAiB,CACpB,CACIA,GAAmB5iB,KAAK6B,KAAKiM,iBAElC9N,KAAK6B,KAAKiM,eAAe2U,UAAU,cAAc,GACjDziB,KAAKoiB,UAAW,EACnB,G,oBACD,WACSpiB,KAAKoiB,UAAapiB,KAAK6B,KAAKiM,iBAEjC9N,KAAK6B,KAAKiM,eAAe2U,UAAU,cAAc,GACjDziB,KAAKoiB,UAAW,EACnB,G,mBACD,WAAQ,WACJpiB,KAAKuO,QAAU4Q,GAAKjB,GAAYle,KAAK6B,KAAKE,QAAS,SAAS,kBAAM,EAAK+gB,SAAX,IAAuB5E,GAAYle,KAAK6B,KAAKE,QAAS,QAAQ,kBAAM,EAAKghB,QAAX,IAC7H,G,qBACD,WAAa,K,EAjCXJ,CAAqB5C,ICGrBiD,GAAgB,SAAhBA,EAAiB/V,EAAQgW,GAC3B,QAAKA,IAGIhW,IAAWgW,GAITD,EAAc/V,EAAQgW,EAAMC,eAE1C,ECjBKze,GAAO,SAAC0e,GAAD,OAASA,CAAT,ECUb,SAASC,GAA0B1oB,EAAMoJ,GACrC,GAAKA,EAAL,CAEA,IAAMuf,EAAwB,IAAIC,aAAa,UAAY5oB,GAC3DoJ,EAAQuf,EAAuB1E,GAAiB0E,GAFtC,CAGb,C,IACKE,GAAAA,SAAAA,I,+BACF,aAAc,8BACV,eAASvb,YACJwb,qBAAuB/e,GAC5B,EAAKgf,mBAAqBhf,GAC1B,EAAKif,0BAA4Bjf,GACjC,EAAKkf,kBAAoB,SAACC,EAAYC,GAElC,GADA,EAAKJ,sBACD,EAAKK,WAAT,CAEA,IAAMlpB,EAAQ,EAAKiH,KAAK0gB,WAelBwB,EAA0BjF,GAAgBlR,OAAQ,aAdhC,SAACoW,EAAUC,GAC/B,GAAK,EAAKC,gBAAV,CAEA,MAA+B,EAAKriB,KAAK0gB,WAAjC9K,EAAR,EAAQA,MAAO0M,EAAf,EAAeA,YACfpC,GAAAA,QAAa,WAKRiB,GAAc,EAAKnhB,KAAKE,QAASiiB,EAASlc,QAErC2P,GAASA,EAAMuM,EAAUC,GADzBE,GAAeA,EAAYH,EAAUC,EAE9C,GAVS,CAWb,GACqF,CAAE7F,UAAWxjB,EAAM6c,OAAS7c,EAAK,eACjHwpB,EAA8BtF,GAAgBlR,OAAQ,iBAAiB,SAACyW,EAAaC,GAAd,OAA6B,EAAKC,YAAYF,EAAaC,EAA3D,GAAwE,CAAElG,UAAWxjB,EAAMupB,aAAevpB,EAAK,mBAC5L,EAAK6oB,mBAAqBtE,GAAK4E,EAAyBK,GACxD,EAAKI,WAAWZ,EAAYC,EAnBlB,CAoBb,EACD,EAAKY,qBAAuB,WACxB,IAmBMC,EAAwBxG,GAAY,EAAKrc,KAAKE,QAAS,WAnBvC,SAAC4iB,GACnB,GAAyB,UAArBA,EAAavc,MAAmB,EAAK0b,WAAzC,CAYA,EAAKL,qBACL,EAAKA,mBAAqBvF,GAAY,EAAKrc,KAAKE,QAAS,SAXrC,SAAC6iB,GACM,UAAnBA,EAAWxc,KAAoB,EAAK8b,iBAExCd,GAA0B,MAAM,SAACvf,EAAOye,GACpC,IAAQ7K,EAAU,EAAK5V,KAAK0gB,WAApB9K,MACJA,GACAsK,GAAAA,QAAa,kBAAMtK,EAAM5T,EAAOye,EAAnB,GAEpB,GACJ,IAGDc,GAA0B,QAAQ,SAACvf,EAAOye,GACtC,EAAKkC,WAAW3gB,EAAOye,EAC1B,GAfS,CAgBb,IAOKuC,EAAqB3G,GAAY,EAAKrc,KAAKE,QAAS,QALvC,WACV,EAAK+hB,YAEVV,GAA0B,UAAU,SAACiB,EAAaC,GAAd,OAA6B,EAAKC,YAAYF,EAAaC,EAA3D,GACvC,IAED,EAAKZ,0BAA4BvE,GAAKuF,EAAuBG,EAChE,EAzDS,CA0Db,C,0CACD,SAAWhhB,EAAOye,GACdtiB,KAAK8jB,YAAa,EAClB,MAAiC9jB,KAAK6B,KAAK0gB,WAAnC7K,EAAR,EAAQA,WAAR,EAAoBC,UAIJ3X,KAAK6B,KAAKiM,gBACtB9N,KAAK6B,KAAKiM,eAAe2U,UAAU,YAAY,GAE/C/K,GACAqK,GAAAA,QAAa,kBAAMrK,EAAW7T,EAAOye,EAAxB,GAEpB,G,2BACD,WAOI,OANAtiB,KAAKyjB,qBACLzjB,KAAK8jB,YAAa,EACJ9jB,KAAK6B,KAAK0gB,WACd5K,UAAY3X,KAAK6B,KAAKiM,gBAC5B9N,KAAK6B,KAAKiM,eAAe2U,UAAU,YAAY,IAE3C5C,IACX,G,yBACD,SAAYhc,EAAOye,GACf,GAAKtiB,KAAKkkB,gBAAV,CAEA,IAAQC,EAAgBnkB,KAAK6B,KAAK0gB,WAA1B4B,YACJA,GACApC,GAAAA,QAAa,kBAAMoC,EAAYtgB,EAAOye,EAAzB,GAHP,CAKb,G,mBACD,WACI,IAAM1nB,EAAQoF,KAAK6B,KAAK0gB,WAClBuC,EAAwBhG,GAAgB9e,KAAK6B,KAAKE,QAAS,cAAe/B,KAAK2jB,kBAAmB,CAAEvF,UAAWxjB,EAAM8c,YAAc9c,EAAK,kBACxImqB,EAAsB7G,GAAYle,KAAK6B,KAAKE,QAAS,QAAS/B,KAAKykB,sBACzEzkB,KAAKwjB,qBAAuBrE,GAAK2F,EAAuBC,EAC3D,G,qBACD,WACI/kB,KAAKwjB,uBACLxjB,KAAKyjB,qBACLzjB,KAAK0jB,2BACR,K,EApGCH,CAAqBxD,I,YCXrBiF,GAAoB,IAAIC,QAMxBC,GAAY,IAAID,QAChBE,GAAuB,SAACC,GAC1B,IAAM3hB,EAAWuhB,GAAkB9V,IAAIkW,EAAMtd,QAC7CrE,GAAYA,EAAS2hB,EACxB,EACKC,GAA2B,SAACC,GAC9BA,EAAQnd,QAAQgd,GACnB,EAoBD,SAASI,GAAoBrK,EAASpW,EAASrB,GAC3C,IAAM+hB,EApBV,YAAwD,IAApBzqB,EAAoB,EAApBA,KAAS+J,EAAW,SAC9C2gB,EAAa1qB,GAAQkO,SAItBic,GAAU9V,IAAIqW,IACfP,GAAU7V,IAAIoW,EAAY,CAAC,GAE/B,IAAMC,EAAgBR,GAAUhW,IAAIuW,GAC9Brd,EAAMud,KAAKC,UAAU9gB,GAQ3B,OAHK4gB,EAActd,KACfsd,EAActd,GAAO,IAAIyd,qBAAqBR,IAAzB,QAAqDtqB,KAAAA,GAAS+J,KAEhF4gB,EAActd,EACxB,CAEqC0d,CAAyBhhB,GAG3D,OAFAkgB,GAAkB3V,IAAI6L,EAASzX,GAC/B+hB,EAA0BO,QAAQ7K,GAC3B,WACH8J,GAAkBzD,OAAOrG,GACzBsK,EAA0BQ,UAAU9K,EACvC,CACJ,CC3CD,IAAM+K,GAAiB,CACnB9b,KAAM,EACN+b,IAAK,GAEHC,GAAAA,SAAAA,I,+BACF,aAAc,8BACV,eAASne,YACJoe,gBAAiB,EACtB,EAAKC,UAAW,EAHN,CAIb,C,6CACD,WAAgB,WACZrmB,KAAKuO,UACL,MAA0BvO,KAAK6B,KAAK0gB,WAA5B+D,SAAAA,OAAR,MAAmB,CAAC,EAApB,EACQvrB,EAAoDurB,EAApDvrB,KAAcwrB,EAAsCD,EAA9CvS,OAAd,EAA4DuS,EAA1BE,OAAAA,OAAlC,MAA2C,OAA3C,EAAmDC,EAASH,EAATG,KAC7C3hB,EAAU,CACZ/J,KAAMA,EAAOA,EAAKgH,aAAU/D,EAC5BuoB,WAAAA,EACAG,UAA6B,kBAAXF,EAAsBA,EAASP,GAAeO,IA+BpE,OAAOjB,GAAoBvlB,KAAK6B,KAAKE,QAAS+C,GA7BjB,SAACsgB,GAC1B,IAAQuB,EAAmBvB,EAAnBuB,eAIR,GAAI,EAAKN,WAAaM,IAEtB,EAAKN,SAAWM,GAKZF,GAASE,IAAkB,EAAKP,gBAApC,CAGSO,IACL,EAAKP,gBAAiB,GAEtB,EAAKvkB,KAAKiM,gBACV,EAAKjM,KAAKiM,eAAe2U,UAAU,cAAekE,GAMtD,MAA6C,EAAK9kB,KAAK0gB,WAA/CqE,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,gBACnBpjB,EAAWkjB,EAAiBC,EAAkBC,EACpDpjB,GAAYA,EAAS2hB,EAVpB,CAWJ,GAEJ,G,mBACD,WACIplB,KAAK8mB,eACR,G,oBACD,WACI,GAAoC,qBAAzBjB,qBAAX,CAEA,MAA6B7lB,KAAK6B,KAA1BjH,EAAR,EAAQA,MAAOyG,EAAf,EAAeA,UACT0lB,EAAoB,CAAC,SAAU,SAAU,QAAQ5c,KAO/D,YAA2F,QAAvDmc,SAAAA,OAAuD,MAA5C,CAAC,EAA2C,4DAAJ,CAAC,GAAjCA,SAAUU,OAA0B,MAAX,CAAC,EAAU,EACvF,OAAO,SAACtsB,GAAD,OAAU4rB,EAAS5rB,KAAUssB,EAAatsB,EAA1C,CACV,CATmEusB,CAAyBrsB,EAAOyG,IACxF0lB,GACA/mB,KAAK8mB,eAJC,CAMb,G,qBACD,WAAa,K,EA1DXX,CAAsBpG,ICF5B,IAAMmH,GAAoB,CACtB3b,OAAQ,CACJwU,QAASoG,IAEb9a,IAAK,CACD0U,QAASwD,IAEbpY,MAAO,CACH4U,QAAS4C,IAEbvX,MAAO,CACH2U,QAAS2C,K,WChBjB,SAASyE,GAAergB,EAAMsgB,GAC1B,IAAKzd,MAAMC,QAAQwd,GACf,OAAO,EACX,IAAMC,EAAaD,EAAKnf,OACxB,GAAIof,IAAevgB,EAAKmB,OACpB,OAAO,EACX,IAAK,IAAIF,EAAI,EAAGA,EAAIsf,EAAYtf,IAC5B,GAAIqf,EAAKrf,KAAOjB,EAAKiB,GACjB,OAAO,EAEf,OAAO,CACV,CCOD,SAASuf,GAAeta,EAAemP,EAAYtN,GAC/C,IAAMjU,EAAQoS,EAAcuV,WAC5B,OAAOrG,GAAwBthB,EAAOuhB,OAAuBne,IAAX6Q,EAAuBA,EAASjU,EAAMiU,OAf5F,SAAoB7B,GAChB,IAAMjL,EAAU,CAAC,EAEjB,OADAiL,EAAcsL,OAAOnQ,SAAQ,SAAC3D,EAAO4D,GAAR,OAAiBrG,EAAQqG,GAAO5D,EAAM0K,KAAtC,IACtBnN,CACV,CAWmGwlB,CAAWva,GAP/G,SAAqBA,GACjB,IAAMwa,EAAW,CAAC,EAElB,OADAxa,EAAcsL,OAAOnQ,SAAQ,SAAC3D,EAAO4D,GAAR,OAAiBof,EAASpf,GAAO5D,EAAMyL,aAAvC,IACtBuX,CACV,CAG8HvX,CAAYjD,GAC1I,CCnBD,IACMya,GAA+B,QAAU3M,GADjB,kBCA1B4M,GAAUjjB,GACVkjB,GAAYljB,GCGhB,IAAMmjB,GAAwB,SAACC,GAAD,OAAuB,IAAVA,CAAb,EACxBC,GAAwB,SAACC,GAAD,OAAkBA,EAAe,GAAjC,ECPxBC,IACO,E,sBCDPC,GAAqB,SAAChjB,GAAD,OAAY0E,MAAMC,QAAQ3E,IAAgC,kBAAdA,EAAO,EAAnD,ECE3B,SAASijB,GAAuBjjB,GAC5B,OAAOoF,SAASpF,GACO,kBAAXA,GAAuBkjB,GAAqBljB,IACpDgjB,GAAmBhjB,IAClB0E,MAAMC,QAAQ3E,IAAWA,EAAOmjB,MAAMF,IAC9C,CACD,IAAMG,GAAsB,SAAC,GAAD,oBAAEpJ,EAAF,KAAKC,EAAL,KAAQoJ,EAAR,KAAWC,EAAX,kCAAkCtJ,EAAlC,aAAwCC,EAAxC,aAA8CoJ,EAA9C,aAAoDC,EAApD,MACtBJ,GAAuB,CACzBK,OAAQ,SACRC,KAAM,OACNC,OAAQ,UACRC,QAAS,WACTC,UAAW,cACXC,OAAQR,GAAoB,CAAC,EAAG,IAAM,IAAM,IAC5CS,QAAST,GAAoB,CAAC,IAAM,EAAG,EAAG,MAC1CU,OAAQV,GAAoB,CAAC,IAAM,IAAM,KAAO,MAChDW,QAASX,GAAoB,CAAC,IAAM,KAAM,IAAM,OAEpD,SAASY,GAAwBhkB,GAC7B,GAAKA,EAEL,OAAOgjB,GAAmBhjB,GACpBojB,GAAoBpjB,GACpB0E,MAAMC,QAAQ3E,GACVA,EAAOikB,IAAID,IACXd,GAAqBljB,EAClC,CC5BD,IAAMkkB,GAAe,CACjBC,MAAO,kBAAMhiB,OAAOoC,eAAezJ,KAAKspB,QAAQpoB,UAAW,UAApD,GAELqoB,GAAU,CAAC,EACXC,GAAW,CAAC,E,YAIPnhB,GACPmhB,GAASnhB,GAAO,WAGZ,YAFqBpK,IAAjBsrB,GAAQlhB,KACRkhB,GAAQlhB,GAAO+gB,GAAa/gB,MACzBkhB,GAAQlhB,EAClB,C,EALL,IAAK,IAAMA,MAAO+gB,GAAc,GAArB/gB,ICYX,IAAMohB,GAAa,SAACC,EAAGC,EAAIC,GAAR,SAAkB,EAAM,EAAMA,EAAK,EAAMD,GAAMD,GAAK,EAAME,EAAK,EAAMD,IAAOD,EAAI,EAAMC,GACrGD,CADe,EAqBnB,SAASG,GAAYC,EAAKC,EAAKC,EAAKC,GAEhC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAOvlB,GACX,IAAMwlB,EAAW,SAACC,GAAD,OArBrB,SAAyB/Z,EAAGga,EAAYC,EAAYP,EAAKE,GACrD,IAAIM,EACAC,EACAviB,EAAI,EACR,IAEIsiB,EAAWb,GADXc,EAAWH,GAAcC,EAAaD,GAAc,EACpBN,EAAKE,GAAO5Z,GAC7B,EACXia,EAAaE,EAGbH,EAAaG,QAEZtwB,KAAKuwB,IAAIF,GAfO,QAgBnBtiB,EAfuB,IAgB7B,OAAOuiB,CACV,CAK4BE,CAAgBN,EAAI,EAAG,EAAGL,EAAKE,EAAvC,EAEjB,OAAO,SAACN,GAAD,OAAa,IAANA,GAAiB,IAANA,EAAUA,EAAID,GAAWS,EAASR,GAAIK,EAAKE,EAA7D,CACV,CC9CD,IAAMtB,GAASkB,GAAY,IAAM,EAAG,EAAG,GACjCjB,GAAUiB,GAAY,EAAG,EAAG,IAAM,GAClChB,GAAYgB,GAAY,IAAM,EAAG,IAAM,GCFvCa,GAAe,SAACxlB,GAAD,OAAY,SAAC0D,GAAD,OAAOA,GAAK,GAAM1D,EAAO,EAAI0D,GAAK,GAAK,EAAI1D,EAAO,GAAK,EAAI0D,KAAO,CAAlE,CAAZ,ECAf+hB,GAAgB,SAACzlB,GAAD,OAAY,SAAC0D,GAAD,OAAO,EAAI1D,EAAO,EAAI0D,EAAtB,CAAZ,ECChBkgB,GAAS,SAAClgB,GAAD,OAAO,EAAI3O,KAAK2wB,IAAI3wB,KAAK4wB,KAAKjiB,GAA9B,EACTmgB,GAAU4B,GAAc7B,IACxBgC,GAAYJ,GAAa3B,ICDzBE,GAAUY,GAAY,IAAM,KAAM,IAAM,KACxCb,GAAS2B,GAAc1B,IACvB8B,GAAYL,GAAa1B,ICEzBgC,GAAe,CACjBvC,OAAQ/jB,GACRikB,OAAAA,GACAE,UAAAA,GACAD,QAAAA,GACAE,OAAAA,GACAgC,UAAAA,GACA/B,QAAAA,GACAC,OAAAA,GACA+B,UAAAA,GACA9B,QAAAA,GACAgC,WCjBe,SAACriB,GAAD,OAAQA,GAAK,GAAK,EAAI,GAAMogB,GAAOpgB,GAAK,IAAO,EAAI3O,KAAKixB,IAAI,GAAI,IAAMtiB,EAAI,IAA1E,GDmBbuiB,GAA6B,SAAC/O,GAChC,GAAIxS,MAAMC,QAAQuS,GAAa,CAE3BwL,GAAgC,IAAtBxL,EAAWlU,OAAZ,2DACT,eAAyBkU,EAAzB,GACA,OAAOyN,GADP,oBAEH,CACI,MAA0B,kBAAfzN,GAEZwL,QAAuC3pB,IAA7B+sB,GAAa5O,GAAd,+BAAiEA,EAAjE,MACF4O,GAAa5O,IAEjBA,CACV,EE5BKgP,GAAgB,SAACta,EAAMua,GAAP,OAAoB,SAAC1hB,GACvC,OAAOW,QAASsH,EAASjI,IAAMgI,EAAiBjC,KAAK/F,IAAMA,EAAEqG,WAAWc,IACnEua,GAAYhkB,OAAOnG,UAAUuI,eAAezJ,KAAK2J,EAAG0hB,GAC5D,CAHqB,EAIhBC,GAAa,SAACC,EAAOC,EAAOC,GAAf,OAAyB,SAAC9hB,GAAM,MAC/C,IAAKiI,EAASjI,GACV,OAAOA,EACX,MAAyBA,EAAE+hB,MAAMja,GAAjC,gBAAOyN,EAAP,KAAUC,EAAV,KAAaoJ,EAAb,KAAgB7rB,EAAhB,KACA,uBACK6uB,EAAQna,WAAW8N,KADxB,UAEKsM,EAAQpa,WAAW+N,KAFxB,UAGKsM,EAAQra,WAAWmX,KAHxB,uBAIqBtqB,IAAVvB,EAAsB0U,WAAW1U,GAAS,GAJrD,CAMH,CAVkB,ECJbivB,IAAU,kBACTza,GADM,IAETzL,UAAW,SAACkE,GAAD,OAAO1P,KAAKuX,MAHN,SAAC7H,GAAD,OAAOoH,EAAM,EAAG,IAAKpH,EAArB,CAGYiiB,CAAajiB,GAA/B,IAETkiB,GAAO,CACTnc,KAAM0b,GAAc,MAAO,OAC3Bja,MAAOma,GAAW,MAAO,QAAS,QAClC7lB,UAAW,gBAAGqmB,EAAH,EAAGA,IAAKC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KAAf,IAAqBtvB,MAAOuvB,OAA5B,MAAsC,EAAtC,QAA8C,QACrDN,GAAQlmB,UAAUqmB,GAClB,KACAH,GAAQlmB,UAAUsmB,GAClB,KACAJ,GAAQlmB,UAAUumB,GAClB,KACAza,EAAS7U,EAAM+I,UAAUwmB,IACzB,GARO,GCoBf,IAAMC,GAAM,CACRxc,KAAM0b,GAAc,KACpBja,MAhCJ,SAAkBxH,GACd,IAAIwiB,EAAI,GACJC,EAAI,GACJjN,EAAI,GACJD,EAAI,GAmBR,OAjBIvV,EAAEzB,OAAS,GACXikB,EAAIxiB,EAAEuS,UAAU,EAAG,GACnBkQ,EAAIziB,EAAEuS,UAAU,EAAG,GACnBiD,EAAIxV,EAAEuS,UAAU,EAAG,GACnBgD,EAAIvV,EAAEuS,UAAU,EAAG,KAInBiQ,EAAIxiB,EAAEuS,UAAU,EAAG,GACnBkQ,EAAIziB,EAAEuS,UAAU,EAAG,GACnBiD,EAAIxV,EAAEuS,UAAU,EAAG,GACnBgD,EAAIvV,EAAEuS,UAAU,EAAG,GACnBiQ,GAAKA,EACLC,GAAKA,EACLjN,GAAKA,EACLD,GAAKA,GAEF,CACH4M,IAAKO,SAASF,EAAG,IACjBJ,MAAOM,SAASD,EAAG,IACnBJ,KAAMK,SAASlN,EAAG,IAClBziB,MAAOwiB,EAAImN,SAASnN,EAAG,IAAM,IAAM,EAE1C,EAIGzZ,UAAWomB,GAAKpmB,WC/Bd6mB,GAAO,CACT5c,KAAM0b,GAAc,MAAO,OAC3Bja,MAAOma,GAAW,MAAO,aAAc,aACvC7lB,UAAW,YAAwD,IAArD8mB,EAAqD,EAArDA,IAAKC,EAAgD,EAAhDA,WAAYC,EAAoC,EAApCA,UAAoC,IAAzB/vB,MAAOuvB,OAAkB,MAAR,EAAQ,EAC/D,MAAQ,QACJhyB,KAAKuX,MAAM+a,GACX,KACAra,GAAQzM,UAAU8L,EAASib,IAC3B,KACAta,GAAQzM,UAAU8L,EAASkb,IAC3B,KACAlb,EAAS7U,EAAM+I,UAAUwmB,IACzB,GACP,GCbCrwB,GAAQ,CACV8T,KAAM,SAAC/F,GAAD,OAAOkiB,GAAKnc,KAAK/F,IAAMuiB,GAAIxc,KAAK/F,IAAM2iB,GAAK5c,KAAK/F,EAAhD,EACNwH,MAAO,SAACxH,GACJ,OAAIkiB,GAAKnc,KAAK/F,GACHkiB,GAAK1a,MAAMxH,GAEb2iB,GAAK5c,KAAK/F,GACR2iB,GAAKnb,MAAMxH,GAGXuiB,GAAI/a,MAAMxH,EAExB,EACDlE,UAAW,SAACkE,GACR,OAAOiI,EAASjI,GACVA,EACAA,EAAEF,eAAe,OACboiB,GAAKpmB,UAAUkE,GACf2iB,GAAK7mB,UAAUkE,EAC5B,GCHC+S,GAAM,SAACgQ,EAAMC,EAAIC,GAAX,OAAyBA,EAAWF,EAAOE,EAAWD,EAAKD,CAA3D,ECpBZ,SAASG,GAASjkB,EAAGkkB,EAAGpD,GAKpB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACD9gB,EAAc,GAATkkB,EAAIlkB,GAAS8gB,EACzBA,EAAI,GACGoD,EACPpD,EAAI,EAAI,EACD9gB,GAAKkkB,EAAIlkB,IAAM,EAAI,EAAI8gB,GAAK,EAChC9gB,CACV,CCHD,IAAMmkB,GAAiB,SAACL,EAAMC,EAAIhjB,GAC9B,IAAMqjB,EAAWN,EAAOA,EACxB,OAAOzyB,KAAKgzB,KAAKhzB,KAAKgX,IAAI,EAAGtH,GAAKgjB,EAAKA,EAAKK,GAAYA,GAC3D,EACKE,GAAa,CAAChB,GAAKL,GAAMS,IAE/B,SAASa,GAAOvxB,GACZ,IAFkB+N,EAEZmH,GAFYnH,EAEQ/N,EAFFsxB,GAAWE,MAAK,SAACtc,GAAD,OAAUA,EAAKpB,KAAK/F,EAApB,KAGxCie,GAAUtd,QAAQwG,GAAT,WAAoBlV,EAApB,yEACT,IAAIyxB,EAAQvc,EAAKK,MAAMvV,GAKvB,OAJIkV,IAASwb,KAETe,EDRR,YAA2D,IAArCd,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,UAAW/vB,EAAS,EAATA,MAC9C6vB,GAAO,IAEPE,GAAa,IACb,IAAIX,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GALAQ,GAAc,IAQT,CACD,IAAMM,EAAIL,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrC5jB,EAAI,EAAI6jB,EAAYK,EAC1BhB,EAAMe,GAASjkB,EAAGkkB,EAAGP,EAAM,EAAI,GAC/BR,EAAQc,GAASjkB,EAAGkkB,EAAGP,GACvBP,EAAOa,GAASjkB,EAAGkkB,EAAGP,EAAM,EAAI,EACnC,MAVGT,EAAMC,EAAQC,EAAOS,EAWzB,MAAO,CACHX,IAAK7xB,KAAKuX,MAAY,IAANsa,GAChBC,MAAO9xB,KAAKuX,MAAc,IAARua,GAClBC,KAAM/xB,KAAKuX,MAAa,IAAPwa,GACjBtvB,MAAAA,EAEP,CCjBe4wB,CAAWD,IAEhBA,CACV,CACD,IAAME,GAAW,SAACb,EAAMC,GACpB,IAAMa,EAAWL,GAAOT,GAClBe,EAASN,GAAOR,GAChBe,GAAU,UAAKF,GACrB,OAAO,SAAC7jB,GAKJ,OAJA+jB,EAAQ5B,IAAMiB,GAAeS,EAAS1B,IAAK2B,EAAO3B,IAAKniB,GACvD+jB,EAAQ3B,MAAQgB,GAAeS,EAASzB,MAAO0B,EAAO1B,MAAOpiB,GAC7D+jB,EAAQ1B,KAAOe,GAAeS,EAASxB,KAAMyB,EAAOzB,KAAMriB,GAC1D+jB,EAAQhxB,MAAQggB,GAAI8Q,EAAS9wB,MAAO+wB,EAAO/wB,MAAOiN,GAC3CkiB,GAAKpmB,UAAUioB,EACzB,CACJ,ECvBD,IAAMC,GAAkB,CACpBC,M9EZqB,gF8EarBC,SAAU,OACVnd,MAAO,OACPS,MAAOzM,IAELopB,GAAiB,CACnBF,MAAOlc,EACPmc,SAAU,SACVnd,MAAO,OACPS,MAAOvV,GAAMuV,OAEX4c,GAAkB,CACpBH,MAAOnc,EACPoc,SAAU,UACVnd,MAAO,OACPS,MAAOD,EAAOC,OAElB,SAAS6c,GAASzL,EAAlB,GAA2D,MAAjCqL,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,SAAUnd,EAAgB,EAAhBA,MAAOS,EAAS,EAATA,MACxC2R,EAAUP,EAAK0L,UAAUvC,MAAMkC,GAChC9K,IAELP,EAAK,MAAQsL,GAAY/K,EAAQ5a,OACjCqa,EAAK0L,UAAY1L,EAAK0L,UAAUhT,QAAQ2S,EAAOld,IAC/C,EAAA6R,EAAKhK,QAAO3Q,KAAZ,iBAAoBkb,EAAQqG,IAAIhY,KACnC,CACD,SAAS+c,GAAoBzpB,GACzB,IAAM0pB,EAAgB1pB,EAAM2pB,WACtB7L,EAAO,CACT9d,MAAO0pB,EACPF,UAAWE,EACX5V,OAAQ,GACR8V,QAAS,EACTC,UAAW,EACXC,WAAY,GAMhB,OAJIhM,EAAK9d,MAAMgL,SAAS,WACpBue,GAASzL,EAAMoL,IACnBK,GAASzL,EAAMuL,IACfE,GAASzL,EAAMwL,IACRxL,CACV,CACD,SAASiM,GAAkB7kB,GACvB,OAAOukB,GAAoBvkB,GAAG4O,MACjC,CACD,SAASkW,GAAkBtmB,GACvB,MAAkD+lB,GAAoB/lB,GAA9DoQ,EAAR,EAAQA,OAAQ+V,EAAhB,EAAgBA,UAAWD,EAA3B,EAA2BA,QAASJ,EAApC,EAAoCA,UAC9BS,EAAYnW,EAAOrQ,OACzB,OAAO,SAACyB,GAEJ,IADA,IAAIglB,EAASV,EACJjmB,EAAI,EAAGA,EAAI0mB,EAAW1mB,IAEvB2mB,EADA3mB,EAAIqmB,EACKM,EAAO1T,QAAQ0S,GAAgBjd,MAAO/G,EAAE3B,IAE5CA,EAAIqmB,EAAUC,EACVK,EAAO1T,QAAQ6S,GAAepd,MAAO9U,GAAM6J,UAAUkE,EAAE3B,KAGvD2mB,EAAO1T,QAAQ8S,GAAgBrd,MAAOa,EAAS5H,EAAE3B,KAGlE,OAAO2mB,CACV,CACJ,CACD,IAAMC,GAAuB,SAACjlB,GAAD,MAAoB,kBAANA,EAAiB,EAAIA,CAAnC,EAM7B,IAAMklB,GAAU,CACZnf,KA/EJ,SAAc/F,GACV,IAAIuO,EAAI4W,EACR,OAAQC,MAAMplB,IACViI,EAASjI,MACwB,QAA9BuO,EAAKvO,EAAE+hB,MAAMja,UAAgC,IAAPyG,OAAgB,EAASA,EAAGhQ,SAAW,KAC3C,QAA9B4mB,EAAKnlB,EAAE+hB,MAAMha,UAAgC,IAAPod,OAAgB,EAASA,EAAG5mB,SAAW,GAChF,CACX,EAyEGiJ,MAAOqd,GACPC,kBAAAA,GACAO,kBATJ,SAA2BrlB,GACvB,IAAMslB,EAAST,GAAkB7kB,GAEjC,OADoB8kB,GAAkB9kB,EAC/BulB,CAAYD,EAAO9F,IAAIyF,IACjC,GC5EKO,GAAe,SAACrW,EAAQ/Q,GAAT,OAAoB,SAACa,GAAD,gBAAUA,EAAI,EAAIb,EAAS+Q,EAA3B,CAApB,EACrB,SAASsW,GAAStW,EAAQ/Q,GACtB,MAAsB,kBAAX+Q,EACA,SAACnP,GAAD,OAAO+S,GAAI5D,EAAQ/Q,EAAQ4B,EAA3B,EAEF/N,GAAM8T,KAAKoJ,GACTyU,GAASzU,EAAQ/Q,GAGjB+Q,EAAO9I,WAAW,QACnBmf,GAAarW,EAAQ/Q,GACrBsnB,GAAWvW,EAAQ/Q,EAEhC,CACD,IAAMunB,GAAW,SAAC5C,EAAMC,GACpB,IAAMgC,GAAS,QAAIjC,GACbgC,EAAYC,EAAOzmB,OACnBqnB,EAAa7C,EAAKvD,KAAI,SAACqG,EAAUxnB,GAAX,OAAiBonB,GAASI,EAAU7C,EAAG3kB,GAAvC,IAC5B,OAAO,SAAC2B,GACJ,IAAK,IAAI3B,EAAI,EAAGA,EAAI0mB,EAAW1mB,IAC3B2mB,EAAO3mB,GAAKunB,EAAWvnB,GAAG2B,GAE9B,OAAOglB,CACV,CACJ,EACKc,GAAY,SAAC3W,EAAQ/Q,GACvB,IAAM4mB,GAAS,kBAAK7V,GAAW/Q,GACzBwnB,EAAa,CAAC,EACpB,IAAK,IAAMlnB,KAAOsmB,OACM1wB,IAAhB6a,EAAOzQ,SAAsCpK,IAAhB8J,EAAOM,KACpCknB,EAAWlnB,GAAO+mB,GAAStW,EAAOzQ,GAAMN,EAAOM,KAGvD,OAAO,SAACsB,GACJ,IAAK,IAAMtB,KAAOknB,EACdZ,EAAOtmB,GAAOknB,EAAWlnB,GAAKsB,GAElC,OAAOglB,CACV,CACJ,EACKU,GAAa,SAACvW,EAAQ/Q,GACxB,IAAM2nB,EAAWb,GAAQJ,kBAAkB1mB,GACrC4nB,EAAczB,GAAoBpV,GAClC8W,EAAc1B,GAAoBnmB,GAIxC,OAHuB4nB,EAAYtB,UAAYuB,EAAYvB,SACvDsB,EAAYrB,YAAcsB,EAAYtB,WACtCqB,EAAYpB,YAAcqB,EAAYrB,WAE/BnP,GAAKkQ,GAASK,EAAYpX,OAAQqX,EAAYrX,QAASmX,IAG9D/H,IAAQ,EAAD,0BAA0B7O,EAA1B,kBAA0C/Q,EAA1C,6KACAonB,GAAarW,EAAQ/Q,GAEnC,ECjDK6kB,GAAW,SAACF,EAAMC,EAAIloB,GACxB,IAAMorB,EAAmBlD,EAAKD,EAC9B,OAA4B,IAArBmD,EAAyB,GAAKprB,EAAQioB,GAAQmD,CACxD,ECLKC,GAAY,SAACpD,EAAMC,GAAP,OAAc,SAAC/jB,GAAD,OAAO8T,GAAIgQ,EAAMC,EAAI/jB,EAArB,CAAd,EAgBlB,SAASmnB,GAAapB,EAAQjG,EAAMsH,GAIhC,IAHA,IAhBwBrmB,EAgBlBsmB,EAAS,GACTC,EAAeF,IAhBJ,kBADOrmB,EAiB+BglB,EAAO,IAfnDmB,GAEW,kBAANnmB,EACL/N,GAAM8T,KAAK/F,GAAK4jB,GAAW8B,GAE7BzlB,MAAMC,QAAQF,GACZ2lB,GAEW,kBAAN3lB,EACL8lB,GAEJK,IAKDK,EAAYxB,EAAOzmB,OAAS,EACzBF,EAAI,EAAGA,EAAImoB,EAAWnoB,IAAK,CAChC,IAAIooB,EAAQF,EAAavB,EAAO3mB,GAAI2mB,EAAO3mB,EAAI,IAC/C,GAAI0gB,EAAM,CACN,IAAM2H,EAAiBzmB,MAAMC,QAAQ6e,GAAQA,EAAK1gB,IAAMtD,GAAOgkB,EAC/D0H,EAAQhR,GAAKiR,EAAgBD,EAChC,CACDH,EAAOroB,KAAKwoB,EACf,CACD,OAAOH,CACV,CAoBD,SAASK,GAAYC,EAAO5B,GAAqD,6DAAJ,CAAC,EAAG,IAA3C5d,MAAOyf,OAAoC,SAApB9H,EAAoB,EAApBA,KAAM0H,EAAc,EAAdA,MACzDK,EAAcF,EAAMroB,OAM1B,GALA0f,GAAU6I,IAAgB9B,EAAOzmB,OAAQ,wDAKrB,IAAhBuoB,EACA,OAAO,kBAAM9B,EAAO,EAAb,EAEP4B,EAAM,GAAKA,EAAME,EAAc,KAC/BF,GAAQ,QAAIA,GAAOG,UACnB/B,GAAS,QAAIA,GAAQ+B,WAEzB,IAAMT,EAASF,GAAapB,EAAQjG,EAAM0H,GACpCD,EAAYF,EAAO/nB,OACnByoB,EAAe,SAAChnB,GAClB,IAAI3B,EAAI,EACR,GAAImoB,EAAY,EACZ,KAAOnoB,EAAIuoB,EAAMroB,OAAS,KAClByB,EAAI4mB,EAAMvoB,EAAI,IADOA,KAKjC,IAAM4oB,EAAkBhE,GAAS2D,EAAMvoB,GAAIuoB,EAAMvoB,EAAI,GAAI2B,GACzD,OAAOsmB,EAAOjoB,GAAG4oB,EACpB,EACD,OAAOJ,EACD,SAAC7mB,GAAD,OAAOgnB,EAAa5f,EAAMwf,EAAM,GAAIA,EAAME,EAAc,GAAI9mB,GAA5D,EACAgnB,CACT,CCvFD,SAASE,GAAcC,GACnB,IAAM/X,EAAS,CAAC,GAEhB,OCFJ,SAAoBA,EAAQgY,GAExB,IADA,IAAM/f,EAAM+H,EAAOA,EAAO7Q,OAAS,GAC1BF,EAAI,EAAGA,GAAK+oB,EAAW/oB,IAAK,CACjC,IAAMgpB,EAAiBpE,GAAS,EAAGmE,EAAW/oB,GAC9C+Q,EAAOnR,KAAK8U,GAAI1L,EAAK,EAAGggB,GAC3B,CACJ,CDLGC,CAAWlY,EAAQ+X,EAAI5oB,OAAS,GACzB6Q,CACV,CEID,SAASmY,GAAT,GAA8F,IAHvE3Y,EAAQrT,EAG+D,IAAzEC,SAAAA,OAAyE,MAA9D,IAA8D,EAA9CgsB,EAA8C,EAAzDD,UAA2BE,EAA8B,EAA9BA,MAA8B,IAAvB1I,KAAAA,OAAuB,MAAhB,YAAgB,EAKpF2I,ECfY,SAAC3I,GACnB,OAAO9e,MAAMC,QAAQ6e,IAA4B,kBAAZA,EAAK,EAC7C,CDa2B4I,CAAc5I,GAChCA,EAAKS,IAAIgC,IACTA,GAA2BzC,GAK3BhoB,EAAQ,CACV6wB,MAAM,EACN9sB,MAAO0sB,EAAe,IAKpBK,EE7BV,SAA8BzY,EAAQ5T,GAClC,OAAO4T,EAAOoQ,KAAI,SAACsI,GAAD,OAAOA,EAAItsB,CAAX,GACrB,CF2ByBusB,CAGtBN,GAASA,EAAMlpB,SAAWipB,EAAejpB,OACnCkpB,EACAP,GAAcM,GAAiBhsB,GAC/BwsB,EAAoBrB,GAAYkB,EAAeL,EAAgB,CACjEzI,KAAM9e,MAAMC,QAAQwnB,GACdA,GA9BS9Y,EA+BK4Y,EA/BGjsB,EA+BamsB,EA9BjC9Y,EAAO4Q,KAAI,kBAAMjkB,GAAU2jB,EAAhB,IAA2BtH,OAAO,EAAGhJ,EAAOrQ,OAAS,MAgCvE,MAAO,CACH0pB,mBAAoBzsB,EACpB4B,KAAM,SAAC2iB,GAGH,OAFAhpB,EAAM+D,MAAQktB,EAAkBjI,GAChChpB,EAAM6wB,KAAO7H,GAAKvkB,EACXzE,CACV,EAER,CG1CD,SAASmxB,GAAkBpK,EAAUqK,GACjC,OAAOA,EAAgBrK,GAAY,IAAOqK,GAAiB,CAC9D,CCLD,SAASC,GAAsBC,EAActI,EAAG1nB,GAC5C,IAAMiwB,EAAQh4B,KAAKgX,IAAIyY,EAFI,EAEwB,GACnD,OAAOmI,GAAkB7vB,EAAUgwB,EAAaC,GAAQvI,EAAIuI,EAC/D,CCFD,IAAMC,GAAU,KAKhB,SAASC,GAAT,GAAgF,IACxEC,EACAC,EAFwE,IAA1DltB,SAAAA,OAA0D,MAA/C,IAA+C,MAA1CmtB,OAAAA,OAA0C,MAAjC,IAAiC,MAA3B7K,SAAAA,OAA2B,MAAhB,EAAgB,MAAb8K,KAAAA,OAAa,MAAN,EAAM,EAG5E5K,GAAQxiB,GAAY0iB,GANJ,IAMwC,8CACxD,IAAI2K,EAAe,EAAIF,EAIvBE,EAAezhB,EAVA,IACA,EAS8ByhB,GAC7CrtB,EAAW4L,EAbK,IACA,GAY2BgX,GAAsB5iB,IAC7DqtB,EAAe,GAIfJ,EAAW,SAACK,GACR,IAAMC,EAAmBD,EAAeD,EAClCrS,EAAQuS,EAAmBvtB,EAC3B+Z,EAAIwT,EAAmBjL,EACvBtI,EAAIwT,GAAgBF,EAAcD,GAClCjK,EAAItuB,KAAK24B,KAAKzS,GACpB,OAAO+R,GAAWhT,EAAIC,EAAKoJ,CAC9B,EACD8J,EAAa,SAACI,GACV,IACMtS,EADmBsS,EAAeD,EACPrtB,EAC3BqjB,EAAIrI,EAAQsH,EAAWA,EACvBzJ,EAAI/jB,KAAKixB,IAAIsH,EAAc,GAAKv4B,KAAKixB,IAAIuH,EAAc,GAAKttB,EAC5D0tB,EAAI54B,KAAK24B,KAAKzS,GACdiM,EAAIuG,GAAgB14B,KAAKixB,IAAIuH,EAAc,GAAID,GAErD,QADgBJ,EAASK,GAAgBP,GAAU,GAAK,EAAI,KACzC1J,EAAIxK,GAAK6U,GAAMzG,CACrC,IAMDgG,EAAW,SAACK,GAGR,OAFUx4B,KAAK24B,KAAKH,EAAettB,KACxBstB,EAAehL,GAAYtiB,EAAW,GAC1C,IACV,EACDktB,EAAa,SAACI,GAGV,OAFUx4B,KAAK24B,KAAKH,EAAettB,IACIA,EAAWA,GAAvCsiB,EAAWgL,GAEzB,GAEL,IACMA,EAmBV,SAAyBL,EAAUC,EAAYS,GAE3C,IADA,IAAIC,EAASD,EACJ9qB,EAAI,EAAGA,EAHG,GAGiBA,IAChC+qB,GAAkBX,EAASW,GAAUV,EAAWU,GAEpD,OAAOA,CACV,CAzBwBC,CAAgBZ,EAAUC,EAD1B,EAAIltB,GAGzB,GADAA,EAAW0iB,GAAsB1iB,GAC7B4pB,MAAM0D,GACN,MAAO,CACHQ,UAAW,IACXC,QAAS,GACT/tB,SAAAA,GAIJ,IAAM8tB,EAAYh5B,KAAKixB,IAAIuH,EAAc,GAAKF,EAC9C,MAAO,CACHU,UAAAA,EACAC,QAAwB,EAAfV,EAAmBv4B,KAAKgzB,KAAKsF,EAAOU,GAC7C9tB,SAAAA,EAGX,CASD,SAASwtB,GAAgBF,EAAcD,GACnC,OAAOC,EAAex4B,KAAKgzB,KAAK,EAAIuF,EAAeA,EACtD,C,6CClFKW,GAAe,CAAC,WAAY,UAC5BC,GAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,GAAatuB,EAASqC,GAC3B,OAAOA,EAAKgD,MAAK,SAAC/B,GAAD,YAA0BpK,IAAjB8G,EAAQsD,EAAjB,GACpB,CAwBD,SAASirB,GAAT,GAAiE,IAuBzDC,EAvBUrC,EAA+C,EAA/CA,UAAWsC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,UAAc1uB,EAAW,SACvD+T,EAASoY,EAAU,GACnBnpB,EAASmpB,EAAUA,EAAUhpB,OAAS,GAKtCxH,EAAQ,CAAE6wB,MAAM,EAAO9sB,MAAOqU,GACpC,EA/BJ,SAA0B/T,GACtB,IAAI2uB,GAAgB,QAChBjM,SAAU,EACVwL,UAAW,IACXC,QAAS,GACTX,KAAM,EACNoB,wBAAwB,GACrB5uB,GAGP,IAAKsuB,GAAatuB,EAASquB,KACvBC,GAAatuB,EAASouB,IAAe,CACrC,IAAMS,EAAUzB,GAAWptB,IAC3B2uB,GAAgB,0BACTA,GACAE,GAFM,IAGTnM,SAAU,EACV8K,KAAM,KAEIoB,wBAAyB,CAC1C,CACD,OAAOD,CACV,CASqFG,CAAiB9uB,GAA3FkuB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASX,EAA5B,EAA4BA,KAAM9K,EAAlC,EAAkCA,SAAUtiB,EAA5C,EAA4CA,SAAUwuB,EAAtD,EAAsDA,uBAChDG,EAAkBrM,GAAYM,GAAsBN,GAAY,EAChE+K,EAAeU,GAAW,EAAIj5B,KAAKgzB,KAAKgG,EAAYV,IACpDwB,EAAehsB,EAAS+Q,EACxBkb,EAAsBjM,GAAsB9tB,KAAKgzB,KAAKgG,EAAYV,IAQlE0B,EAAkBh6B,KAAKuwB,IAAIuJ,GAAgB,EAIjD,GAHAN,IAAcA,EAAYQ,EAAkB,IAAO,GACnDT,IAAcA,EAAYS,EAAkB,KAAQ,IAEhDzB,EAAe,EAAG,CAClB,IAAM0B,EAAcvB,GAAgBqB,EAAqBxB,GAEzDe,EAAgB,SAAC7J,GACb,IAAM0I,EAAWn4B,KAAK24B,KAAKJ,EAAewB,EAAsBtK,GAChE,OAAQ3hB,EACJqqB,IACO0B,EACCtB,EAAewB,EAAsBD,GACrCG,EACAj6B,KAAK2wB,IAAIsJ,EAAcxK,GACvBqK,EAAe95B,KAAKk6B,IAAID,EAAcxK,GACrD,CACJ,MACI,GAAqB,IAAjB8I,EAELe,EAAgB,SAAC7J,GAAD,OAAO3hB,EACnB9N,KAAK24B,KAAKoB,EAAsBtK,IAC3BqK,GACID,EAAkBE,EAAsBD,GAAgBrK,EAHrD,MAKf,CAED,IAAM0K,EAAoBJ,EAAsB/5B,KAAKgzB,KAAKuF,EAAeA,EAAe,GACxFe,EAAgB,SAAC7J,GACb,IAAM0I,EAAWn4B,KAAK24B,KAAKJ,EAAewB,EAAsBtK,GAE1D2K,EAAWp6B,KAAK+W,IAAIojB,EAAoB1K,EAAG,KACjD,OAAQ3hB,EACHqqB,IACK0B,EACEtB,EAAewB,EAAsBD,GACrC95B,KAAKq6B,KAAKD,GACVD,EACIL,EACA95B,KAAKs6B,KAAKF,IAClBD,CACX,CACJ,CACD,MAAO,CACHxC,mBAAoB+B,GAAyBxuB,GAAmB,KAChE4B,KAAM,SAAC2iB,GACH,IAAM1nB,EAAUuxB,EAAc7J,GAC9B,GAAKiK,EAqBDjzB,EAAM6wB,KAAO7H,GAAKvkB,MArBO,CACzB,IAAImX,EAAkBwX,EACZ,IAANpK,IAOIpN,EADAkW,EAAe,EACGT,GAAsBwB,EAAe7J,EAAG1nB,GAGxC,GAG1B,IAAMwyB,EAA2Bv6B,KAAKuwB,IAAIlO,IAAoBmX,EACxDgB,EAA+Bx6B,KAAKuwB,IAAIziB,EAAS/F,IAAYwxB,EACnE9yB,EAAM6wB,KACFiD,GAA4BC,CACnC,CAKD,OADA/zB,EAAM+D,MAAQ/D,EAAM6wB,KAAOxpB,EAAS/F,EAC7BtB,CACV,EAER,CC3HD,SAASg0B,GAAT,GAAiL,IAA9JxD,EAA8J,EAA9JA,UAA8J,IAAnJzJ,SAAAA,OAAmJ,MAAxI,EAAwI,MAAnIkN,MAAAA,OAAmI,MAA3H,GAA2H,MAAtHC,aAAAA,OAAsH,MAAvG,IAAuG,MAAlGC,cAAAA,OAAkG,MAAlF,GAAkF,MAA9EC,gBAAAA,OAA8E,MAA5D,IAA4D,EAAvDC,EAAuD,EAAvDA,aAAc/jB,EAAyC,EAAzCA,IAAKC,EAAoC,EAApCA,IAAoC,IAA/BuiB,UAAAA,OAA+B,MAAnB,GAAmB,EAAdC,EAAc,EAAdA,UACzJ3a,EAASoY,EAAU,GACnBxwB,EAAQ,CACV6wB,MAAM,EACN9sB,MAAOqU,GAGLkc,EAAkB,SAACrrB,GACrB,YAAY1L,IAAR+S,EACOC,OACChT,IAARgT,GAEGhX,KAAKuwB,IAAIxZ,EAAMrH,GAAK1P,KAAKuwB,IAAIvZ,EAAMtH,GAD/BqH,EAC0CC,CACxD,EACGgkB,EAAYN,EAAQlN,EAClByN,EAAQpc,EAASmc,EACjBltB,OAA0B9J,IAAjB82B,EAA6BG,EAAQH,EAAaG,GAK7DntB,IAAWmtB,IACXD,EAAYltB,EAAS+Q,GACzB,IAcIqc,EACAC,EAfEC,EAAY,SAAC3L,GAAD,OAAQuL,EAAYh7B,KAAK24B,KAAKlJ,EAAIkL,EAAlC,EACZU,EAAa,SAAC5L,GAAD,OAAO3hB,EAASstB,EAAU3L,EAA1B,EACb6L,EAAgB,SAAC7L,GACnB,IAAMvJ,EAAQkV,EAAU3L,GAClB8L,EAASF,EAAW5L,GAC1BhpB,EAAM6wB,KAAOt3B,KAAKuwB,IAAIrK,IAAUqT,EAChC9yB,EAAM+D,MAAQ/D,EAAM6wB,KAAOxpB,EAASytB,CACvC,EASKC,EAAqB,SAAC/L,GAjCN,IAAC/f,KAkCAjJ,EAAM+D,WAlCSxG,IAAR+S,GAAqBrH,EAAIqH,QAAiB/S,IAARgT,GAAqBtH,EAAIsH,KAoCrFkkB,EAAsBzL,EACtB0L,EAAW9B,GAAO,CACdpC,UAAW,CAACxwB,EAAM+D,MAAOuwB,EAAgBt0B,EAAM+D,QAC/CgjB,SAAUsK,GAAsBuD,EAAY5L,EAAGhpB,EAAM+D,OACrDyuB,QAAS2B,EACT5B,UAAW6B,EACXtB,UAAAA,EACAC,UAAAA,IAEP,EAED,OADAgC,EAAmB,GACZ,CACH7D,mBAAoB,KACpB7qB,KAAM,SAAC2iB,GAOH,IAAIgM,GAAkB,EAUtB,OATKN,QAAoCn3B,IAAxBk3B,IACbO,GAAkB,EAClBH,EAAc7L,GACd+L,EAAmB/L,SAMKzrB,IAAxBk3B,GAAqCzL,EAAIyL,EAClCC,EAASruB,KAAK2iB,EAAIyL,KAGxBO,GAAmBH,EAAc7L,GAC3BhpB,EAEd,EAER,CCjFD,IAAMi1B,GAAkB,SAAChoB,GACrB,IAAMioB,EAAgB,SAAC,GAAD,IAAGxV,EAAH,EAAGA,UAAH,OAAmBzS,EAAOyS,EAA1B,EACtB,MAAO,CACHrW,MAAO,kBAAMiY,GAAAA,OAAa4T,GAAe,EAAlC,EACPC,KAAM,kBAAM1T,GAAYyT,EAAlB,EAKNE,IAAK,kBAAM5V,GAAUG,aAAeH,GAAUE,UAAY2V,YAAYD,KAAjE,EAEZ,ECTD,SAASE,GAAsBC,GAI3B,IAHA,IAAI9wB,EAAW,EAEXzE,EAAQu1B,EAAUlvB,KAAK5B,IACnBzE,EAAM6wB,MAAQpsB,EALG,KAMrBA,GAHa,GAIbzE,EAAQu1B,EAAUlvB,KAAK5B,GAE3B,OAAOA,GATkB,IASiB+wB,IAAW/wB,CACxD,C,sICLKgxB,GAAQ,CACVC,MAAO1B,GACPA,QAAAA,GACA2B,MAAOnF,GACPA,UAAWA,GACXoC,OAAAA,IASJ,SAASgD,GAAT,GAAgO,IAGxNC,EACAC,EAYAC,EAhBwN,IAAxMC,SAAAA,OAAwM,aAAvLpxB,MAAAA,OAAuL,MAA/K,EAA+K,MAA5KqxB,OAAAA,OAA4K,MAAnKhB,GAAmK,EAAvIiB,EAAuI,EAAlJ1F,UAAkJ,IAA1HpgB,KAAAA,OAA0H,MAAnH,YAAmH,MAAtG+lB,OAAAA,OAAsG,MAA7F,EAA6F,MAA1FC,YAAAA,OAA0F,MAA5E,EAA4E,MAAzEC,WAAAA,OAAyE,MAA5D,OAA4D,EAApDC,EAAoD,EAApDA,OAAQC,EAA4C,EAA5CA,OAAQC,EAAoC,EAApCA,WAAYC,EAAwB,EAAxBA,SAAapyB,EAAW,SACxNqyB,EAAQ,EACRC,GAAa,EAOXC,EAAwB,WAC1Bd,EAAyB,IAAIe,SAAQ,SAACC,GAClCjB,EAAyBiB,CAC5B,GACJ,EAEDF,IAEA,IAMIG,EANEC,EAAmBvB,GAAMrlB,IAASogB,GAOpCwG,IAAqBxG,IACK,kBAAnB0F,EAAY,KACnBa,EAAwBnH,GAAY,CAAC,EAAG,KAAMsG,EAAa,CACvD7lB,OAAO,IAEX6lB,EAAc,CAAC,EAAG,MAEtB,IACIe,EADE1B,EAAYyB,GAAiB,kBAAK3yB,GAAN,IAAemsB,UAAW0F,KAEzC,WAAfG,IACAY,EAAoBD,GAAiB,kBAC9B3yB,GAD6B,IAEhCmsB,WAAW,QAAI0F,GAAalG,UAC5BjJ,WAAY1iB,EAAQ0iB,UAAY,OAGxC,IAAImQ,EAAY,OACZC,EAAW,KACXC,EAAY,KACZC,EAAa,KASoB,OAAjC9B,EAAUrE,oBAA+BiF,IACzCZ,EAAUrE,mBAAqBoE,GAAsBC,IAEzD,IAAQrE,EAAuBqE,EAAvBrE,mBACJoG,EAAmB9B,IACnB+B,EAAgB/B,IACO,OAAvBtE,IAEAqG,GADAD,EAAmBpG,EAAqBkF,IACJD,EAAS,GAAKC,GAEtD,IAAIoB,EAAc,EACZC,EAAO,SAAC/X,GACV,GAAkB,OAAd0X,EAAJ,CAQIV,EAAQ,IACRU,EAAY79B,KAAK+W,IAAI8mB,EAAW1X,IAChCgX,EAAQ,IACRU,EAAY79B,KAAK+W,IAAIoP,EAAY6X,EAAgBb,EAAOU,IAW5D,IAAMM,GATFF,EADa,OAAbL,EACcA,EAMA59B,KAAKuX,MAAM4O,EAAY0X,GAAaV,GAGf9xB,GAAS8xB,GAAS,EAAI,GAAK,GAC5DiB,EAAiBjB,GAAS,EAAIgB,EAAmB,EAAIA,EAAmBH,EAC9EC,EAAcj+B,KAAKgX,IAAImnB,EAAkB,GAKvB,aAAdR,GAAyC,OAAbC,IAC5BK,EAAcD,GAElB,IAAIK,EAAUJ,EACVK,EAAiBtC,EACrB,GAAIY,EAAQ,CAMR,IAAMjK,EAAWsL,EAAcF,EAK3BQ,EAAmBv+B,KAAKw+B,MAAM7L,GAK9B8L,EAAoB9L,EAAW,GAK9B8L,GAAqB9L,GAAY,IAClC8L,EAAoB,GAEF,IAAtBA,GAA2BF,IAC3BA,EAAmBv+B,KAAK+W,IAAIwnB,EAAkB3B,EAAS,GAIvD,IAAM8B,EAAiBruB,QAAQkuB,EAAmB,GAC9CG,IACmB,YAAf5B,GACA2B,EAAoB,EAAIA,EACpB5B,IACA4B,GAAqB5B,EAAckB,IAGnB,WAAfjB,IACLwB,EAAiBZ,IAGzB,IAAI/uB,EAAImI,EAAM,EAAG,EAAG2nB,GAChBR,EAAcD,IACdrvB,EAAmB,YAAfmuB,GAA4B4B,EAAiB,EAAI,GAEzDL,EAAU1vB,EAAIovB,CACjB,CAMD,IAAMt3B,EAAQ23B,EACR,CAAE9G,MAAM,EAAO9sB,MAAOmyB,EAAY,IAClC2B,EAAexxB,KAAKuxB,GACtBb,IACA/2B,EAAM+D,MAAQgzB,EAAsB/2B,EAAM+D,QAE9C,IAAM8sB,EAAS7wB,EAAT6wB,KACD8G,GAAyC,OAAvBzG,IACnBL,EAAO6F,GAAS,EAAIc,GAAeD,EAAgBC,GAAe,GAEtE,IAAMU,EAAmC,OAAbf,IACT,aAAdD,GAA2C,YAAdA,GAA2BrG,GAO7D,OANI4F,GACAA,EAASz2B,EAAM+D,OAEfm0B,GACAC,IAEGn4B,CAvGG,CAwGb,EACKo4B,EAAsB,WACxBrC,GAAmBA,EAAgBZ,OACnCY,OAAkBx4B,CACrB,EACKuF,EAAS,WACXo0B,EAAY,OACZkB,IACAvC,IACAe,IACAQ,EAAYC,EAAa,IAC5B,EACKc,EAAS,WACXjB,EAAY,WACZV,GAAcA,IACd4B,IACAvC,GACH,EACKwC,EAAO,WACT,IAAI1B,EAAJ,CAEKZ,IACDA,EAAkBE,EAAOwB,IAC7B,IAAMrC,EAAMW,EAAgBX,MAC5BkB,GAAUA,IACO,OAAba,EACAC,EAAYhC,EAAM+B,EAEZC,GAA2B,aAAdF,IACnBE,EAAYhC,GAEE,aAAd8B,GACAN,IAEJS,EAAaD,EACbD,EAAW,KAKXD,EAAY,UACZnB,EAAgB1sB,OArBN,CAsBb,EACG2sB,GACAqC,IAEJ,IAAMC,EAAW,CACbC,KADa,SACRzB,EAAS0B,GACV,OAAO1C,EAAuByC,KAAKzB,EAAS0B,EAC/C,EACGC,WACA,OAAOpR,GAAsBmQ,EAChC,EACGiB,SAAKC,GACLA,EAAUvR,GAAsBuR,GAChClB,EAAckB,EACG,OAAbvB,GAAsBpB,GAA6B,IAAVW,EAIzCU,EAAYrB,EAAgBX,MAAQsD,EAAUhC,EAH9CS,EAAWuB,CAKlB,EACGj0B,eACA,IAAMA,EAA4C,OAAjC8wB,EAAUrE,mBACrBoE,GAAsBC,GACtBA,EAAUrE,mBAChB,OAAO7J,GAAsB5iB,EAChC,EACGiyB,YACA,OAAOA,CACV,EACGA,UAAMiC,GACFA,IAAajC,GAAUX,IAE3BW,EAAQiC,EACRL,EAASG,KAAOpR,GAAsBmQ,GACzC,EACGx3B,YACA,OAAOk3B,CACV,EACDmB,KAAAA,EACAO,MAAO,WACH1B,EAAY,SACZC,EAAWK,CACd,EACDrC,KAAM,WACFwB,GAAa,EACK,SAAdO,IAEJA,EAAY,OACZX,GAAUA,IACVzzB,IACH,EACDA,OAAQ,WACe,OAAfu0B,GACAI,EAAKJ,GACTv0B,GACH,EACD+1B,SAAU,WACN3B,EAAY,UACf,EACD4B,OAAQ,SAAClB,GAEL,OADAR,EAAY,EACLK,EAAKG,EACf,GAEL,OAAOU,CACV,C,iCCjSKS,GAAoB,IAAI3pB,IAAI,CAC9B,UACA,WACA,SACA,YACA,oBAgBJ,SAAS4pB,GAA2Bj1B,EAAOk1B,EAA3C,GAA4F,EAApCxC,SAAoC,IAA1BD,EAA0B,EAA1BA,WAAenyB,EAAW,SAOxF,KAN+BykB,GAASH,SACpCoQ,GAAkBpqB,IAAIsqB,KACrB50B,EAAQ+xB,aACc,WAAvB/xB,EAAQgyB,YACY,IAApBhyB,EAAQmuB,SACS,YAAjBnuB,EAAQ+L,MAER,OAAO,EAIX,IACIylB,EACAC,EAFAa,GAAa,EAOXC,EAAwB,WAC1Bd,EAAyB,IAAIe,SAAQ,SAACC,GAClCjB,EAAyBiB,CAC5B,GACJ,EAEDF,IACA,IAAMpG,EAA2CnsB,EAA3CmsB,UAAN,EAAiDnsB,EAAhCI,SAAAA,OAAjB,MAA4B,IAA5B,EAAiCujB,EAAgB3jB,EAAhB2jB,KAAM0I,EAAUrsB,EAAVqsB,MAIvC,GAjCkC,SAACuI,EAAW50B,GAAZ,MAAyC,WAAjBA,EAAQ+L,MACpD,oBAAd6oB,IACCxR,GAAuBpjB,EAAQ2jB,KAFE,CAiC9BkR,CAA8BD,EAAW50B,GAAU,CAanD,IAZA,IAAM80B,EAAkBvD,IAAa,kBAC9BvxB,GAD6B,IAEhC8xB,OAAQ,EACRvxB,MAAO,KAEP5E,EAAQ,CAAE6wB,MAAM,EAAO9sB,MAAOysB,EAAU,IACtC4I,EAAwB,GAK1BpQ,EAAI,GACAhpB,EAAM6wB,MAAQ7H,EA/CV,KAgDRhpB,EAAQm5B,EAAgBL,OAAO9P,GAC/BoQ,EAAsBlyB,KAAKlH,EAAM+D,OACjCilB,GAvDQ,GAyDZ0H,OAAQnzB,EACRizB,EAAY4I,EACZ30B,EAAWukB,EA3DC,GA4DZhB,EAAO,QACV,CACD,IAAMxd,ECnFV,SAAsBiQ,EAASwe,EAAWzI,GAAwF,6DAAJ,CAAC,EAAG,IAA3E5rB,MAAAA,OAA2E,MAAnE,EAAmE,EAAhEH,EAAgE,EAAhEA,SAAgE,IAAtD0xB,OAAAA,OAAsD,MAA7C,EAA6C,MAA1CE,WAAAA,OAA0C,MAA7B,OAA6B,EAArBrO,EAAqB,EAArBA,KAAM0I,EAAe,EAAfA,MACzG2I,GAAkB,WAAGJ,EAAYzI,GACnCE,IACA2I,EAAgBhhB,OAASqY,GAC7B,IAAMlsB,EAASgkB,GAAwBR,GAMvC,OAFI9e,MAAMC,QAAQ3E,KACd60B,EAAgB70B,OAASA,GACtBiW,EAAQhR,QAAQ4vB,EAAiB,CACpCz0B,MAAAA,EACAH,SAAAA,EACAD,OAAS0E,MAAMC,QAAQ3E,GAAmB,SAATA,EACjC80B,KAAM,OACNC,WAAYpD,EAAS,EACrBqD,UAA0B,YAAfnD,EAA2B,YAAc,UAE3D,CDiEqBoD,CAAa11B,EAAM21B,MAAMp4B,QAAS23B,EAAWzI,GAAjC,QAAC,UACxBnsB,GADuB,IAE1BI,SAAAA,EASAujB,KAAMA,EACN0I,MAAAA,KAEEiJ,EAAkB,kBAAMnvB,EAAU1H,QAAhB,EAClB82B,EAAa,WACftY,GAAAA,OAAaqY,GACb9D,IACAe,GACH,EAiBD,OARApsB,EAAUqvB,SAAW,WACjB91B,EAAM6K,IElHd,SAA0B4hB,EAA1B,GAAsE,IAA/B2F,EAA+B,EAA/BA,OAA+B,IAAvBE,WAI3C,OAAO7F,EAHO2F,GAAyB,eAD2B,MAAV,OAAU,IACjBA,EAAS,IAAM,EAC1D,EACA3F,EAAUhpB,OAAS,EAE5B,CF6GiBsyB,CAAiBtJ,EAAWnsB,IACtCmyB,GAAcA,IACdoD,GACH,EAIM,CACHrB,KADG,SACEzB,EAAS0B,GACV,OAAO1C,EAAuByC,KAAKzB,EAAS0B,EAC/C,EACGC,WACA,OAAOpR,GAAsB7c,EAAUgtB,aAAe,EACzD,EACGiB,SAAKC,GACLluB,EAAUgtB,YAAcrQ,GAAsBuR,EACjD,EACGhC,YACA,OAAOlsB,EAAUuvB,YACpB,EACGrD,UAAMiC,GACNnuB,EAAUuvB,aAAepB,CAC5B,EACGl0B,eACA,OAAO4iB,GAAsB5iB,EAChC,EACD4zB,KAAM,WACE1B,IAEJnsB,EAAU6tB,OAIV5W,GAAYkY,GACf,EACDf,MAAO,kBAAMpuB,EAAUouB,OAAhB,EACPzD,KAAM,WAEF,GADAwB,GAAa,EACe,SAAxBnsB,EAAU0sB,UAAd,CAUA,IAAQM,EAAgBhtB,EAAhBgtB,YACR,GAAIA,EAAa,CACb,IAAM2B,EAAkBvD,IAAa,kBAC9BvxB,GAD6B,IAEhC2xB,UAAU,KAEdjyB,EAAMi2B,gBAAgBb,EAAgBL,OAAOtB,EAjJzC,IAiJoEzzB,MAAOo1B,EAAgBL,OAAOtB,GAAazzB,MAjJ/G,GAkJP,CACD61B,GAjBU,CAkBb,EACDf,SAAU,kBAAMruB,EAAU2tB,QAAhB,EACVr1B,OAAQ82B,EAEf,CG5KD,SAASK,GAAT,GAA6E,IAA3CzJ,EAA2C,EAA3CA,UAAW5rB,EAAgC,EAAhCA,MAAO6xB,EAAyB,EAAzBA,SAAUD,EAAe,EAAfA,WACpD0D,EAAW,WAUb,OATAzD,GAAYA,EAASjG,EAAUA,EAAUhpB,OAAS,IAClDgvB,GAAcA,IAQP,CACHiC,KAAM,EACN/B,MAAO,EACPjyB,SAAU,EACV4zB,KAAOr0B,GACP40B,MAAQ50B,GACRmxB,KAAOnxB,GACPu0B,KAAM,SAACzB,GAEH,OADAA,IACOD,QAAQC,SAClB,EACDh0B,OAASkB,GACT60B,SAAW70B,GAElB,EACD,OAAOY,EACDgxB,GAAa,CACXpF,UAAW,CAAC,EAAG,GACf/rB,SAAU,EACVG,MAAAA,EACA4xB,WAAY0D,IAEdA,GACT,CCnCD,IAAMC,GAAoB,CACtB/pB,KAAM,SACNmiB,UAAW,IACXC,QAAS,GACTO,UAAW,IAQTqH,GAAsB,CACxBhqB,KAAM,YACN3L,SAAU,IAMRujB,GAAO,CACT5X,KAAM,YACN4X,KAAM,CAAC,IAAM,GAAK,IAAM,GACxBvjB,SAAU,IAER41B,GAAuB,SAACC,EAAD,GAA6B,IAAhB9J,EAAgB,EAAhBA,UACtC,OAAIA,EAAUhpB,OAAS,EACZ4yB,GAEFjrB,EAAeR,IAAI2rB,GACjBA,EAAShrB,WAAW,SAxBS,CACxCc,KAAM,SACNmiB,UAAW,IACXC,QAAoB,IAsBahC,EAAU,GAtBnB,EAAIj3B,KAAKgzB,KAAK,KAAO,GAC7CwG,UAAW,IAsBDoH,GAEHnS,EACV,EC1BKuS,GAAe,SAAC5yB,EAAK5D,GAEvB,MAAY,WAAR4D,MAKiB,kBAAV5D,IAAsBmF,MAAMC,QAAQpF,OAE1B,kBAAVA,IACNoqB,GAAQnf,KAAKjL,IAAoB,MAAVA,GACvBA,EAAMuL,WAAW,SAKzB,ECrBKkrB,GAAc,IAAIprB,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAASqrB,GAAmBxxB,GACxB,MAAsBA,EAAEyxB,MAAM,GAAI,GAAGppB,MAAM,KAA3C,gBAAOrX,EAAP,KAAa8J,EAAb,KACA,GAAa,gBAAT9J,EACA,OAAOgP,EACX,MAAiBlF,EAAMinB,MAAMja,IAAe,GAArCP,GAAP,gBACA,IAAKA,EACD,OAAOvH,EACX,IAAMmI,EAAOrN,EAAMwW,QAAQ/J,EAAQ,IAC/BmqB,EAAeH,GAAY7rB,IAAI1U,GAAQ,EAAI,EAG/C,OAFIuW,IAAWzM,IACX42B,GAAgB,KACb1gC,EAAO,IAAM0gC,EAAevpB,EAAO,GAC7C,CACD,IAAMwpB,GAAgB,oBAChB9zB,IAAS,kBACRqnB,IADK,IAERG,kBAAmB,SAACrlB,GAChB,IAAM4xB,EAAY5xB,EAAE+hB,MAAM4P,IAC1B,OAAOC,EAAYA,EAAUpS,IAAIgS,IAAoBnwB,KAAK,KAAOrB,CACpE,ICnBC6xB,IAAoB,kBACnBhpB,IADgB,IAGnB5W,MAAAA,GACAL,gBAAiBK,GACjB6/B,aAAc7/B,GACdo+B,KAAMp+B,GACN8/B,OAAQ9/B,GAER+/B,YAAa//B,GACbggC,eAAgBhgC,GAChBigC,iBAAkBjgC,GAClBkgC,kBAAmBlgC,GACnBmgC,gBAAiBngC,GACjB4L,OAAAA,GACAw0B,aAAcx0B,KAKZy0B,GAAsB,SAAC5zB,GAAD,OAASmzB,GAAkBnzB,EAA3B,ECvB5B,SAAS2mB,GAAkB3mB,EAAK5D,GAC5B,IAAIy3B,EAAmBD,GAAoB5zB,GAI3C,OAHI6zB,IAAqB10B,KACrB00B,EAAmBrN,IAEhBqN,EAAiBlN,kBAClBkN,EAAiBlN,kBAAkBvqB,QACnCxG,CACT,CCTD,IAAMk+B,GAAoB,SAACxyB,GAAD,MAAO,aAAa+F,KAAK/F,EAAzB,ECD1B,SAASyyB,GAAO33B,GACZ,MAAqB,kBAAVA,EACU,IAAVA,EAEQ,OAAVA,EACY,SAAVA,GAA8B,MAAVA,GAAiB03B,GAAkB13B,QAD7D,CAGR,CCLD,SAAS43B,GAAa53B,EAAOk1B,EAAW5xB,EAAQhM,GAC5C,IACIm1B,EADEoL,EAAqBrB,GAAatB,EAAW5xB,GAG/CmpB,EADAtnB,MAAMC,QAAQ9B,IACF,QAAIA,GAGJ,CAAC,KAAMA,GAKvB,IAHA,IAAMw0B,OAAoCt+B,IAApBlC,EAAW2wB,KAAqB3wB,EAAW2wB,KAAOjoB,EAAM0K,MAC1EqtB,OAA0Bv+B,EACxBw+B,EAAsB,GACnBz0B,EAAI,EAAGA,EAAIkpB,EAAUhpB,OAAQF,IAIb,OAAjBkpB,EAAUlpB,KACVkpB,EAAUlpB,GAAW,IAANA,EAAUu0B,EAAgBrL,EAAUlpB,EAAI,IAEvDo0B,GAAOlL,EAAUlpB,KACjBy0B,EAAoB70B,KAAKI,GAGD,kBAAjBkpB,EAAUlpB,IACA,SAAjBkpB,EAAUlpB,IACO,MAAjBkpB,EAAUlpB,KACVw0B,EAA0BtL,EAAUlpB,IAG5C,GAAIs0B,GACAG,EAAoBv0B,QACpBs0B,EACA,IAAK,IAAIx0B,EAAI,EAAGA,EAAIy0B,EAAoBv0B,OAAQF,IAAK,CAEjDkpB,EADcuL,EAAoBz0B,IACfgnB,GAAkB2K,EAAW6C,EACnD,CAEL,OAAOtL,CACV,C,kICrCD,SAASwL,GAAT,GAAuK,EAAxIC,KAAwI,EAAlIr3B,MAAkI,EAAnHs3B,cAAmH,EAApGC,gBAAoG,EAAnFC,iBAAmF,EAAjEjG,OAAiE,EAAzDE,WAAyD,EAA7CD,YAA6C,EAAhCpK,KAAgC,EAA1B4L,QAA0B,IAAdv8B,EAAc,SACnK,QAASsL,OAAOD,KAAKrL,GAAYmM,MACpC,CACD,SAAS60B,GAAmBhhC,EAAYsM,GACpC,OAAOtM,EAAWsM,IAAQtM,EAAU,SAAeA,CACtD,CCCD,IAAMihC,GAAqB,SAACrD,EAAWl1B,EAAOsD,GAA4B,IAApBhM,EAAoB,uDAAP,CAAC,EAChE,OAAO,SAACm7B,GACJ,IAAM+F,EAAkBF,GAAmBhhC,EAAY49B,IAAc,CAAC,EAMhEr0B,EAAQ23B,EAAgB33B,OAASvJ,EAAWuJ,OAAS,EAK3D,EAAsBvJ,EAAhBu8B,QAAAA,OAAN,MAAgB,EAAhB,EACAA,GAAoBzQ,GAAsBviB,GAC1C,IAAM4rB,EAAYmL,GAAa53B,EAAOk1B,EAAW5xB,EAAQk1B,GAMnDC,EAAiBhM,EAAU,GAC3BiM,EAAiBjM,EAAUA,EAAUhpB,OAAS,GAC9Ck1B,EAAqBnC,GAAatB,EAAWuD,GAC7CZ,EAAqBrB,GAAatB,EAAWwD,GACnDxV,GAAQyV,IAAuBd,EAAxB,oCAAyE3C,EAAzE,kBAA4FuD,EAA5F,iBAAmHC,EAAnH,cAAuID,EAAvI,sEAAmNA,EAAnN,qCAA8PC,EAA9P,+BACP,IAAIp4B,GAAU,gBACVmsB,UAAAA,EACAzJ,SAAUhjB,EAAMyL,cAChBwY,KAAM,WACHuU,GAJI,IAKP33B,OAAQgzB,EACRnB,SAAU,SAACxtB,GACPlF,EAAM6K,IAAI3F,GACVszB,EAAgB9F,UAAY8F,EAAgB9F,SAASxtB,EACxD,EACDutB,WAAY,WACRA,IACA+F,EAAgB/F,YAAc+F,EAAgB/F,YACjD,IAuBL,GAjBKwF,GAAoBO,KACrBl4B,GAAU,kBACHA,GACAg2B,GAAqBpB,EAAW50B,KAQvCA,EAAQI,WACRJ,EAAQI,SAAW0iB,GAAsB9iB,EAAQI,WAEjDJ,EAAQ+xB,cACR/xB,EAAQ+xB,YAAcjP,GAAsB9iB,EAAQ+xB,eAEnDsG,IACAd,GACDrU,KACyB,IAAzBgV,EAAgBnsB,KAKhB,OAAO6pB,GAAuB1S,IAAA,kBACnBljB,GADmB,IACVO,MAAO,IACrBP,GAKV,GAAIN,EAAM21B,OACN31B,EAAM21B,MAAMp4B,mBAAmBq7B,cAC9B54B,EAAM21B,MAAM5X,WAAW2U,SAAU,CAClC,IAAMmG,EAAuB5D,GAA2Bj1B,EAAOk1B,EAAW50B,GAC1E,GAAIu4B,EACA,OAAOA,CACd,CAID,OAAOhH,GAAavxB,EACvB,CACJ,EClGD,SAASw4B,GAAwB94B,GAC7B,OAAO6F,QAAQ2F,EAAcxL,IAAUA,EAAM4c,IAChD,CCJD,SAASmc,GAAc1M,EAAK2M,IACG,IAAvB3M,EAAI1xB,QAAQq+B,IACZ3M,EAAIlpB,KAAK61B,EAChB,CACD,SAASC,GAAW5M,EAAK2M,GACrB,IAAMnc,EAAQwP,EAAI1xB,QAAQq+B,GACtBnc,GAAS,GACTwP,EAAIvP,OAAOD,EAAO,EACzB,C,ICNKqc,GAAAA,WACF,cAAc,gBACV19B,KAAK29B,cAAgB,EACxB,C,mCACD,SAAI75B,GAAS,WAET,OADAy5B,GAAcv9B,KAAK29B,cAAe75B,GAC3B,kBAAM25B,GAAW,EAAKE,cAAe75B,EAArC,CACV,G,oBACD,SAAOmb,EAAGC,EAAGoJ,GACT,IAAMsV,EAAmB59B,KAAK29B,cAAc11B,OAC5C,GAAK21B,EAEL,GAAyB,IAArBA,EAIA59B,KAAK29B,cAAc,GAAG1e,EAAGC,EAAGoJ,QAG5B,IAAK,IAAIvgB,EAAI,EAAGA,EAAI61B,EAAkB71B,IAAK,CAKvC,IAAMjE,EAAU9D,KAAK29B,cAAc51B,GACnCjE,GAAWA,EAAQmb,EAAGC,EAAGoJ,EAC5B,CAER,G,qBACD,WACI,OAAOtoB,KAAK29B,cAAc11B,MAC7B,G,mBACD,WACIjI,KAAK29B,cAAc11B,OAAS,CAC/B,K,EAlCCy1B,GCIAG,GAAU,SAACr5B,GACb,OAAQsqB,MAAM3d,WAAW3M,GAC5B,EAMKs5B,GAAAA,WASF,WAAY7gB,GAAoB,WAAdnY,EAAc,uDAAJ,CAAC,GAAG,gBAK5B9E,KAAK+9B,QAAU,WAMf/9B,KAAKg+B,UAAY,EAMjBh+B,KAAKi+B,YAAc,EAQnBj+B,KAAKk+B,kBAAmB,EAIxBl+B,KAAKm+B,OAAS,CAAC,EACfn+B,KAAKo+B,gBAAkB,SAAC10B,GAAqB,IAAlBtF,IAAkB,yDACzC,EAAKgjB,KAAO,EAAKrlB,QACjB,EAAKA,QAAU2H,EAEf,IAAQwW,EAAqBD,GAAAA,MAAdE,EAAcF,GAAAA,UACzB,EAAKge,cAAgB9d,IACrB,EAAK6d,UAAY9d,EACjB,EAAK+d,YAAc9d,EACnB4B,GAAAA,WAAiB,EAAKsc,wBAGtB,EAAKjX,OAAS,EAAKrlB,SAAW,EAAKo8B,OAAOG,QAC1C,EAAKH,OAAOG,OAAOC,OAAO,EAAKx8B,SAG/B,EAAKo8B,OAAOK,gBACZ,EAAKL,OAAOK,eAAeD,OAAO,EAAKtuB,eAGvC7L,GAAU,EAAK+5B,OAAOM,eACtB,EAAKN,OAAOM,cAAcF,OAAO,EAAKx8B,QAE7C,EASD/B,KAAKq+B,sBAAwB,kBAAMtc,GAAAA,WAAiB,EAAK2c,cAA5B,EAU7B1+B,KAAK0+B,cAAgB,YAAmB,EAAhBve,YACF,EAAK8d,cACnB,EAAK7W,KAAO,EAAKrlB,QACb,EAAKo8B,OAAOK,gBACZ,EAAKL,OAAOK,eAAeD,OAAO,EAAKtuB,eAGlD,EACDjQ,KAAK2+B,aAAc,EACnB3+B,KAAKonB,KAAOpnB,KAAK+B,QAAUkb,EAC3Bjd,KAAKk+B,iBAAmBL,GAAQ79B,KAAK+B,SACrC/B,KAAKm6B,MAAQr1B,EAAQq1B,KACxB,C,wCAyCD,SAASyE,GAIL,OAAO5+B,KAAK6+B,GAAG,SAAUD,EAC5B,G,gBACD,SAAGzgB,EAAW1a,GAAU,WACfzD,KAAKm+B,OAAOhgB,KACbne,KAAKm+B,OAAOhgB,GAAa,IAAIuf,IAEjC,IAAMoB,EAAc9+B,KAAKm+B,OAAOhgB,GAAWiD,IAAI3d,GAC/C,MAAkB,WAAd0a,EACO,WACH2gB,IAKA/c,GAAAA,MAAW,WACF,EAAKoc,OAAOG,OAAOS,WACpB,EAAKnJ,MAEZ,GACJ,EAEEkJ,CACV,G,4BACD,WACI,IAAK,IAAME,KAAiBh/B,KAAKm+B,OAC7Bn+B,KAAKm+B,OAAOa,GAAeC,OAElC,G,oBAMD,SAAOC,EAAeC,GAClBn/B,KAAKk/B,cAAgBA,EACrBl/B,KAAKm/B,kBAAoBA,CAC5B,G,iBAgBD,SAAIz1B,GAAkB,IAAftF,IAAe,yDACbA,GAAWpE,KAAKk/B,cAIjBl/B,KAAKk/B,cAAcx1B,EAAG1J,KAAKo+B,iBAH3Bp+B,KAAKo+B,gBAAgB10B,EAAGtF,EAK/B,G,6BACD,SAAgBgjB,EAAMrlB,EAASme,GAC3BlgB,KAAKqP,IAAItN,GACT/B,KAAKonB,KAAOA,EACZpnB,KAAKg+B,UAAY9d,CACpB,G,kBAKD,SAAKxW,GACD1J,KAAKo+B,gBAAgB10B,GACrB1J,KAAKonB,KAAO1d,EACZ1J,KAAK41B,OACD51B,KAAKm/B,mBACLn/B,KAAKm/B,mBACZ,G,iBAQD,WACI,OAAOn/B,KAAK+B,OACf,G,yBAID,WACI,OAAO/B,KAAKonB,IACf,G,yBAQD,WAEI,OAAOpnB,KAAKk+B,iBAEJtM,GAAkBzgB,WAAWnR,KAAK+B,SAC9BoP,WAAWnR,KAAKonB,MAAOpnB,KAAKg+B,WAClC,CACT,G,mBAaD,SAAMoB,GAAgB,WAElB,OADAp/B,KAAK41B,OACE,IAAI0B,SAAQ,SAACC,GAChB,EAAKoH,aAAc,EACnB,EAAK1zB,UAAYm0B,EAAe7H,GAC5B,EAAK4G,OAAOkB,gBACZ,EAAKlB,OAAOkB,eAAed,QAElC,IAAEvF,MAAK,WACA,EAAKmF,OAAOmB,mBACZ,EAAKnB,OAAOmB,kBAAkBf,SAElC,EAAKgB,gBACR,GACJ,G,kBAMD,WACQv/B,KAAKiL,YACLjL,KAAKiL,UAAU2qB,OACX51B,KAAKm+B,OAAOqB,iBACZx/B,KAAKm+B,OAAOqB,gBAAgBjB,UAGpCv+B,KAAKu/B,gBACR,G,yBAMD,WACI,QAASv/B,KAAKiL,SACjB,G,4BACD,kBACWjL,KAAKiL,SACf,G,qBAUD,WACIjL,KAAKy/B,iBACLz/B,KAAK41B,OACD51B,KAAKm/B,mBACLn/B,KAAKm/B,mBAEZ,K,EAvTCrB,GAyTN,SAAS4B,GAAYziB,EAAMnY,GACvB,OAAO,IAAIg5B,GAAY7gB,EAAMnY,EAChC,CCtUD,IAAM66B,GAAgB,SAACj2B,GAAD,OAAO,SAACmH,GAAD,OAAUA,EAAKpB,KAAK/F,EAApB,CAAP,ECKhBk2B,GAAsB,CAAC3uB,EAAQiB,GAAID,GAASD,EAASI,GAAID,GCLlD,CACT1C,KAAM,SAAC/F,GAAD,MAAa,SAANA,CAAP,EACNwH,MAAO,SAACxH,GAAD,OAAOA,CAAP,IDOLm2B,GAAyB,SAACn2B,GAAD,OAAOk2B,GAAoBzS,KAAKwS,GAAcj2B,GAA9C,EEJzBo2B,GAAa,GAAH,gBAAOF,IAAP,CAA4BjkC,GAAOizB,KAI7CmR,GAAgB,SAACr2B,GAAD,OAAOo2B,GAAW3S,KAAKwS,GAAcj2B,GAArC,E,kCCCtB,SAASs2B,GAAehzB,EAAe5E,EAAK5D,GACpCwI,EAAcizB,SAAS73B,GACvB4E,EAAckzB,SAAS93B,GAAKiH,IAAI7K,GAGhCwI,EAAcmzB,SAAS/3B,EAAKs3B,GAAYl7B,GAE/C,CACD,SAAS47B,GAAUpzB,EAAemP,GAC9B,IvFjBkCzS,EuFiB5B+T,EAAW6J,GAAeta,EAAemP,GAC/C,EAAyDsB,EAAWzQ,EAAcqzB,qBAAqB5iB,GAAU,GAAS,CAAC,EAA3H,IAAMC,cAAAA,OAAN,MAAsB,CAAC,EAAvB,EAA8C5V,GAA9C,EAA0BhM,WAA1B,UAEA,IAAK,IAAMsM,KADXN,GAAS,kBAAKA,GAAW4V,GACC,CAEtBsiB,GAAehzB,EAAe5E,GvFtBAsB,EuFqBa5B,EAAOM,GvFnB/CkU,GAAkB5S,GAAKA,EAAEA,EAAEzB,OAAS,IAAM,EAAIyB,GuFqBpD,CACJ,CAwED,SAAS42B,GAAwBl4B,EAAKtM,GAClC,GAAKA,EAGL,OADwBA,EAAWsM,IAAQtM,EAAU,SAAeA,GAC7C2wB,IAC1B,C,sCC7FD,SAAS8T,GAAT,EAAiEn4B,GAAK,IAAtCo4B,EAAsC,EAAtCA,cAAeC,EAAuB,EAAvBA,eACrCC,EAAcF,EAAch3B,eAAepB,KAAgC,IAAxBq4B,EAAer4B,GAExE,OADAq4B,EAAer4B,IAAO,EACfs4B,CACV,CACD,SAASC,GAAc3zB,EAAemP,GAA0D,6DAAJ,CAAC,EAAG,IAA5C9W,MAAAA,OAA4C,MAApC,EAAoC,EAAjCu7B,EAAiC,EAAjCA,mBAAoB/vB,EAAa,EAAbA,KAC/E,EAAsF7D,EAAcqzB,qBAAqBlkB,GAAzH,IAAMrgB,WAAAA,OAAN,MAAmBkR,EAAc8tB,uBAAjC,EAAyDpd,EAAzD,EAAyDA,cAAkB5V,EAA3E,SACM+4B,EAAa7zB,EAAckzB,SAAS,cACtCU,IACA9kC,EAAa8kC,GACjB,IAAME,EAAa,GACbC,EAAqBlwB,GACvB7D,EAAcc,gBACdd,EAAcc,eAAekzB,WAAWnwB,GARgD,WASjFzI,GACP,IAAM5D,EAAQwI,EAAckzB,SAAS93B,GAC/BuV,EAAc7V,EAAOM,GAC3B,IAAK5D,QACexG,IAAhB2f,GACCojB,GACGR,GAAqBQ,EAAoB34B,GAC7C,iBAEJ,IAAM40B,GAAkB,QAAE33B,MAAAA,EAAOgzB,QAAS,GAAMv8B,GAKhD,GAAI8R,OAAOC,0BAA4BrJ,EAAMm6B,YAAa,CACtD,IAAMsC,EAAWj0B,EAAcuV,WAAWkF,IACtCwZ,IACAjE,EAAgB3E,QAAUzqB,OAAOC,wBAAwBozB,EAAU74B,EAAK5D,EAAOud,IAEtF,CACDvd,EAAMsF,MAAMizB,GAAmB30B,EAAK5D,EAAOmZ,EAAa3Q,EAAck0B,oBAAsBtxB,EAAeR,IAAIhH,GACzG,CAAEyI,MAAM,GACRmsB,IACN,IAAM/xB,EAAYzG,EAAMyG,UACpBqyB,GAAwBuD,KACxBA,EAAWzf,IAAIhZ,GACf6C,EAAU+tB,MAAK,kBAAM6H,EAAWM,OAAO/4B,EAAxB,KAEnB04B,EAAWn5B,KAAKsD,EArCwE,EAS5F,IAAK,IAAM7C,KAAON,EAAQ,EAAfM,GAmCX,OALIsV,GACA4Z,QAAQpR,IAAI4a,GAAY9H,MAAK,WACzBtb,GAAiB0iB,GAAUpzB,EAAe0Q,EAC7C,IAEEojB,CACV,CC5DD,SAASM,GAAep0B,EAAehS,GAAuB,IAAd8J,EAAc,uDAAJ,CAAC,EACjD2Y,EAAW6J,GAAeta,EAAehS,EAAS8J,EAAQ+J,QAChE,EAAkE4O,GAAY,CAAC,EAA/E,IAAM3hB,WAAAA,OAAN,MAAmBkR,EAAc8tB,wBAA0B,CAAC,EAA5D,EACIh2B,EAAQ87B,qBACR9kC,EAAagJ,EAAQ87B,oBAMzB,IAAMS,EAAe5jB,EACf,kBAAM6Z,QAAQpR,IAAIya,GAAc3zB,EAAeyQ,EAAU3Y,GAAzD,EACA,kBAAMwyB,QAAQC,SAAd,EAKA+J,EAAqBt0B,EAAcu0B,iBAAmBv0B,EAAcu0B,gBAAgBluB,KACpF,WAAsB,IAArBmuB,EAAqB,uDAAN,EACd,EAAkE1lC,EAAlE,IAAQ6gC,cAAAA,OAAR,MAAwB,EAAxB,EAA2BC,EAA3B,EAA2BA,gBAAiBC,EAA5C,EAA4CA,iBAC5C,OAAO4E,GAAgBz0B,EAAehS,EAAS2hC,EAAgB6E,EAAc5E,EAAiBC,EAAkB/3B,EACnH,EACC,kBAAMwyB,QAAQC,SAAd,EAKN,EAAiBz7B,EAAT4gC,EAAR,EAAQA,KACR,GAAIA,EAAM,CACN,MAA+B,mBAATA,EAChB,CAAC2E,EAAcC,GACf,CAACA,EAAoBD,GAF3B,gBAAOK,EAAP,KAAcC,EAAd,KAGA,OAAOD,IAAQ1I,MAAK,kBAAM2I,GAAN,GACvB,CAEG,OAAOrK,QAAQpR,IAAI,CAACmb,IAAgBC,EAAmBx8B,EAAQO,QAEtE,CACD,SAASo8B,GAAgBz0B,EAAehS,GAAgF,IAAvE2hC,EAAuE,uDAAvD,EAAGC,EAAoD,uDAAlC,EAAGC,EAA+B,uDAAZ,EAAG/3B,EAAS,uCAC9Gg8B,EAAa,GACbc,GAAsB50B,EAAcu0B,gBAAgBluB,KAAO,GAAKupB,EAChEiF,EAA+C,IAArBhF,EAC1B,eAAC90B,EAAD,uDAAK,EAAL,OAAWA,EAAI60B,CAAf,EACA,eAAC70B,EAAD,uDAAK,EAAL,OAAW65B,EAAqB75B,EAAI60B,CAApC,EAUN,OATAjzB,MAAM8iB,KAAKzf,EAAcu0B,iBACpBO,KAAKC,IACL55B,SAAQ,SAAC8a,EAAOlb,GACjBkb,EAAMsb,OAAO,iBAAkBvjC,GAC/B8lC,EAAWn5B,KAAKy5B,GAAene,EAAOjoB,GAAR,QAAC,UACxB8J,GADuB,IAE1BO,MAAOs3B,EAAgBkF,EAAwB95B,MAChDixB,MAAK,kBAAM/V,EAAMsb,OAAO,oBAAqBvjC,EAAxC,IACX,IACMs8B,QAAQpR,IAAI4a,EACtB,CACD,SAASiB,GAAgB9iB,EAAGC,GACxB,OAAOD,EAAE+iB,iBAAiB9iB,EAC7B,C,sCCpDK+iB,IAAuB,QAAIl4B,GAAsB0mB,UACjDyR,GAAoBn4B,EAAqB9B,OAC/C,SAASk6B,GAAYn1B,GACjB,OAAO,SAAC8zB,GAAD,OAAgBxJ,QAAQpR,IAAI4a,EAAW5X,KAAI,gBAAGje,EAAH,EAAGA,UAAWnG,EAAd,EAAcA,QAAd,OCPtD,SAA8BkI,EAAemP,GAA0B,IAE/DlR,EAFiDnG,EAAc,uDAAJ,CAAC,EAGhE,GAFAkI,EAAcuxB,OAAO,iBAAkBpiB,GAEnCxS,MAAMC,QAAQuS,GAAa,CAC3B,IAAM2kB,EAAa3kB,EAAW+M,KAAI,SAACluB,GAAD,OAAaomC,GAAep0B,EAAehS,EAAS8J,EAApD,IAClCmG,EAAYqsB,QAAQpR,IAAI4a,EAC3B,MACI,GAA0B,kBAAf3kB,EACZlR,EAAYm2B,GAAep0B,EAAemP,EAAYrX,OAErD,CACD,IAAMs9B,EAA2C,oBAAfjmB,EAC5BmL,GAAeta,EAAemP,EAAYrX,EAAQ+J,QAClDsN,EACNlR,EAAYqsB,QAAQpR,IAAIya,GAAc3zB,EAAeo1B,EAAoBt9B,GAC5E,CACD,OAAOmG,EAAU+tB,MAAK,kBAAMhsB,EAAcuxB,OAAO,oBAAqBpiB,EAAhD,GACzB,CDViFkmB,CAAqBr1B,EAAe/B,EAAWnG,EAA3E,IAA3C,CACV,CACD,SAASw9B,GAAqBt1B,GAC1B,IAAI9C,EAAUi4B,GAAYn1B,GACpBvM,EAoSC,CACHyJ,QAASq4B,IAAgB,GACzBC,YAAaD,KACb/f,WAAY+f,KACZ5qB,SAAU4qB,KACVE,UAAWF,KACXG,WAAYH,KACZ7gC,KAAM6gC,MA1SNI,GAAkB,EAKhBC,EAA0B,SAACniB,EAAKtE,GAClC,IAAMsB,EAAW6J,GAAeta,EAAemP,GAC/C,GAAIsB,EAAU,CACuCA,EAAzC3hB,WAAR,IAAoB4hB,EAA6BD,EAA7BC,cAAkB5V,EAAtC,GAAiD2V,EAAjD,IACAgD,GAAM,0BAAKA,GAAQ3Y,GAAW4V,EACjC,CACD,OAAO+C,CACV,EAkBD,SAAS1S,EAAejJ,EAAS+9B,GA8B7B,IA7BA,IAAMjoC,EAAQoS,EAAcuV,WACtB1iB,EAAUmN,EAAc81B,mBAAkB,IAAS,CAAC,EAKpDhC,EAAa,GAKbiC,EAAc,IAAIlzB,IAMpBmzB,EAAkB,CAAC,EAKnBC,EAAsBhN,IAvBsB,WA8BvCluB,GACL,IAAM8I,EAAOoxB,GAAqBl6B,GAC5Bm7B,EAAYziC,EAAMoQ,GAClB/F,OAAuB9M,IAAhBpD,EAAMiW,GAAsBjW,EAAMiW,GAAQhR,EAAQgR,GACzDsyB,EAAgB15B,EAAeqB,GAK/Bs4B,EAAcvyB,IAASgyB,EAAoBK,EAAU9gB,SAAW,MAClD,IAAhBghB,IACAH,EAAsBl7B,GAO1B,IAAIs7B,EAAcv4B,IAASjL,EAAQgR,IAAS/F,IAASlQ,EAAMiW,IAASsyB,EAepE,GAXIE,GACAV,GACA31B,EAAcs2B,yBACdD,GAAc,GAMlBH,EAAU1C,eAAV,UAA+BwC,IAI7BE,EAAU9gB,UAA4B,OAAhBghB,IAElBt4B,IAASo4B,EAAUK,UAErB15B,EAAoBiB,IACJ,mBAATA,EACP,iBAOJ,IAAM04B,EAqKlB,SAAgCpc,EAAMtgB,GAClC,GAAoB,kBAATA,EACP,OAAOA,IAASsgB,EAEf,GAAIzd,MAAMC,QAAQ9C,GACnB,OAAQqgB,GAAergB,EAAMsgB,GAEjC,OAAO,CACV,CA7KoCqc,CAAuBP,EAAUK,SAAUz4B,GAChE44B,EAAoBF,GAEnB3yB,IAASgyB,GACNK,EAAU9gB,WACTihB,GACDF,GAEHp7B,EAAIk7B,GAAuBE,EAK1BQ,EAAiBh6B,MAAMC,QAAQkB,GAAQA,EAAO,CAACA,GAKjD84B,EAAiBD,EAAetkB,OAAOujB,EAAyB,CAAC,IACjD,IAAhBQ,IACAQ,EAAiB,CAAC,GAUtB,MAAoCV,EAA5BW,mBAAAA,OAAR,MAA6B,CAAC,EAA9B,EACMC,GAAU,kBACTD,GACAD,GAEDG,EAAgB,SAAC37B,GACnBs7B,GAAoB,EACpBX,EAAYxhB,OAAOnZ,GACnB86B,EAAUzC,eAAer4B,IAAO,CACnC,EACD,IAAK,IAAMA,KAAO07B,EAAS,CACvB,IAAMh9B,EAAO88B,EAAex7B,GACtBgf,EAAOyc,EAAmBz7B,GAE5B46B,EAAgBx5B,eAAepB,KAK/BtB,IAASsgB,EAKL9K,GAAkBxV,IAASwV,GAAkB8K,IACxCD,GAAergB,EAAMsgB,IAASoc,EAC/BO,EAAc37B,GAOd86B,EAAU1C,cAAcp4B,IAAO,OAGrBpK,IAAT8I,EAELi9B,EAAc37B,GAId26B,EAAY3hB,IAAIhZ,QAGNpK,IAAT8I,GAAsBi8B,EAAY3zB,IAAIhH,GAK3C27B,EAAc37B,GAOd86B,EAAU1C,cAAcp4B,IAAO,EAEtC,CAKD86B,EAAUK,SAAWz4B,EACrBo4B,EAAUW,mBAAqBD,EAI3BV,EAAU9gB,WACV4gB,GAAkB,kBAAKA,GAAoBY,IAE3CjB,GAAmB31B,EAAcQ,wBACjCk2B,GAAoB,GAOpBA,IAAsBL,GACtBvC,EAAWn5B,KAAX,MAAAm5B,GAAU,QAAS6C,EAAeza,KAAI,SAACje,GAAD,MAAgB,CAClDA,UAAWA,EACXnG,SAAS,QAAE+L,KAAAA,GAAS/L,GAFc,KA7LE,EA8BvCiD,EAAI,EAAGA,EAAIm6B,GAAmBn6B,IAAK,EAAnCA,GA0KT,GAAIg7B,EAAY1vB,KAAM,CAClB,IAAM2wB,EAAoB,CAAC,EAC3BjB,EAAY56B,SAAQ,SAACC,GACjB,IAAM67B,EAAiBj3B,EAAck3B,cAAc97B,QAC5BpK,IAAnBimC,IACAD,EAAkB57B,GAAO67B,EAEhC,IACDnD,EAAWn5B,KAAK,CAAEsD,UAAW+4B,GAChC,CACD,IAAIG,EAAgB95B,QAAQy2B,EAAW74B,QAOvC,OANI06B,IACkB,IAAlB/nC,EAAM4P,UACLwC,EAAcs2B,yBACfa,GAAgB,GAEpBxB,GAAkB,EACXwB,EAAgBj6B,EAAQ42B,GAAcxJ,QAAQC,SACxD,CAkBD,MAAO,CACHxpB,eAAAA,EACA0U,UAhBJ,SAAmB5R,EAAMuR,EAAUtd,GAC/B,IAAImT,EAEJ,GAAIxX,EAAMoQ,GAAMuR,WAAaA,EACzB,OAAOkV,QAAQC,UAEsB,QAAxCtf,EAAKjL,EAAcu0B,uBAAoC,IAAPtpB,GAAyBA,EAAG9P,SAAQ,SAAC8a,GAAY,IAAIhL,EAAI,OAAuC,QAA/BA,EAAKgL,EAAMnV,sBAAmC,IAAPmK,OAAgB,EAASA,EAAGwK,UAAU5R,EAAMuR,EAAY,IACjN3hB,EAAMoQ,GAAMuR,SAAWA,EACvB,IAAM0e,EAAa/yB,EAAejJ,EAAS+L,GAC3C,IAAK,IAAMzI,KAAO3H,EACdA,EAAM2H,GAAKo4B,cAAgB,CAAC,EAEhC,OAAOM,CACV,EAIGsD,mBA5PJ,SAA4BC,GACxBn6B,EAAUm6B,EAAar3B,EAC1B,EA2PGg0B,SAAU,kBAAMvgC,CAAN,EAEjB,CAUD,SAAS8hC,KAAkC,IAAlBngB,EAAkB,wDACvC,MAAO,CACHA,SAAAA,EACAoe,cAAe,CAAC,EAChBC,eAAgB,CAAC,EACjBoD,mBAAoB,CAAC,EAE5B,C,IE7SKS,GAAAA,SAAAA,I,+BAMF,WAAYziC,GAAM,6BACd,cAAMA,GACNA,EAAKiM,iBAAmBjM,EAAKiM,eAAiBw0B,GAAqBzgC,IAFrD,CAGjB,C,mEACD,WACI,IAAQqI,EAAYlK,KAAK6B,KAAK0gB,WAAtBrY,QACRlK,KAAKuO,UACD1E,EAAoBK,KACpBlK,KAAKuO,QAAUrE,EAAQq6B,UAAUvkC,KAAK6B,MAE7C,G,mBAID,WACI7B,KAAKwkC,qCACR,G,oBACD,WACwBxkC,KAAK6B,KAAK0gB,WAAtBrY,WACyBlK,KAAK6B,KAAKR,WAAa,CAAC,GAAjD6I,SAEJlK,KAAKwkC,qCAEZ,G,qBACD,WAAa,K,EA9BXF,CAAyBvkB,ICF3BrR,GAAK,EACH+1B,GAAAA,SAAAA,I,+BACF,aAAc,8BACV,eAASz8B,YACJ0G,GAAKA,KAFA,CAGb,C,sCACD,WAAS,WACL,GAAK1O,KAAK6B,KAAKsL,gBAAf,CAEA,MAA8CnN,KAAK6B,KAAKsL,gBAAhDu3B,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,eAAgB91B,EAAnC,EAAmCA,OAChB+1B,GAAkB5kC,KAAK6B,KAAKgjC,qBAAuB,CAAC,GAA/DH,UACR,GAAK1kC,KAAK6B,KAAKiM,gBAAkB42B,IAAcE,EAA/C,CAGA,IAAME,EAAgB9kC,KAAK6B,KAAKiM,eAAe2U,UAAU,QAASiiB,EAAW,CAAE71B,OAAmB,OAAXA,QAA8B,IAAXA,EAAoBA,EAAS7O,KAAK6B,KAAK0gB,WAAW1T,SACxJ81B,IAAmBD,GACnBI,EAAc9L,MAAK,kBAAM2L,EAAe,EAAKj2B,GAA1B,GAHtB,CALS,CAUb,G,mBACD,WACI,IAAQq2B,GAAa/kC,KAAK6B,KAAKsL,iBAAmB,CAAC,GAA3C43B,SACJA,IACA/kC,KAAKuO,QAAUw2B,EAAS/kC,KAAK0O,IAEpC,G,qBACD,WAAa,K,EAxBX+1B,CAA6B1kB,ICA7B+gB,GAAa,CACf71B,UAAW,CACP8U,QAASukB,IAEb5iC,KAAM,CACFqe,QAAS0kB,KCRX3vB,GAAW,SAACmK,EAAGC,GAAJ,OAAUllB,KAAKuwB,IAAItL,EAAIC,EAAvB,EACjB,SAAS8lB,GAAW/lB,EAAGC,GAEnB,IAAM+lB,EAASnwB,GAASmK,EAAE9O,EAAG+O,EAAE/O,GACzB+0B,EAASpwB,GAASmK,EAAE7O,EAAG8O,EAAE9O,GAC/B,OAAOpW,KAAKgzB,KAAK,SAAAiY,EAAU,GAAV,SAAcC,EAAU,GAC5C,C,ICMKC,GAAAA,WACF,WAAYthC,EAAOuhC,GAAuC,oEAAJ,CAAC,EAAxB18B,EAA2B,EAA3BA,mBA0D3B,IA1DsD,gBAItD1I,KAAK4jB,WAAa,KAIlB5jB,KAAKqlC,cAAgB,KAIrBrlC,KAAKslC,kBAAoB,KAIzBtlC,KAAKolC,SAAW,CAAC,EACjBplC,KAAKulC,YAAc,WACf,GAAM,EAAKF,eAAiB,EAAKC,kBAAjC,CAEA,IAAMhjB,EAAOkjB,GAAW,EAAKF,kBAAmB,EAAKG,SAC/CC,EAAmC,OAApB,EAAK9hB,WAIpB+hB,EAA0BX,GAAW1iB,EAAKxJ,OAAQ,CAAE3I,EAAG,EAAGC,EAAG,KAAQ,EAC3E,GAAKs1B,GAAiBC,EAAtB,CAEA,IAAQ9mB,EAAUyD,EAAVzD,MACAsB,EAAcF,GAAAA,UACtB,EAAKwlB,QAAQ99B,MAAb,kBAAuBkX,GAAvB,IAA8BsB,UAAAA,KAC9B,MAA4B,EAAKilB,SAAzBQ,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,OACZH,IACDE,GAAWA,EAAQ,EAAKP,cAAe/iB,GACvC,EAAKsB,WAAa,EAAKyhB,eAE3BQ,GAAUA,EAAO,EAAKR,cAAe/iB,EAT3B,CARA,CAkBb,EACDtiB,KAAK8lC,kBAAoB,SAACjiC,EAAOye,GAC7B,EAAK+iB,cAAgBxhC,EACrB,EAAKyhC,kBAAoBS,GAAezjB,EAAM,EAAK5Z,oBAEnDqZ,GAAAA,OAAa,EAAKwjB,aAAa,EAClC,EACDvlC,KAAKgmC,gBAAkB,SAACniC,EAAOye,GAE3B,GADA,EAAK2jB,MACC,EAAKZ,eAAiB,EAAKC,kBAAjC,CAEA,MAAgC,EAAKF,SAA7Bc,EAAR,EAAQA,MAAOC,EAAf,EAAeA,aACTC,EAAUZ,GAA0B,kBAAf3hC,EAAMgN,KAC3B,EAAKy0B,kBACLS,GAAezjB,EAAM,EAAK5Z,oBAAqB,EAAK+8B,SACtD,EAAK7hB,YAAcsiB,GACnBA,EAAMriC,EAAOuiC,GAEjBD,GAAgBA,EAAatiC,EAAOuiC,EAR1B,CASb,EAEI7nB,GAAiB1a,GAAtB,CAEA7D,KAAKolC,SAAWA,EAChBplC,KAAK0I,mBAAqBA,EAC1B,IAAM4Z,EAAO3D,GAAiB9a,GACxBwiC,EAAcN,GAAezjB,EAAMtiB,KAAK0I,oBACtCmW,EAAUwnB,EAAVxnB,MACAsB,EAAcF,GAAAA,UACtBjgB,KAAKylC,QAAU,EAAC,kBAAK5mB,GAAN,IAAasB,UAAAA,KAC5B,IAAQmmB,EAAmBlB,EAAnBkB,eACRA,GACIA,EAAeziC,EAAO2hC,GAAWa,EAAarmC,KAAKylC,UACvDzlC,KAAKumC,gBAAkBpnB,GAAKL,GAAgBlR,OAAQ,cAAe5N,KAAK8lC,mBAAoBhnB,GAAgBlR,OAAQ,YAAa5N,KAAKgmC,iBAAkBlnB,GAAgBlR,OAAQ,gBAAiB5N,KAAKgmC,iBAX5L,CAYb,C,8CACD,SAAeZ,GACXplC,KAAKolC,SAAWA,CACnB,G,iBACD,WACIplC,KAAKumC,iBAAmBvmC,KAAKumC,kBAC7BrkB,GAAYliB,KAAKulC,YACpB,K,EA/ECJ,GAiFN,SAASY,GAAezjB,EAAM5Z,GAC1B,OAAOA,EAAqB,CAAEmW,MAAOnW,EAAmB4Z,EAAKzD,QAAWyD,CAC3E,CACD,SAASkkB,GAAcvnB,EAAGC,GACtB,MAAO,CAAE/O,EAAG8O,EAAE9O,EAAI+O,EAAE/O,EAAGC,EAAG6O,EAAE7O,EAAI8O,EAAE9O,EACrC,CACD,SAASo1B,GAAT,EAA+BC,GAAS,IAAlB5mB,EAAkB,EAAlBA,MAClB,MAAO,CACHA,MAAAA,EACAqB,MAAOsmB,GAAc3nB,EAAO4nB,GAAgBhB,IAC5C3sB,OAAQ0tB,GAAc3nB,EAAO6nB,GAAiBjB,IAC9Cje,SAAUvX,GAAYw1B,EAAS,IAEtC,CACD,SAASiB,GAAiBjB,GACtB,OAAOA,EAAQ,EAClB,CACD,SAASgB,GAAgBhB,GACrB,OAAOA,EAAQA,EAAQx9B,OAAS,EACnC,CACD,SAASgI,GAAYw1B,EAASzH,GAC1B,GAAIyH,EAAQx9B,OAAS,EACjB,MAAO,CAAEkI,EAAG,EAAGC,EAAG,GAKtB,IAHA,IAAIrI,EAAI09B,EAAQx9B,OAAS,EACrB0+B,EAAmB,KACjBC,EAAYH,GAAgBhB,GAC3B19B,GAAK,IACR4+B,EAAmBlB,EAAQ19B,KACvB6+B,EAAUzmB,UAAYwmB,EAAiBxmB,UACvCyH,GAAsBoW,MAG1Bj2B,IAEJ,IAAK4+B,EACD,MAAO,CAAEx2B,EAAG,EAAGC,EAAG,GAEtB,IAAM8oB,EAAOpR,GAAsB8e,EAAUzmB,UAAYwmB,EAAiBxmB,WAC1E,GAAa,IAAT+Y,EACA,MAAO,CAAE/oB,EAAG,EAAGC,EAAG,GAEtB,IAAMiM,EAAkB,CACpBlM,GAAIy2B,EAAUz2B,EAAIw2B,EAAiBx2B,GAAK+oB,EACxC9oB,GAAIw2B,EAAUx2B,EAAIu2B,EAAiBv2B,GAAK8oB,GAQ5C,OANI7c,EAAgBlM,IAAM8lB,MACtB5Z,EAAgBlM,EAAI,GAEpBkM,EAAgBjM,IAAM6lB,MACtB5Z,EAAgBjM,EAAI,GAEjBiM,CACV,CChJD,SAASwqB,GAAWC,GAChB,OAAOA,EAAK91B,IAAM81B,EAAK/1B,GAC1B,CACD,SAASg2B,GAAOviC,GAAuC,IAAhCsD,EAAgC,uDAAvB,EAAGk/B,EAAoB,uDAAN,IAC7C,OAAOhtC,KAAKuwB,IAAI/lB,EAAQsD,IAAWk/B,CACtC,CACD,SAASC,GAAc/mB,EAAOhY,EAAQJ,GAAsB,IAAd+Q,EAAc,uDAAL,GACnDqH,EAAMrH,OAASA,EACfqH,EAAMgnB,YAAczqB,GAAIvU,EAAO6I,IAAK7I,EAAO8I,IAAKkP,EAAMrH,QACtDqH,EAAM9O,MAAQy1B,GAAW/+B,GAAU++B,GAAW3+B,IAC1C6+B,GAAO7mB,EAAM9O,MAAO,EAAG,OAAW0d,MAAM5O,EAAM9O,UAC9C8O,EAAM9O,MAAQ,GAClB8O,EAAMinB,UACF1qB,GAAI3U,EAAOiJ,IAAKjJ,EAAOkJ,IAAKkP,EAAMrH,QAAUqH,EAAMgnB,aAClDH,GAAO7mB,EAAMinB,YAAcrY,MAAM5O,EAAMinB,cACvCjnB,EAAMinB,UAAY,EACzB,CACD,SAASC,GAAalnB,EAAOhY,EAAQJ,EAAQ+Q,GACzCouB,GAAc/mB,EAAM/P,EAAGjI,EAAOiI,EAAGrI,EAAOqI,EAAG0I,EAASA,EAAOzD,aAAUpX,GACrEipC,GAAc/mB,EAAM9P,EAAGlI,EAAOkI,EAAGtI,EAAOsI,EAAGyI,EAASA,EAAOxD,aAAUrX,EACxE,CACD,SAASqpC,GAAiBv/B,EAAQw/B,EAAUr6B,GACxCnF,EAAOiJ,IAAM9D,EAAO8D,IAAMu2B,EAASv2B,IACnCjJ,EAAOkJ,IAAMlJ,EAAOiJ,IAAM81B,GAAWS,EACxC,CACD,SAASC,GAAgBz/B,EAAQw/B,EAAUr6B,GACvCo6B,GAAiBv/B,EAAOqI,EAAGm3B,EAASn3B,EAAGlD,EAAOkD,GAC9Ck3B,GAAiBv/B,EAAOsI,EAAGk3B,EAASl3B,EAAGnD,EAAOmD,EACjD,CACD,SAASo3B,GAAyB1/B,EAAQ0D,EAAQyB,GAC9CnF,EAAOiJ,IAAMvF,EAAOuF,IAAM9D,EAAO8D,IACjCjJ,EAAOkJ,IAAMlJ,EAAOiJ,IAAM81B,GAAWr7B,EACxC,CACD,SAASi8B,GAAqB3/B,EAAQ0D,EAAQyB,GAC1Cu6B,GAAyB1/B,EAAOqI,EAAG3E,EAAO2E,EAAGlD,EAAOkD,GACpDq3B,GAAyB1/B,EAAOsI,EAAG5E,EAAO4E,EAAGnD,EAAOmD,EACvD,CCZD,SAASs3B,GAA4BZ,EAAM/1B,EAAKC,GAC5C,MAAO,CACHD,SAAa/S,IAAR+S,EAAoB+1B,EAAK/1B,IAAMA,OAAM/S,EAC1CgT,SAAahT,IAARgT,EACC81B,EAAK91B,IAAMA,GAAO81B,EAAK91B,IAAM81B,EAAK/1B,UAClC/S,EAEb,CAcD,SAAS2pC,GAA4BC,EAAYC,GAC7C,IAAI92B,EAAM82B,EAAgB92B,IAAM62B,EAAW72B,IACvCC,EAAM62B,EAAgB72B,IAAM42B,EAAW52B,IAG3C,GAAI62B,EAAgB72B,IAAM62B,EAAgB92B,IACtC62B,EAAW52B,IAAM42B,EAAW72B,IAAK,OACpB,CAACC,EAAKD,GAAlBA,EADgC,KAC3BC,EAD2B,IAEpC,CACD,MAAO,CAAED,IAAAA,EAAKC,IAAAA,EACjB,CAuCD,IAAM82B,GAAiB,IAgBvB,SAASC,GAAmBC,EAAaC,EAAUC,GAC/C,MAAO,CACHn3B,IAAKo3B,GAAoBH,EAAaC,GACtCj3B,IAAKm3B,GAAoBH,EAAaE,GAE7C,CACD,SAASC,GAAoBH,EAAaI,GACtC,MAA8B,kBAAhBJ,EACRA,EACAA,EAAYI,IAAU,CAC/B,CC1HD,SAASC,GAAS5kC,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,KACnC,CCGD,SAAS6kC,GAAT,GAAgE,IAA7Bh1B,EAA6B,EAA7BA,IAC/B,MAAO,CACHnD,EAAG,CAAEY,IAFmD,EAAxB0C,KAEhBzC,IAFwC,EAAlBuC,OAGtCnD,EAAG,CAAEW,IAAKuC,EAAKtC,IAHyC,EAAXwC,QAKpD,CCVD,SAAS+0B,GAAgBn3B,GACrB,YAAiBpT,IAAVoT,GAAiC,IAAVA,CACjC,CACD,SAASo3B,GAAT,GAA6C,IAAzBp3B,EAAyB,EAAzBA,MAAOoD,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC/B,OAAS8zB,GAAgBn3B,KACpBm3B,GAAgB/zB,KAChB+zB,GAAgB9zB,EACxB,CACD,SAASsB,GAAauC,GAClB,OAAQkwB,GAASlwB,IACbmwB,GAAenwB,IACfA,EAAOjI,GACPiI,EAAOlE,QACPkE,EAAOjE,SACPiE,EAAOhE,OACd,CACD,SAASm0B,GAAenwB,GACpB,OAAOowB,GAAcpwB,EAAOnI,IAAMu4B,GAAcpwB,EAAOlI,EAC1D,CACD,SAASs4B,GAAclkC,GACnB,OAAOA,GAAmB,OAAVA,CACnB,CCfD,SAASmkC,GAAW9pB,EAAOzN,EAAO81B,GAG9B,OAAOA,EADQ91B,GADYyN,EAAQqoB,EAGtC,CAID,SAAS0B,GAAgB/pB,EAAOsoB,EAAW/1B,EAAO81B,EAAa2B,GAI3D,YAHiB7qC,IAAb6qC,IACAhqB,EAAQ8pB,GAAW9pB,EAAOgqB,EAAU3B,IAEjCyB,GAAW9pB,EAAOzN,EAAO81B,GAAeC,CAClD,CAID,SAAS2B,GAAehC,GAAuD,IAAjDK,EAAiD,uDAArC,EAAG/1B,EAAkC,uDAA1B,EAAG81B,EAAuB,uCAAV2B,EAAU,uCAC3E/B,EAAK/1B,IAAM63B,GAAgB9B,EAAK/1B,IAAKo2B,EAAW/1B,EAAO81B,EAAa2B,GACpE/B,EAAK91B,IAAM43B,GAAgB9B,EAAK91B,IAAKm2B,EAAW/1B,EAAO81B,EAAa2B,EACvE,CAID,SAASE,GAAcC,EAAvB,GAAsC,IAAR74B,EAAQ,EAARA,EAAGC,EAAK,EAALA,EAC7B04B,GAAeE,EAAI74B,EAAGA,EAAEg3B,UAAWh3B,EAAEiB,MAAOjB,EAAE+2B,aAC9C4B,GAAeE,EAAI54B,EAAGA,EAAE+2B,UAAW/2B,EAAEgB,MAAOhB,EAAE82B,YACjD,CAuDD,SAAS+B,GAAc73B,GACnB,OAAI83B,OAAOC,UAAU/3B,IAEdA,EAAQ,iBAAmBA,EAAQ,cAD/BA,EACwD,CACtE,CACD,SAASg4B,GAActC,EAAMhyB,GACzBgyB,EAAK/1B,IAAM+1B,EAAK/1B,IAAM+D,EACtBgyB,EAAK91B,IAAM81B,EAAK91B,IAAM8D,CACzB,CAMD,SAASu0B,GAAcvC,EAAMwC,EAA7B,GAAqE,oBAA3BlhC,EAA2B,KAAtBmhC,EAAsB,KAAZC,EAAY,KAC3DC,OAAuCzrC,IAA1BsrC,EAAWE,GAA2BF,EAAWE,GAAa,GAC3EtC,EAAczqB,GAAIqqB,EAAK/1B,IAAK+1B,EAAK91B,IAAKy4B,GAE5CX,GAAehC,EAAMwC,EAAWlhC,GAAMkhC,EAAWC,GAAWrC,EAAaoC,EAAWl4B,MACvF,CAID,IAAMs4B,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAI9B,SAASC,GAAaZ,EAAKxjC,GACvB6jC,GAAcL,EAAI74B,EAAG3K,EAAWkkC,IAChCL,GAAcL,EAAI54B,EAAG5K,EAAWmkC,GACnC,CCpHD,SAASE,GAAmBx7B,EAAU03B,GAClC,OAAOuC,GHeX,SAA4BzpB,EAAOknB,GAC/B,IAAKA,EACD,OAAOlnB,EACX,IAAMirB,EAAU/D,EAAe,CAAE51B,EAAG0O,EAAMpL,KAAMrD,EAAGyO,EAAMvL,MACnDy2B,EAAchE,EAAe,CAAE51B,EAAG0O,EAAMtL,MAAOnD,EAAGyO,EAAMrL,SAC9D,MAAO,CACHF,IAAKw2B,EAAQ15B,EACbqD,KAAMq2B,EAAQ35B,EACdqD,OAAQu2B,EAAY35B,EACpBmD,MAAOw2B,EAAY55B,EAE1B,CG1BkC65B,CAAmB37B,EAASyP,wBAAyBioB,GACvF,CCaD,IAAMkE,GAAsB,IAAIhlB,QAK1BilB,GAAAA,WACF,WAAYl9B,IAAe,gBAIvBhN,KAAKmqC,eAAiB,KACtBnqC,KAAKoqC,YAAa,EAClBpqC,KAAKqqC,iBAAmB,KACxBrqC,KAAKknC,YAAc,CAAE/2B,EAAG,EAAGC,EAAG,GAI9BpQ,KAAKsqC,aAAc,EACnBtqC,KAAKuqC,uBAAwB,EAI7BvqC,KAAKwqC,QC7BY,CACrBr6B,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,ID+BjChR,KAAKgN,cAAgBA,CACxB,C,qCACD,SAAMy9B,GAA4C,oEAAJ,CAAC,EAAG,IAA7BC,aAAAA,OAA6B,SAItCv9B,EAAoBnN,KAAKgN,cAAzBG,gBACR,IAAIA,IAAiD,IAA9BA,EAAgBu3B,UAAvC,CAEA,IAAM4B,EAAiB,SAACziC,GAGpB,EAAK8mC,gBACDD,GACA,EAAKA,aAAa/rB,GAAiB9a,EAAO,QAAQgb,MAEzD,EACK+mB,EAAU,SAAC/hC,EAAOye,GAEpB,MAA+C,EAAKC,WAA5CrX,EAAR,EAAQA,KAAM0/B,EAAd,EAAcA,gBAAiBC,EAA/B,EAA+BA,YAC/B,IAAI3/B,GAAS0/B,IACL,EAAKT,gBACL,EAAKA,iBACT,EAAKA,eAAiBzqB,GAAcxU,GAE/B,EAAKi/B,gBALd,CAQA,EAAKC,YAAa,EAClB,EAAKC,iBAAmB,KACxB,EAAKS,qBACD,EAAK99B,cAAcoO,aACnB,EAAKpO,cAAcoO,WAAW2vB,oBAAqB,EACnD,EAAK/9B,cAAcoO,WAAWtT,YAAS9J,GAK3CqqC,IAAS,SAACvB,GACN,IAAI/kC,EAAU,EAAKipC,mBAAmBlE,GAAM53B,OAAS,EAIrD,GAAI+C,GAAQxC,KAAK1N,GAAU,CACvB,IAAQqZ,EAAe,EAAKpO,cAApBoO,WACR,GAAIA,GAAcA,EAAW5P,OAAQ,CACjC,IAAMy/B,EAAe7vB,EAAW5P,OAAO0/B,UAAUpE,GACjD,GAAImE,EAEAlpC,EADe8kC,GAAWoE,IACN95B,WAAWpP,GAAW,IAEjD,CACJ,CACD,EAAKmlC,YAAYJ,GAAQ/kC,CAC5B,IAEG8oC,GACA9oB,GAAAA,QAAa,kBAAM8oB,EAAYhnC,EAAOye,EAAzB,IAAgC,GAAO,GAExD,IAAQxU,EAAmB,EAAKd,cAAxBc,eACRA,GAAkBA,EAAe2U,UAAU,aAAa,EAjCvD,CAkCJ,EACKojB,EAAS,SAAChiC,EAAOye,GAEnB,MAAyE,EAAKC,WAAtEqoB,EAAR,EAAQA,gBAAiBO,EAAzB,EAAyBA,kBAAmBC,EAA5C,EAA4CA,gBAAiBC,EAA7D,EAA6DA,OAE7D,GAAKT,GAAoB,EAAKT,eAA9B,CAEA,IAAQrxB,EAAWwJ,EAAXxJ,OAER,GAAIqyB,GAA+C,OAA1B,EAAKd,iBAM1B,OALA,EAAKA,iBAAmBiB,GAAoBxyB,QAEd,OAA1B,EAAKuxB,kBACLe,GAAmBA,EAAgB,EAAKf,mBAKhD,EAAKkB,WAAW,IAAKjpB,EAAKzD,MAAO/F,GACjC,EAAKyyB,WAAW,IAAKjpB,EAAKzD,MAAO/F,GAOjC,EAAK9L,cAAc5I,SAKnBinC,GAAUA,EAAOxnC,EAAOye,EAzBd,CA0Bb,EACK6jB,EAAe,SAACtiC,EAAOye,GAAR,OAAiB,EAAKsT,KAAK/xB,EAAOye,EAAlC,EACrBtiB,KAAKwrC,WAAa,IAAIrG,GAAWsF,EAAa,CAC1CnE,eAAAA,EACAV,QAAAA,EACAC,OAAAA,EACAM,aAAAA,GACD,CAAEz9B,mBAAoB1I,KAAKgN,cAAcy+B,yBA5FlC,CA6Fb,G,kBACD,SAAK5nC,EAAOye,GACR,IAAM8nB,EAAapqC,KAAKoqC,WAExB,GADApqC,KAAKuD,SACA6mC,EAAL,CAEA,IAAQ5iB,EAAalF,EAAbkF,SACRxnB,KAAKo/B,eAAe5X,GACpB,IAAQkkB,EAAc1rC,KAAKuiB,WAAnBmpB,UACJA,GACA3pB,GAAAA,QAAa,kBAAM2pB,EAAU7nC,EAAOye,EAAvB,GALP,CAOb,G,oBACD,WACItiB,KAAKoqC,YAAa,EAClB,MAAuCpqC,KAAKgN,cAApCoO,EAAR,EAAQA,WAAYtN,EAApB,EAAoBA,eAChBsN,IACAA,EAAW2vB,oBAAqB,GAEpC/qC,KAAKwrC,YAAcxrC,KAAKwrC,WAAWvF,MACnCjmC,KAAKwrC,gBAAaxtC,GACUgC,KAAKuiB,WAAzBqoB,iBACgB5qC,KAAKmqC,iBACzBnqC,KAAKmqC,iBACLnqC,KAAKmqC,eAAiB,MAE1Br8B,GAAkBA,EAAe2U,UAAU,aAAa,EAC3D,G,wBACD,SAAWqkB,EAAM6E,EAAQ7yB,GACrB,IAAQ5N,EAASlL,KAAKuiB,WAAdrX,KAER,GAAK4N,GAAW8yB,GAAW9E,EAAM57B,EAAMlL,KAAKqqC,kBAA5C,CAEA,IAAMwB,EAAY7rC,KAAKgrC,mBAAmBlE,GACtChgC,EAAO9G,KAAKknC,YAAYJ,GAAQhuB,EAAOguB,GAEvC9mC,KAAKsqC,aAAetqC,KAAKsqC,YAAYxD,KACrChgC,ENzKZ,SAA0B+X,EAA1B,EAA+C2rB,GAAS,IAArBz5B,EAAqB,EAArBA,IAAKC,EAAgB,EAAhBA,IASpC,YARYhT,IAAR+S,GAAqB8N,EAAQ9N,EAE7B8N,EAAQ2rB,EAAU/tB,GAAI1L,EAAK8N,EAAO2rB,EAAQz5B,KAAO/W,KAAKgX,IAAI6N,EAAO9N,QAEpD/S,IAARgT,GAAqB6N,EAAQ7N,IAElC6N,EAAQ2rB,EAAU/tB,GAAIzL,EAAK6N,EAAO2rB,EAAQx5B,KAAOhX,KAAK+W,IAAI8N,EAAO7N,IAE9D6N,CACV,CM+JkBitB,CAAiBhlC,EAAM9G,KAAKsqC,YAAYxD,GAAO9mC,KAAKwqC,QAAQ1D,KAEvE+E,EAAUx8B,IAAIvI,EAPJ,CAQb,G,gCACD,WAAqB,WACjB,EAAyC9G,KAAKuiB,WAAtCwpB,EAAR,EAAQA,gBAAiB/D,EAAzB,EAAyBA,YACjBx8B,GAAWxL,KAAKgN,cAAcoO,YAAc,CAAC,GAA7C5P,OACFwgC,EAAkBhsC,KAAKsqC,YACzByB,GAAmBxiC,EAAYwiC,GAC1B/rC,KAAKsqC,cACNtqC,KAAKsqC,YAActqC,KAAKisC,yBAKxBjsC,KAAKsqC,eADLyB,IAAmBvgC,IN3JnC,SAAiC0/B,EAAjC,GAA0E,IAA5B53B,EAA4B,EAA5BA,IAAKG,EAAuB,EAAvBA,KAAMD,EAAiB,EAAjBA,OAAQD,EAAS,EAATA,MAC7D,MAAO,CACHpD,EAAGu3B,GAA4BwD,EAAU/6B,EAAGsD,EAAMF,GAClDnD,EAAGs3B,GAA4BwD,EAAU96B,EAAGkD,EAAKE,GAExD,CMuJkC04B,CAAwB1gC,EAAO0/B,UAAWa,GAMrE/rC,KAAKwqC,QNpGb,WAA0D,IAA9BxC,EAA8B,uDAAhBF,GAOtC,OANoB,IAAhBE,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAAcF,IAEX,CACH33B,EAAG43B,GAAmBC,EAAa,OAAQ,SAC3C53B,EAAG23B,GAAmBC,EAAa,MAAO,UAEjD,CMyFsBmE,CAAmBnE,GAK9BgE,IAAoBhsC,KAAKsqC,aACzB9+B,GACAxL,KAAKsqC,cACJtqC,KAAKuqC,uBACNlC,IAAS,SAACvB,GACF,EAAKkE,mBAAmBlE,KACxB,EAAKwD,YAAYxD,GN7HrC,SAA+Bt7B,EAAQ8+B,GACnC,IAAM8B,EAAsB,CAAC,EAO7B,YANwBpuC,IAApBssC,EAAYv5B,MACZq7B,EAAoBr7B,IAAMu5B,EAAYv5B,IAAMvF,EAAOuF,UAE/B/S,IAApBssC,EAAYt5B,MACZo7B,EAAoBp7B,IAAMs5B,EAAYt5B,IAAMxF,EAAOuF,KAEhDq7B,CACV,CMoH4CC,CAAsB7gC,EAAO0/B,UAAUpE,GAAO,EAAKwD,YAAYxD,IAE/F,GAER,G,mCACD,WACI,MAAmE9mC,KAAKuiB,WAA/C+nB,EAAzB,EAAQyB,gBAA8BO,EAAtC,EAAsCA,yBACtC,IAAKhC,IAAgB/gC,EAAY+gC,GAC7B,OAAO,EACX,IAAMiC,EAAqBjC,EAAYvoC,QACvC4lB,GAAiC,OAAvB4kB,EAA6B,0GACvC,IAAQnxB,EAAepb,KAAKgN,cAApBoO,WAER,IAAKA,IAAeA,EAAW5P,OAC3B,OAAO,EACX,IAAMghC,ED5Nd,SAAwBtxB,EAASuxB,EAAoB/jC,GACjD,IAAMgkC,EAAc7C,GAAmB3uB,EAASxS,GACxCikC,EAAWF,EAAXE,OAKR,OAJIA,IACAvD,GAAcsD,EAAYv8B,EAAGw8B,EAAO7zB,OAAO3I,GAC3Ci5B,GAAcsD,EAAYt8B,EAAGu8B,EAAO7zB,OAAO1I,IAExCs8B,CACV,CCoN8BE,CAAeL,EAAoBnxB,EAAWrgB,KAAMiF,KAAKgN,cAAcy+B,yBAC1FoB,ENtKZ,SAAiC3B,EAAWsB,GACxC,MAAO,CACHr8B,EAAGw3B,GAA4BuD,EAAU/6B,EAAGq8B,EAAer8B,GAC3DC,EAAGu3B,GAA4BuD,EAAU96B,EAAGo8B,EAAep8B,GAElE,CMiKiC08B,CAAwB1xB,EAAW5P,OAAO0/B,UAAWsB,GAK/E,GAAIF,EAA0B,CAC1B,IAAMS,EAAkBT,EJ9NpC,YAA2C,IAARn8B,EAAQ,EAARA,EAAGC,EAAK,EAALA,EAClC,MAAO,CAAEkD,IAAKlD,EAAEW,IAAKwC,MAAOpD,EAAEa,IAAKwC,OAAQpD,EAAEY,IAAKyC,KAAMtD,EAAEY,IAC7D,CI4N4Di8B,CAAwBH,IACzE7sC,KAAKuqC,wBAA0BwC,EAC3BA,IACAF,EAAsBvE,GAAwByE,GAErD,CACD,OAAOF,CACV,G,4BACD,SAAerlB,GAAU,WACrB,EAAoGxnB,KAAKuiB,WAAjGrX,EAAR,EAAQA,KAAM+hC,EAAd,EAAcA,aAAcjF,EAA5B,EAA4BA,YAAakF,EAAzC,EAAyCA,eAAgBC,EAAzD,EAAyDA,iBAAkBC,EAA3E,EAA2EA,oBACrE9C,EAActqC,KAAKsqC,aAAe,CAAC,EACnC+C,EAAqBhF,IAAS,SAACvB,GACjC,GAAK8E,GAAW9E,EAAM57B,EAAM,EAAKm/B,kBAAjC,CAGA,IAAIvuC,EAAcwuC,GAAeA,EAAYxD,IAAU,CAAC,EACpDqG,IACArxC,EAAa,CAAEiV,IAAK,EAAGC,IAAK,IAOhC,IAAM6jB,EAAkBmT,EAAc,IAAM,IACtCpT,EAAgBoT,EAAc,GAAK,IACnCvT,GAAU,gBACZ5jB,KAAM,UACN2W,SAAUylB,EAAezlB,EAASsf,GAAQ,EAC1CjS,gBAAAA,EACAD,cAAAA,EACAD,aAAc,IACdpB,UAAW,EACXC,UAAW,IACR0Z,GACApxC,GAKP,OAAO,EAAKwxC,wBAAwBxG,EAAMrS,EA1BzC,CA2BJ,IAED,OAAO6C,QAAQpR,IAAImnB,GAAoBrU,KAAKoU,EAC/C,G,qCACD,SAAwBtG,EAAMhrC,GAC1B,IAAM+vC,EAAY7rC,KAAKgrC,mBAAmBlE,GAC1C,OAAO+E,EAAU/hC,MAAMizB,GAAmB+J,EAAM+E,EAAW,EAAG/vC,GACjE,G,2BACD,WAAgB,WACZusC,IAAS,SAACvB,GAAD,OAAU,EAAKkE,mBAAmBlE,GAAMlR,MAAxC,GACZ,G,gCAOD,SAAmBkR,GACf,IAAMyG,EAAU,QAAUzG,EAAK9qB,cACzBphB,EAAQoF,KAAKgN,cAAcuV,WAC3BirB,EAAsB5yC,EAAM2yC,GAClC,OAAOC,GAEDxtC,KAAKgN,cAAckzB,SAAS4G,GAAOlsC,EAAM4P,QAAU5P,EAAM4P,QAAQs8B,QAAQ9oC,IAAc,EAChG,G,0BACD,SAAa6gB,GAAO,WAChBwpB,IAAS,SAACvB,GAGN,GAAK8E,GAAW9E,EAFC,EAAKvkB,WAAdrX,KAEoB,EAAKm/B,kBAAjC,CAEA,IAAQjvB,EAAe,EAAKpO,cAApBoO,WACFywB,EAAY,EAAKb,mBAAmBlE,GAC1C,GAAI1rB,GAAcA,EAAW5P,OAAQ,CACjC,MAAqB4P,EAAW5P,OAAO0/B,UAAUpE,GAAzC/1B,EAAR,EAAQA,IAAKC,EAAb,EAAaA,IACb66B,EAAUx8B,IAAIwP,EAAMioB,GAAQrqB,GAAI1L,EAAKC,EAAK,IAC7C,CANS,CAOb,GACJ,G,4CAMD,WAAiC,WAC7B,GAAKhR,KAAKgN,cAAcjL,QAAxB,CAEA,MAAkC/B,KAAKuiB,WAA/BrX,EAAR,EAAQA,KAAM6gC,EAAd,EAAcA,gBACN3wB,EAAepb,KAAKgN,cAApBoO,WACR,GAAK7R,EAAYwiC,IAAqB3wB,GAAepb,KAAKsqC,YAA1D,CAMAtqC,KAAK2qC,gBAKL,IAAM8C,EAAc,CAAEt9B,EAAG,EAAGC,EAAG,GAC/Bi4B,IAAS,SAACvB,GACN,IAAM+E,EAAY,EAAKb,mBAAmBlE,GAC1C,GAAI+E,EAAW,CACX,IAAMtW,EAASsW,EAAU38B,MACzBu+B,EAAY3G,GN5Q5B,SAAoB5+B,EAAQJ,GACxB,IAAI+Q,EAAS,GACP60B,EAAe7G,GAAW3+B,GAC1BylC,EAAe9G,GAAW/+B,GAOhC,OANI6lC,EAAeD,EACf70B,EAAS8T,GAAS7kB,EAAOiJ,IAAKjJ,EAAOkJ,IAAM08B,EAAcxlC,EAAO6I,KAE3D28B,EAAeC,IACpB90B,EAAS8T,GAASzkB,EAAO6I,IAAK7I,EAAO8I,IAAM28B,EAAc7lC,EAAOiJ,MAE7DD,EAAM,EAAG,EAAG+H,EACtB,CMiQmCD,CAAW,CAAE7H,IAAKwkB,EAAQvkB,IAAKukB,GAAU,EAAK+U,YAAYxD,GACjF,CACJ,IAID,IAAQjxB,EAAsB7V,KAAKgN,cAAcuV,WAAzC1M,kBACR7V,KAAKgN,cAAcjL,QAAQ7C,MAAMsG,UAAYqQ,EACvCA,EAAkB,CAAC,EAAG,IACtB,OACNuF,EAAWrgB,MAAQqgB,EAAWrgB,KAAK6yC,eACnCxyB,EAAWyyB,eACX7tC,KAAK8qC,qBAKLzC,IAAS,SAACvB,GACN,GAAK8E,GAAW9E,EAAM57B,EAAM,MAA5B,CAKA,IAAM2gC,EAAY,EAAKb,mBAAmBlE,GAC1C,EAAqB,EAAKwD,YAAYxD,GAA9B/1B,EAAR,EAAQA,IAAKC,EAAb,EAAaA,IACb66B,EAAUx8B,IAAIoN,GAAI1L,EAAKC,EAAKy8B,EAAY3G,IAN9B,CAOb,GAzCS,CAJA,CA8Cb,G,0BACD,WAAe,WACX,GAAK9mC,KAAKgN,cAAcjL,QAAxB,CAEAkoC,GAAoB56B,IAAIrP,KAAKgN,cAAehN,MAC5C,IAIM8tC,EAAsBhvB,GAJZ9e,KAAKgN,cAAcjL,QAIkB,eAAe,SAAC8B,GACjE,MAAsC,EAAK0e,WAAnCrX,EAAR,EAAQA,KAAR,IAAcgM,aACdhM,SADA,WACwB,EAAKpB,MAAMjG,EACtC,IACKkqC,EAAyB,WAEvBxkC,EADwB,EAAKgZ,WAAzBwpB,mBAEJ,EAAKzB,YAAc,EAAK2B,wBAE/B,EACO7wB,EAAepb,KAAKgN,cAApBoO,WACF4yB,EAA4B5yB,EAAWiD,iBAAiB,UAAW0vB,GACrE3yB,IAAeA,EAAW5P,SAC1B4P,EAAWrgB,MAAQqgB,EAAWrgB,KAAK6yC,eACnCxyB,EAAWyyB,gBAEfE,IAKA,IAAME,EAAqB/vB,GAAYtQ,OAAQ,UAAU,kBAAM,EAAKsgC,gCAAX,IAKnDC,EAA2B/yB,EAAWiD,iBAAiB,aAAc,YAAiC,IAA9B6B,EAA8B,EAA9BA,MAAOkuB,EAAuB,EAAvBA,iBAC7E,EAAKhE,YAAcgE,IACnB/F,IAAS,SAACvB,GACN,IAAMpH,EAAc,EAAKsL,mBAAmBlE,GACvCpH,IAEL,EAAKwH,YAAYJ,IAAS5mB,EAAM4mB,GAAMK,UACtCzH,EAAYrwB,IAAIqwB,EAAYxwB,MAAQgR,EAAM4mB,GAAMK,WACnD,IACD,EAAKn6B,cAAc5I,SAE1B,IACD,OAAO,WACH6pC,IACAH,IACAE,IACAG,GAA4BA,GAC/B,CAjDS,CAkDb,G,sBACD,WACI,IAAMvzC,EAAQoF,KAAKgN,cAAcuV,WACjC,EAA0J3nB,EAAlJsQ,KAAAA,OAAR,WAA0JtQ,EAApIuwC,kBAAAA,OAAtB,WAA0JvwC,EAAzGgwC,gBAAAA,OAAjD,WAA0JhwC,EAAhFmxC,gBAAAA,OAA1E,WAA0JnxC,EAAvDotC,YAAAA,OAAnG,MAAiHF,GAAjH,IAA0JltC,EAAzBqyC,aAAAA,OAAjI,SACA,yBACOryC,GADP,IAEIsQ,KAAAA,EACAigC,kBAAAA,EACAP,gBAAAA,EACAmB,gBAAAA,EACA/D,YAAAA,EACAiF,aAAAA,GAEP,K,EAzZC/C,GA2ZN,SAAS0B,GAAW3R,EAAW/uB,EAAMm/B,GACjC,QAAkB,IAATn/B,GAAiBA,IAAS+uB,KACT,OAArBoQ,GAA6BA,IAAqBpQ,EAC1D,CAQD,SAASqR,GAAoBxyB,GAA4B,IAApBu1B,EAAoB,uDAAJ,GAC7CpU,EAAY,KAOhB,OANIjgC,KAAKuwB,IAAIzR,EAAO1I,GAAKi+B,EACrBpU,EAAY,IAEPjgC,KAAKuwB,IAAIzR,EAAO3I,GAAKk+B,IAC1BpU,EAAY,KAETA,CACV,C,IElcKqU,GAAAA,SAAAA,I,+BACF,WAAYzsC,GAAM,8BACd,cAAMA,IACD0sC,oBAAsB9pC,GAC3B,EAAK8hC,gBAAkB9hC,GACvB,EAAKs0B,SAAW,IAAImR,GAA0BroC,GAJhC,CAKjB,C,qCACD,WAGI,IAAQ2sC,EAAiBxuC,KAAK6B,KAAK0gB,WAA3BisB,aACJA,IACAxuC,KAAKuuC,oBAAsBC,EAAajK,UAAUvkC,KAAK+4B,WAE3D/4B,KAAKumC,gBAAkBvmC,KAAK+4B,SAAS0V,gBAAkBhqC,EAC1D,G,qBACD,WACIzE,KAAKuuC,sBACLvuC,KAAKumC,iBACR,K,EAnBC+H,CAAoBvuB,ICEpB2uB,GAAe,SAAC5qC,GAAD,OAAa,SAACD,EAAOye,GAClCxe,GACAie,GAAAA,QAAa,kBAAMje,EAAQD,EAAOye,EAArB,GAEpB,CAJoB,EAKfqsB,GAAAA,SAAAA,I,+BACF,aAAc,8BACV,eAAS3mC,YACJ4mC,0BAA4BnqC,GAFvB,CAGb,C,6CACD,SAAcoqC,GACV7uC,KAAK8uC,QAAU,IAAI3J,GAAW0J,EAAkB7uC,KAAK+uC,oBAAqB,CAAErmC,mBAAoB1I,KAAK6B,KAAK4pC,yBAC7G,G,+BACD,WAAoB,WAChB,EAA2DzrC,KAAK6B,KAAK0gB,WAA7DysB,EAAR,EAAQA,kBAAmBC,EAA3B,EAA2BA,WAAYC,EAAvC,EAAuCA,MAAOC,EAA9C,EAA8CA,SAC9C,MAAO,CACH7I,eAAgBoI,GAAaM,GAC7BpJ,QAAS8I,GAAaO,GACtBpJ,OAAQqJ,EACRhJ,MAAO,SAACriC,EAAOye,UACJ,EAAKwsB,QACRK,GACAptB,GAAAA,QAAa,kBAAMotB,EAAStrC,EAAOye,EAAtB,GAEpB,EAER,G,mBACD,WAAQ,WACJtiB,KAAK4uC,0BAA4B9vB,GAAgB9e,KAAK6B,KAAKE,QAAS,eAAe,SAAC8B,GAAD,OAAW,EAAKurC,cAAcvrC,EAA9B,GACtF,G,oBACD,WACI7D,KAAK8uC,SAAW9uC,KAAK8uC,QAAQO,eAAervC,KAAK+uC,oBACpD,G,qBACD,WACI/uC,KAAK4uC,4BACL5uC,KAAK8uC,SAAW9uC,KAAK8uC,QAAQ7I,KAChC,K,EA/BC0I,CAAmB5uB,ICNzB,IAAMuvB,GAAwB,CAK1BC,wBAAwB,EAKxBC,gBAAgB,GCbpB,SAASC,GAAgBC,EAAQ5I,GAC7B,OAAIA,EAAK91B,MAAQ81B,EAAK/1B,IACX,EACH2+B,GAAU5I,EAAK91B,IAAM81B,EAAK/1B,KAAQ,GAC7C,CAQD,IAAM4+B,GAAsB,CACxBC,QAAS,SAACra,EAAQ1zB,GACd,IAAKA,EAAKiG,OACN,OAAOytB,EAKX,GAAsB,kBAAXA,EAAqB,CAC5B,IAAIrjB,GAAGzC,KAAK8lB,GAIR,OAAOA,EAHPA,EAASpkB,WAAWokB,EAK3B,CAKD,IAAMplB,EAAIs/B,GAAgBla,EAAQ1zB,EAAKiG,OAAOqI,GACxCC,EAAIq/B,GAAgBla,EAAQ1zB,EAAKiG,OAAOsI,GAC9C,gBAAUD,EAAV,aAAgBC,EAAhB,IACH,GClCCy/B,GAAmB,CACrBD,QAAS,SAACra,EAAD,GAA4C,IAAjCua,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,gBACrBC,EAAWza,EACX0a,EAASrhB,GAAQ1d,MAAMqkB,GAE7B,GAAI0a,EAAOhoC,OAAS,EAChB,OAAO+nC,EACX,IAAMvgB,EAAWb,GAAQJ,kBAAkB+G,GACrCzc,EAA8B,kBAAdm3B,EAAO,GAAkB,EAAI,EAE7CC,EAASH,EAAgB5/B,EAAEiB,MAAQ0+B,EAAU3/B,EAC7CggC,EAASJ,EAAgB3/B,EAAEgB,MAAQ0+B,EAAU1/B,EACnD6/B,EAAO,EAAIn3B,IAAWo3B,EACtBD,EAAO,EAAIn3B,IAAWq3B,EAOtB,IAAMC,EAAe3zB,GAAIyzB,EAAQC,EAAQ,IAOzC,MALkC,kBAAvBF,EAAO,EAAIn3B,KAClBm3B,EAAO,EAAIn3B,IAAWs3B,GAEQ,kBAAvBH,EAAO,EAAIn3B,KAClBm3B,EAAO,EAAIn3B,IAAWs3B,GACnB3gB,EAASwgB,EACnB,GCrBCI,GAAAA,SAAAA,I,4IAMF,WAAoB,IlJfGC,EkJeH,OAChB,EAAoEtwC,KAAKpF,MAAjEoS,EAAR,EAAQA,cAAeujC,EAAvB,EAAuBA,YAAaC,EAApC,EAAoCA,kBAAmB3jC,EAAvD,EAAuDA,SAC/CuO,EAAepO,EAAfoO,WlJjBWk1B,EkJkBDG,GlJjBtBrpC,OAAOyP,OAAOnH,EAAiB4gC,GkJkBvBl1B,IACIm1B,EAAYG,OACZH,EAAYG,MAAMtvB,IAAIhG,GACtBo1B,GAAqBA,EAAkBzL,UAAYl4B,GACnD2jC,EAAkBzL,SAAS3pB,GAE/BA,EAAWrgB,KAAK41C,YAChBv1B,EAAWiD,iBAAiB,qBAAqB,WAC7C,EAAKuyB,cACR,IACDx1B,EAAWy1B,YAAX,kBACOz1B,EAAWtW,SADlB,IAEI6/B,eAAgB,kBAAM,EAAKiM,cAAX,MAGxBtB,GAAsBE,gBAAiB,CAC1C,G,qCACD,SAAwBnuC,GAAW,WAC/B,EAA6DrB,KAAKpF,MAA1Dk2C,EAAR,EAAQA,iBAAkB9jC,EAA1B,EAA0BA,cAAe9B,EAAzC,EAAyCA,KAAMw5B,EAA/C,EAA+CA,UACzCtpB,EAAapO,EAAcoO,WACjC,OAAKA,GASLA,EAAWspB,UAAYA,EACnBx5B,GACA7J,EAAUyvC,mBAAqBA,QACV9yC,IAArB8yC,EACA11B,EAAW21B,aAGX/wC,KAAK4wC,eAELvvC,EAAUqjC,YAAcA,IACpBA,EACAtpB,EAAW41B,UAEL51B,EAAW61B,YAMjBlvB,GAAAA,YAAiB,WACb,IAAMmvB,EAAQ91B,EAAW+1B,WACpBD,GAAUA,EAAME,QAAQnpC,QACzB,EAAK2oC,cAEZ,KAGF,MAnCI,IAoCd,G,gCACD,WAAqB,WACTx1B,EAAepb,KAAKpF,MAAMoS,cAA1BoO,WACJA,IACAA,EAAWrgB,KAAK41C,YAChBU,gBAAe,YACNj2B,EAAWk2B,kBAAoBl2B,EAAWm2B,UAC3C,EAAKX,cAEZ,IAER,G,kCACD,WACI,MAA2E5wC,KAAKpF,MAAxEoS,EAAR,EAAQA,cAAeujC,EAAvB,EAAuBA,YAAgCiB,EAAvD,EAAoChB,kBAC5Bp1B,EAAepO,EAAfoO,WACJA,IACAA,EAAWq2B,4BACPlB,GAAeA,EAAYG,OAC3BH,EAAYG,MAAMvP,OAAO/lB,GACzBo2B,GAAkBA,EAAeE,YACjCF,EAAeE,WAAWt2B,GAErC,G,0BACD,WACI,IAAQw1B,EAAiB5wC,KAAKpF,MAAtBg2C,aACRA,GAAgBA,GACnB,G,oBACD,WACI,OAAO,IACV,K,EAhGCP,CAAiCsB,EAAAA,WAkGvC,SAAShlC,GAAc/R,GACnB,MCnFJ,WACI,IAAMiF,GAAU8K,EAAAA,EAAAA,YAAW5B,GAC3B,GAAgB,OAAZlJ,EACA,MAAO,EAAC,EAAM,MAClB,IAAQ6kC,EAAwC7kC,EAAxC6kC,UAAWC,EAA6B9kC,EAA7B8kC,eAAgBI,EAAallC,EAAbklC,SAG7Br2B,GAAKkjC,EAAAA,EAAAA,SAGX,OAFAxoC,EAAAA,EAAAA,YAAU,kBAAM27B,EAASr2B,EAAf,GAAoB,KAEtBg2B,GAAaC,EAAiB,EAAC,EADlB,kBAAMA,GAAkBA,EAAej2B,EAAvC,GACyC,EAAC,EAClE,CDwEqCmjC,GAAlC,gBAAOnN,EAAP,KAAkBkM,EAAlB,KACML,GAAc5lC,EAAAA,EAAAA,YAAWgB,GAC/B,OAAQgmC,EAAAA,cAA6BtB,IAA7B,kBAA4Dz1C,GAA5D,IAAmE21C,YAAaA,EAAaC,mBAAmB7lC,EAAAA,EAAAA,YAAWiB,GAA2B84B,UAAWA,EAAWkM,aAAcA,IACrM,CACD,IAAMH,GAAyB,CAC3Bx0C,cAAc,kBACP0zC,IADK,IAERmC,QAAS,CACL,sBACA,uBACA,yBACA,6BAGRh/B,oBAAqB68B,GACrB58B,qBAAsB48B,GACtB18B,uBAAwB08B,GACxB38B,wBAAyB28B,GACzBtzC,UAAWwzC,IEzHTkC,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQ9pC,OACrBgqC,GAAW,SAACztC,GAAD,MAA4B,kBAAVA,EAAqB2M,WAAW3M,GAASA,CAA3D,EACX0tC,GAAO,SAAC1tC,GAAD,MAA4B,kBAAVA,GAAsB0N,GAAGzC,KAAKjL,EAAhD,EACb,SAAS2tC,GAAUrqC,EAAQsqC,EAAQC,EAAM1lB,EAAU2lB,EAAwBC,GACnED,GACAxqC,EAAOqN,QAAUsH,GAAI,OAEJze,IAAjBq0C,EAAKl9B,QAAwBk9B,EAAKl9B,QAAU,EAAGq9B,GAAgB7lB,IAC/D7kB,EAAO2qC,YAAch2B,QAAuBze,IAAnBo0C,EAAOj9B,QAAwBi9B,EAAOj9B,QAAU,EAAG,EAAGu9B,GAAiB/lB,KAE3F4lB,IACLzqC,EAAOqN,QAAUsH,QAAuBze,IAAnBo0C,EAAOj9B,QAAwBi9B,EAAOj9B,QAAU,OAAoBnX,IAAjBq0C,EAAKl9B,QAAwBk9B,EAAKl9B,QAAU,EAAGwX,IAK3H,IAAK,IAAI5kB,EAAI,EAAGA,EAAIiqC,GAAYjqC,IAAK,CACjC,IAAM4qC,EAAc,SAAH,OAAYZ,GAAQhqC,GAApB,UACb6qC,EAAeC,GAAUT,EAAQO,GACjCG,EAAaD,GAAUR,EAAMM,GACjC,QAAqB30C,IAAjB40C,QAA6C50C,IAAf80C,EAElCF,IAAiBA,EAAe,GAChCE,IAAeA,EAAa,GACI,IAAjBF,GACI,IAAfE,GACAZ,GAAKU,KAAkBV,GAAKY,IAE5BhrC,EAAO6qC,GAAe34C,KAAKgX,IAAIyL,GAAIw1B,GAASW,GAAeX,GAASa,GAAanmB,GAAW,IACxF1a,GAAQxC,KAAKqjC,IAAe7gC,GAAQxC,KAAKmjC,MACzC9qC,EAAO6qC,IAAgB,MAI3B7qC,EAAO6qC,GAAeG,CAE7B,EAIGV,EAAOh+B,QAAUi+B,EAAKj+B,UACtBtM,EAAOsM,OAASqI,GAAI21B,EAAOh+B,QAAU,EAAGi+B,EAAKj+B,QAAU,EAAGuY,GAEjE,CACD,SAASkmB,GAAUv6B,EAAQy6B,GACvB,YAA8B/0C,IAAvBsa,EAAOy6B,GACRz6B,EAAOy6B,GACPz6B,EAAOrc,YAChB,CAwBD,IAAMu2C,GAAkBQ,GAAS,EAAG,GAAKlqB,IACnC4pB,GAAmBM,GAAS,GAAK,IAAMvuC,IAC7C,SAASuuC,GAASjiC,EAAKC,EAAK/L,GACxB,OAAO,SAAC0D,GAEJ,OAAIA,EAAIoI,EACG,EACPpI,EAAIqI,EACG,EACJ/L,EAAO0nB,GAAS5b,EAAKC,EAAKrI,GACpC,CACJ,CCrFD,SAASsqC,GAAanM,EAAMoM,GACxBpM,EAAK/1B,IAAMmiC,EAAWniC,IACtB+1B,EAAK91B,IAAMkiC,EAAWliC,GACzB,CAMD,SAASmiC,GAAYnK,EAAKoK,GACtBH,GAAajK,EAAI74B,EAAGijC,EAAUjjC,GAC9B8iC,GAAajK,EAAI54B,EAAGgjC,EAAUhjC,EACjC,CCVD,SAASijC,GAAiBx0B,EAAOsoB,EAAW/1B,EAAO81B,EAAa2B,GAM5D,OAJAhqB,EAAQ8pB,GADR9pB,GAASsoB,EACiB,EAAI/1B,EAAO81B,QACpBlpC,IAAb6qC,IACAhqB,EAAQ8pB,GAAW9pB,EAAO,EAAIgqB,EAAU3B,IAErCroB,CACV,CAsBD,SAASy0B,GAAqBxM,EAAMwC,EAApC,EAA4EzwB,EAAQ06B,GAAY,oBAA/CnrC,EAA+C,KAA1CmhC,EAA0C,KAAhCC,EAAgC,MAlBhG,SAAyB1C,GAA8F,IAAxFK,EAAwF,uDAA5E,EAAG/1B,EAAyE,uDAAjE,EAAGyH,EAA8D,uDAArD,GAAKgwB,EAAgD,uCAAtCqK,EAAsC,uDAAzBpM,EAAMyM,EAAmB,uDAANzM,EAC7G,GAAI70B,GAAQxC,KAAK03B,GAAY,CACzBA,EAAYh2B,WAAWg2B,GAEvBA,EADyB1qB,GAAI82B,EAAWxiC,IAAKwiC,EAAWviC,IAAKm2B,EAAY,KAC1CoM,EAAWxiC,GAC7C,CACD,GAAyB,kBAAdo2B,EAAX,CAEA,IAAID,EAAczqB,GAAIy2B,EAAWniC,IAAKmiC,EAAWliC,IAAK6H,GAClDiuB,IAASoM,IACThM,GAAeC,GACnBL,EAAK/1B,IAAMsiC,GAAiBvM,EAAK/1B,IAAKo2B,EAAW/1B,EAAO81B,EAAa2B,GACrE/B,EAAK91B,IAAMqiC,GAAiBvM,EAAK91B,IAAKm2B,EAAW/1B,EAAO81B,EAAa2B,EAL3D,CAMb,CAMG2K,CAAgB1M,EAAMwC,EAAWlhC,GAAMkhC,EAAWC,GAAWD,EAAWE,GAAYF,EAAWl4B,MAAOyH,EAAQ06B,EACjH,CAID,IAAM7J,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAAS8J,GAAoBzK,EAAKM,EAAY8J,EAAWM,GACrDJ,GAAqBtK,EAAI74B,EAAGm5B,EAAYI,GAAO0J,EAAYA,EAAUjjC,OAAInS,EAAW01C,EAAYA,EAAUvjC,OAAInS,GAC9Gs1C,GAAqBtK,EAAI54B,EAAGk5B,EAAYK,GAAOyJ,EAAYA,EAAUhjC,OAAIpS,EAAW01C,EAAYA,EAAUtjC,OAAIpS,EACjH,CCjDD,SAAS21C,GAAgBzzB,GACrB,OAA2B,IAApBA,EAAMinB,WAAmC,IAAhBjnB,EAAM9O,KACzC,CACD,SAASwiC,GAAY1zB,GACjB,OAAOyzB,GAAgBzzB,EAAM/P,IAAMwjC,GAAgBzzB,EAAM9P,EAC5D,CACD,SAASyjC,GAAU50B,EAAGC,GAClB,OAAQD,EAAE9O,EAAEY,MAAQmO,EAAE/O,EAAEY,KACpBkO,EAAE9O,EAAEa,MAAQkO,EAAE/O,EAAEa,KAChBiO,EAAE7O,EAAEW,MAAQmO,EAAE9O,EAAEW,KAChBkO,EAAE7O,EAAEY,MAAQkO,EAAE9O,EAAEY,GACvB,CACD,SAAS8iC,GAAY9K,GACjB,OAAOnC,GAAWmC,EAAI74B,GAAK02B,GAAWmC,EAAI54B,EAC7C,C,ICdK2jC,GAAAA,WACF,cAAc,gBACV/zC,KAAKoxC,QAAU,EAClB,C,mCACD,SAAIvvC,GACA07B,GAAcv9B,KAAKoxC,QAASvvC,GAC5BA,EAAKmyC,gBACR,G,oBACD,SAAOnyC,GAKH,GAJA47B,GAAWz9B,KAAKoxC,QAASvvC,GACrBA,IAAS7B,KAAKi0C,WACdj0C,KAAKi0C,cAAWj2C,GAEhB6D,IAAS7B,KAAKqyC,KAAM,CACpB,IAAM4B,EAAWj0C,KAAKoxC,QAAQpxC,KAAKoxC,QAAQnpC,OAAS,GAChDgsC,GACAj0C,KAAKgxC,QAAQiD,EAEpB,CACJ,G,sBACD,SAASpyC,GACL,IAMIoyC,EANEC,EAAcl0C,KAAKoxC,QAAQ+C,WAAU,SAACC,GAAD,OAAYvyC,IAASuyC,CAArB,IAC3C,GAAoB,IAAhBF,EACA,OAAO,EAKX,IAAK,IAAInsC,EAAImsC,EAAansC,GAAK,EAAGA,IAAK,CACnC,IAAMqsC,EAASp0C,KAAKoxC,QAAQrpC,GAC5B,IAAyB,IAArBqsC,EAAO1P,UAAqB,CAC5BuP,EAAWG,EACX,KACH,CACJ,CACD,QAAIH,IACAj0C,KAAKgxC,QAAQiD,IACN,EAKd,G,qBACD,SAAQpyC,EAAMwyC,GACV,IAAMJ,EAAWj0C,KAAKqyC,KAClBxwC,IAASoyC,IAEbj0C,KAAKi0C,SAAWA,EAChBj0C,KAAKqyC,KAAOxwC,EACZA,EAAKyyC,OACDL,IACAA,EAAS5lC,UAAY4lC,EAASD,iBAC9BnyC,EAAKmyC,iBACLnyC,EAAK0yC,WAAaN,EACdI,IACAxyC,EAAK0yC,WAAWC,iBAAkB,GAElCP,EAASQ,WACT5yC,EAAK4yC,SAAWR,EAASQ,SACzB5yC,EAAK4yC,SAAS7+B,aACVq+B,EAASS,iBAAmBT,EAASr+B,cAEzC/T,EAAK9G,MAAQ8G,EAAK9G,KAAK45C,aACvB9yC,EAAK+yC,eAAgB,IAGP,IADI/yC,EAAKiD,QAAnB+vC,WAEJZ,EAASa,QAepB,G,mCACD,WACI90C,KAAKoxC,QAAQjpC,SAAQ,SAACtG,GAClB,IAAQiD,EAA0BjD,EAA1BiD,QAASiwC,EAAiBlzC,EAAjBkzC,aACjBjwC,EAAQ6/B,gBAAkB7/B,EAAQ6/B,iBAC9BoQ,GACAA,EAAajwC,QAAQ6/B,gBACjBoQ,EAAajwC,QAAQ6/B,gBAEhC,GACJ,G,4BACD,WACI3kC,KAAKoxC,QAAQjpC,SAAQ,SAACtG,GAClBA,EAAKwM,UAAYxM,EAAKmyC,gBAAe,EACxC,GACJ,G,gCAKD,WACQh0C,KAAKqyC,MAAQryC,KAAKqyC,KAAKoC,WACvBz0C,KAAKqyC,KAAKoC,cAAWz2C,EAE5B,K,EA1GC+1C,GCFN,SAASiB,GAAyB90B,EAAO4vB,EAAWmF,GAChD,IAAIzvC,EAAY,GAOV0vC,EAAah1B,EAAM/P,EAAEg3B,UAAY2I,EAAU3/B,EAC3CglC,EAAaj1B,EAAM9P,EAAE+2B,UAAY2I,EAAU1/B,EAWjD,IAVI8kC,GAAcC,KACd3vC,EAAY,eAAH,OAAkB0vC,EAAlB,eAAmCC,EAAnC,YAMO,IAAhBrF,EAAU3/B,GAA2B,IAAhB2/B,EAAU1/B,IAC/B5K,GAAa,SAAJ,OAAa,EAAIsqC,EAAU3/B,EAA3B,aAAiC,EAAI2/B,EAAU1/B,EAA/C,OAET6kC,EAAiB,CACjB,IAAQ7gC,EAA6B6gC,EAA7B7gC,OAAQC,EAAqB4gC,EAArB5gC,QAASC,EAAY2gC,EAAZ3gC,QACrBF,IACA5O,GAAa,UAAJ,OAAc4O,EAAd,UACTC,IACA7O,GAAa,WAAJ,OAAe6O,EAAf,UACTC,IACA9O,GAAa,WAAJ,OAAe8O,EAAf,SAChB,CAKD,IAAM8gC,EAAgBl1B,EAAM/P,EAAEiB,MAAQ0+B,EAAU3/B,EAC1CklC,EAAgBn1B,EAAM9P,EAAEgB,MAAQ0+B,EAAU1/B,EAIhD,OAHsB,IAAlBglC,GAAyC,IAAlBC,IACvB7vC,GAAa,SAAJ,OAAa4vC,EAAb,aAA+BC,EAA/B,MAEN7vC,GAAa,MACvB,CCvCD,IAAM8vC,GAAiB,SAACr2B,EAAGC,GAAJ,OAAUD,EAAEs2B,MAAQr2B,EAAEq2B,KAAtB,ECGjBC,GAAAA,WACF,cAAc,gBACVx1C,KAAKjB,SAAW,GAChBiB,KAAKy1C,SAAU,CAClB,C,mCACD,SAAIxyB,GACAsa,GAAcv9B,KAAKjB,SAAUkkB,GAC7BjjB,KAAKy1C,SAAU,CAClB,G,oBACD,SAAOxyB,GACHwa,GAAWz9B,KAAKjB,SAAUkkB,GAC1BjjB,KAAKy1C,SAAU,CAClB,G,qBACD,SAAQhyC,GACJzD,KAAKy1C,SAAWz1C,KAAKjB,SAAS+iC,KAAKwT,IACnCt1C,KAAKy1C,SAAU,EACfz1C,KAAKjB,SAASoJ,QAAQ1E,EACzB,K,EAjBC+xC,GCEN,SAASnwC,GAAM5B,EAAU9B,GACrB,IAAMmI,EAAQgsB,YAAYD,MACpB6f,EAAe,SAAfA,EAAgB,GAAkB,IAC9Brd,EAD8B,EAAhBlY,UACQrW,EACxBuuB,GAAW12B,IACXugB,GAAYwzB,GACZjyC,EAAS40B,EAAU12B,GAE1B,EAED,OADAogB,GAAAA,KAAW2zB,GAAc,GAClB,kBAAMxzB,GAAYwzB,EAAlB,CACV,CChBD,SAASC,GAAOC,GACRhoC,OAAOioC,aACPjoC,OAAOioC,YAAYF,OAAOC,EAEjC,CCJD,SAASE,GAAa56B,GAClB,OAAOA,aAAmB66B,YAAkC,QAApB76B,EAAQ8C,OACnD,CCwBD,IAAMg4B,GAAgB,CAAC,GAAI,IAAK,IAAK,KAMjCtnC,GAAK,EAKHunC,GAAsB,CACxBplC,KAAM,kBACNqlC,WAAY,EACZC,qBAAsB,EACtBC,uBAAwB,GAE5B,SAASC,GAAT,GAA0H,IAA1FC,EAA0F,EAA1FA,qBAAsBC,EAAoE,EAApEA,cAAeC,EAAqD,EAArDA,cAAeC,EAAsC,EAAtCA,kBAAmBC,EAAmB,EAAnBA,eACnG,kBACI,aAAuH,WAA3G9gC,EAA2G,uDAA5F,CAAC,EAAG3I,EAAwF,uDAA7D,OAAlBspC,QAA4C,IAAlBA,OAA2B,EAASA,KAAiB,gBAInHv2C,KAAK0O,GAAKA,KAIV1O,KAAK22C,YAAc,EAOnB32C,KAAKjB,SAAW,IAAI8Q,IAKpB7P,KAAK8E,QAAU,CAAC,EAMhB9E,KAAK42C,iBAAkB,EACvB52C,KAAK+qC,oBAAqB,EAO1B/qC,KAAK40C,eAAgB,EAKrB50C,KAAK62C,mBAAoB,EAKzB72C,KAAK82C,yBAA0B,EAK/B92C,KAAK+2C,kBAAmB,EAIxB/2C,KAAKg3C,uBAAwB,EAC7Bh3C,KAAKi3C,uBAAwB,EAK7Bj3C,KAAK20C,YAAa,EAIlB30C,KAAKk3C,OAAQ,EAKbl3C,KAAKm3C,YAAa,EAIlBn3C,KAAKo3C,sBAAuB,EAS5Bp3C,KAAK8vC,UAAY,CAAE3/B,EAAG,EAAGC,EAAG,GAI5BpQ,KAAKq3C,cAAgB,IAAIpoC,IACzBjP,KAAKs3C,iBAAkB,EAEvBt3C,KAAKu3C,iBAAkB,EACvBv3C,KAAKw3C,kBAAoB,WACjB,EAAK7C,aACL,EAAKA,YAAa,EAClB,EAAK8C,oBAEZ,EAMDz3C,KAAK03C,iBAAmB,WAKpBzB,GAAoBC,WAChBD,GAAoBE,qBAChBF,GAAoBG,uBAChB,EACZ,EAAKuB,MAAMxvC,QAAQyvC,IACnB,EAAKD,MAAMxvC,QAAQ0vC,IACnB,EAAKF,MAAMxvC,QAAQ2vC,IACnB,EAAKH,MAAMxvC,QAAQ4vC,IACnBpC,GAAOM,GACV,EACDj2C,KAAKg4C,cAAe,EACpBh4C,KAAKi4C,WAAY,EACjBj4C,KAAKk4C,kBAAoB,EAKzBl4C,KAAKm4C,YAAc,IAAIlpC,IACvBjP,KAAK4V,aAAeA,EACpB5V,KAAKjF,KAAOkS,EAASA,EAAOlS,MAAQkS,EAASjN,KAC7CA,KAAKo4C,KAAOnrC,EAAS,GAAH,gBAAOA,EAAOmrC,MAAd,CAAoBnrC,IAAU,GAChDjN,KAAKiN,OAASA,EACdjN,KAAKu1C,MAAQtoC,EAASA,EAAOsoC,MAAQ,EAAI,EACzC,IAAK,IAAIxtC,EAAI,EAAGA,EAAI/H,KAAKo4C,KAAKnwC,OAAQF,IAClC/H,KAAKo4C,KAAKrwC,GAAGqvC,sBAAuB,EAEpCp3C,KAAKjF,OAASiF,OACdA,KAAK23C,MAAQ,IAAInC,GACxB,CAtIL,gDAuII,SAAiB96C,EAAMoJ,GAInB,OAHK9D,KAAKq3C,cAAcjoC,IAAI1U,IACxBsF,KAAKq3C,cAAchoC,IAAI3U,EAAM,IAAIgjC,IAE9B19B,KAAKq3C,cAAcnoC,IAAIxU,GAAM0mB,IAAItd,EAC3C,GA5IL,6BA6II,SAAgBpJ,GAAe,IAC3B,IAAM29C,EAAsBr4C,KAAKq3C,cAAcnoC,IAAIxU,GADxB,mBAAN49C,EAAM,iCAANA,EAAM,kBAE3BD,GAAuBA,EAAoB9Z,OAApB,MAAA8Z,EAA8BC,EACxD,GAhJL,0BAiJI,SAAa59C,GACT,OAAOsF,KAAKq3C,cAAcjoC,IAAI1U,EACjC,GAnJL,mBAuJI,SAAM2T,GAAqD,WAA3CumC,EAA2C,uDAA3B50C,KAAKjF,KAAKu8C,gBACtC,IAAIt3C,KAAKqO,SAAT,CAEArO,KAAKk3C,MAAQpB,GAAaznC,GAC1BrO,KAAKqO,SAAWA,EAChB,MAA4CrO,KAAK8E,QAAzC+H,EAAR,EAAQA,SAAUrB,EAAlB,EAAkBA,OAAQwB,EAA1B,EAA0BA,cAS1B,GARIA,IAAkBA,EAAcjL,SAChCiL,EAAcsB,MAAMD,GAExBrO,KAAKjF,KAAK48C,MAAMv2B,IAAIphB,MACpBA,KAAKiN,QAAUjN,KAAKiN,OAAOlO,SAASqiB,IAAIphB,MACpC40C,IAAkBppC,GAAUqB,KAC5B7M,KAAK40C,eAAgB,GAErB0B,EAAsB,CACtB,IAAIiC,EACEC,EAAsB,kBAAO,EAAKz9C,KAAKk8C,uBAAwB,CAAzC,EAC5BX,EAAqBjoC,GAAU,WAC3B,EAAKtT,KAAKk8C,uBAAwB,EAClCsB,GAAeA,IACfA,EAAclzC,GAAMmzC,EAAqB,KACrClJ,GAAsBC,yBACtBD,GAAsBC,wBAAyB,EAC/C,EAAKoI,MAAMxvC,QAAQswC,IAE1B,GACJ,CACG5rC,GACA7M,KAAKjF,KAAK29C,mBAAmB7rC,EAAU7M,OAGd,IAAzBA,KAAK8E,QAAQoF,SACb8C,IACCH,GAAYrB,IACbxL,KAAKqe,iBAAiB,aAAa,YAA+E,IAA5E6B,EAA4E,EAA5EA,MAAOkuB,EAAqE,EAArEA,iBAAkBuK,EAAmD,EAAnDA,yBAAkCC,EAAiB,EAAzBptC,OACrF,GAAI,EAAKqtC,yBAGL,OAFA,EAAK/wC,YAAS9J,OACd,EAAK86C,oBAAiB96C,GAI1B,IAAM+6C,EAAmB,EAAKj0C,QAAQhJ,YAClCkR,EAAc8tB,wBACdke,GACJ,EAA+DhsC,EAAcuV,WAArE02B,EAAR,EAAQA,uBAAwBC,EAAhC,EAAgCA,0BAK1BC,GAAiB,EAAKC,eACvBvF,GAAU,EAAKuF,aAAcR,IAC9BD,EAMEU,GAAgCjL,GAAoBuK,EAC1D,GAAI,EAAK7zC,QAAQw0C,YACZ,EAAK/E,YAAc,EAAKA,WAAWlmC,UACpCgrC,GACCjL,IACI+K,IAAkB,EAAK7H,kBAAoB,CAC5C,EAAKiD,aACL,EAAKQ,aAAe,EAAKR,WACzB,EAAKQ,aAAaA,kBAAe/2C,GAErC,EAAKu7C,mBAAmBr5B,EAAOm5B,GAC/B,IAAMG,GAAmB,kBAClB1c,GAAmBic,EAAkB,WADtB,IAElBhiB,OAAQkiB,EACRhiB,WAAYiiB,KAEZlsC,EAAck0B,oBACd,EAAKp8B,QAAQw0C,cACbE,EAAiBn0C,MAAQ,EACzBm0C,EAAiB3oC,MAAO,GAE5B,EAAKuuB,eAAeoa,EACvB,MAOQpL,GACDqK,GAAgB,GAEhB,EAAKlH,UAAY,EAAKzsC,QAAQ6/B,gBAC9B,EAAK7/B,QAAQ6/B,iBAGrB,EAAKyU,aAAeR,CACvB,GA5FK,CA8Fb,GAvPL,qBAwPI,WACI54C,KAAK8E,QAAQ+H,UAAY7M,KAAK+wC,aAC9B/wC,KAAKjF,KAAK48C,MAAMxW,OAAOnhC,MACvB,IAAMkxC,EAAQlxC,KAAKmxC,WACnBD,GAASA,EAAM/P,OAAOnhC,MACtBA,KAAKiN,QAAUjN,KAAKiN,OAAOlO,SAASwiB,OAAOvhB,MAC3CA,KAAKqO,cAAWrQ,EAChBkkB,GAAYliB,KAAK03C,iBACpB,GAhQL,yBAkQI,WACI13C,KAAKg3C,uBAAwB,CAChC,GApQL,2BAqQI,WACIh3C,KAAKg3C,uBAAwB,CAChC,GAvQL,6BAwQI,WACI,OAAOh3C,KAAKg3C,uBAAyBh3C,KAAKi3C,qBAC7C,GA1QL,oCA2QI,WACI,OAAQj3C,KAAK+qC,oBACR/qC,KAAKiN,QAAUjN,KAAKiN,OAAO4rC,2BAC5B,CACP,GA/QL,yBAiRI,WACQ74C,KAAKy5C,oBAETz5C,KAAK20C,YAAa,EAClB30C,KAAK23C,OAAS33C,KAAK23C,MAAMxvC,QAAQuxC,IACjC15C,KAAK22C,cACR,GAvRL,kCAwRI,WACI,IAAQ3pC,EAAkBhN,KAAK8E,QAAvBkI,cACR,OAAOA,GAAiBA,EAAcuV,WAAW1M,iBACpD,GA3RL,wBA4RI,WAAyC,IAA9B8jC,IAA8B,yDAErC,GADA35C,KAAKjF,KAAKu8C,iBAAkB,EACxBt3C,KAAKjF,KAAK0+C,kBACVz5C,KAAK8E,QAAQ6/B,gBAAkB3kC,KAAK8E,QAAQ6/B,sBAIhD,IADC3kC,KAAKjF,KAAK45C,YAAc30C,KAAKjF,KAAK6+C,eAC/B55C,KAAK40C,cAAT,CAEA50C,KAAK40C,eAAgB,EACrB,IAAK,IAAI7sC,EAAI,EAAGA,EAAI/H,KAAKo4C,KAAKnwC,OAAQF,IAAK,CACvC,IAAMlG,EAAO7B,KAAKo4C,KAAKrwC,GACvBlG,EAAKu1C,sBAAuB,EAC5Bv1C,EAAK+rC,aAAa,YACd/rC,EAAKiD,QAAQw0C,YACbz3C,EAAKkvC,YAAW,EAEvB,CACD,MAA6B/wC,KAAK8E,QAA1B+H,EAAR,EAAQA,SAAUrB,EAAlB,EAAkBA,OAClB,QAAiBxN,IAAb6O,GAA2BrB,EAA/B,CAEA,IAAMqK,EAAoB7V,KAAK65C,uBAC/B75C,KAAK85C,2BAA6BjkC,EAC5BA,EAAkB7V,KAAK4V,aAAc,SACrC5X,EACNgC,KAAK+5C,iBACLJ,GAAyB35C,KAAKg6C,gBAAgB,aANpC,CAZA,CAmBb,GAvTL,oBAwTI,WAMI,GALAh6C,KAAKu3C,iBAAkB,EACEv3C,KAAKy5C,kBAQ1B,OAHAz5C,KAAKi6C,gBACLj6C,KAAKy3C,yBACLz3C,KAAK23C,MAAMxvC,QAAQ+xC,IAGlBl6C,KAAK20C,YACN30C,KAAK23C,MAAMxvC,QAAQgyC,IAEvBn6C,KAAK20C,YAAa,EAIlB30C,KAAK23C,MAAMxvC,QAAQiyC,IAKnBp6C,KAAK23C,MAAMxvC,QAAQ0lC,IAKnB7tC,KAAK23C,MAAMxvC,QAAQkyC,IACnBr6C,KAAKy3C,oBAML,IAAM5hB,EAAMC,YAAYD,MACxB5V,GAAUC,MAAQpP,EAAM,EAAG,IAAO,GAAI+kB,EAAM5V,GAAUE,WACtDF,GAAUE,UAAY0V,EACtB5V,GAAUG,cAAe,EACzBI,GAAM9S,OAAO8T,QAAQvB,IACrBO,GAAM85B,UAAU94B,QAAQvB,IACxBO,GAAMpc,OAAOod,QAAQvB,IACrBA,GAAUG,cAAe,CAC5B,GApWL,uBAqWI,WAAY,WACHpgB,KAAKu3C,kBACNv3C,KAAKu3C,iBAAkB,EACvBlG,gBAAe,kBAAM,EAAK3jC,QAAX,IAEtB,GA1WL,+BA2WI,WACI1N,KAAK23C,MAAMxvC,QAAQoyC,IACnBv6C,KAAKm4C,YAAYhwC,QAAQqyC,GAC5B,GA9WL,sCA+WI,WACIz4B,GAAAA,UAAgB/hB,KAAK03C,kBAAkB,GAAO,EACjD,GAjXL,uCAkXI,WAA4B,WAMxB31B,GAAAA,YAAiB,WACT,EAAK6yB,cACL,EAAK75C,KAAK41C,YAGV,EAAK51C,KAAKy8C,mBAEjB,GACJ,GAhYL,4BAoYI,YACQx3C,KAAKy0C,UAAaz0C,KAAKqO,WAE3BrO,KAAKy0C,SAAWz0C,KAAKy6C,UACxB,GAxYL,0BAyYI,WACI,GAAKz6C,KAAKqO,WAGVrO,KAAK4tC,eACC5tC,KAAK8E,QAAQ41C,qBAAuB16C,KAAKuxC,UAC1CvxC,KAAK40C,eADV,CAWA,GAAI50C,KAAKu0C,aAAev0C,KAAKu0C,WAAWlmC,SACpC,IAAK,IAAItG,EAAI,EAAGA,EAAI/H,KAAKo4C,KAAKnwC,OAAQF,IAAK,CAC1B/H,KAAKo4C,KAAKrwC,GAClB6lC,cACR,CAEL,IAAM+M,EAAa36C,KAAKwL,OACxBxL,KAAKwL,OAASxL,KAAKy6C,SAAQ,GAC3Bz6C,KAAK46C,gBnBlcQ,CACrBzqC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,ImBoc7BhR,KAAK40C,eAAgB,EACrB50C,KAAK+vC,qBAAkB/xC,EACvBgC,KAAKg6C,gBAAgB,UAAWh6C,KAAKwL,OAAO0/B,WAC5C,IAAQl+B,EAAkBhN,KAAK8E,QAAvBkI,cACRA,GACIA,EAAcuxB,OAAO,gBAAiBv+B,KAAKwL,OAAO0/B,UAAWyP,EAAaA,EAAWzP,eAAYltC,EAtBpG,CAuBJ,GAxaL,0BAyaI,WAAgC,IAAnB68C,EAAmB,uDAAX,UACbC,EAAmBzwC,QAAQrK,KAAK8E,QAAQi2C,cAAgB/6C,KAAKqO,UAC7DrO,KAAK2sC,QACL3sC,KAAK2sC,OAAOgK,cAAgB32C,KAAKjF,KAAK47C,aACtC32C,KAAK2sC,OAAOkO,QAAUA,IACtBC,GAAmB,GAEnBA,IACA96C,KAAK2sC,OAAS,CACVgK,YAAa32C,KAAKjF,KAAK47C,YACvBkE,MAAAA,EACAG,OAAQvE,EAAkBz2C,KAAKqO,UAC/ByK,OAAQ09B,EAAcx2C,KAAKqO,WAGtC,GAxbL,4BAybI,WACI,GAAKqoC,EAAL,CAEA,IAAMuE,EAAmBj7C,KAAK40C,eAAiB50C,KAAKo3C,qBAC9C8D,EAAgBl7C,KAAK+vC,kBAAoB6D,GAAY5zC,KAAK+vC,iBAC1Dl6B,EAAoB7V,KAAK65C,uBACzBsB,EAAyBtlC,EACzBA,EAAkB7V,KAAK4V,aAAc,SACrC5X,EACAo9C,EAA8BD,IAA2Bn7C,KAAK85C,2BAChEmB,IACCC,GACGnlC,GAAa/V,KAAK4V,eAClBwlC,KACJ1E,EAAe12C,KAAKqO,SAAU8sC,GAC9Bn7C,KAAKo3C,sBAAuB,EAC5Bp3C,KAAKg0C,iBAdC,CAgBb,GA3cL,qBA4cI,WAAgC,IAAxBqH,IAAwB,yDACtBC,EAAUt7C,KAAK4sC,iBACjB1B,EAAYlrC,KAAKu7C,oBAAoBD,GAUzC,OAJID,IACAnQ,EAAYlrC,KAAKq7C,gBAAgBnQ,IAErCsQ,GAAStQ,GACF,CACHyL,YAAa32C,KAAKjF,KAAK47C,YACvB8E,YAAaH,EACbpQ,UAAAA,EACAt1B,aAAc,CAAC,EACf1N,OAAQlI,KAAK0O,GAEpB,GA/dL,4BAgeI,WACI,IAAQ1B,EAAkBhN,KAAK8E,QAAvBkI,cACR,IAAKA,EACD,MnBpgBS,CACrBmD,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,ImBsgB7B,IAAMg4B,EAAMh8B,EAAc68B,qBAElB8C,EAAW3sC,KAAKjF,KAAhB4xC,OAKR,OAJIA,IACAvD,GAAcJ,EAAI74B,EAAGw8B,EAAO7zB,OAAO3I,GACnCi5B,GAAcJ,EAAI54B,EAAGu8B,EAAO7zB,OAAO1I,IAEhC44B,CACV,GA5eL,iCA6eI,SAAoBA,GAChB,IAAM0S,EnB/gBO,CACrBvrC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,ImBihB7BmiC,GAAYuI,EAAkB1S,GAK9B,IAAK,IAAIjhC,EAAI,EAAGA,EAAI/H,KAAKo4C,KAAKnwC,OAAQF,IAAK,CACvC,IAAMlG,EAAO7B,KAAKo4C,KAAKrwC,GACf4kC,EAAoB9qC,EAApB8qC,OAAQ7nC,EAAYjD,EAAZiD,QAChB,GAAIjD,IAAS7B,KAAKjF,MAAQ4xC,GAAU7nC,EAAQi2C,aAAc,CAKtD,GAAIpO,EAAOqO,OAAQ,CACf7H,GAAYuI,EAAkB1S,GAC9B,IAAgB2S,EAAe37C,KAAKjF,KAA5B4xC,OAKJgP,IACAvS,GAAcsS,EAAiBvrC,GAAIwrC,EAAW7iC,OAAO3I,GACrDi5B,GAAcsS,EAAiBtrC,GAAIurC,EAAW7iC,OAAO1I,GAE5D,CACDg5B,GAAcsS,EAAiBvrC,EAAGw8B,EAAO7zB,OAAO3I,GAChDi5B,GAAcsS,EAAiBtrC,EAAGu8B,EAAO7zB,OAAO1I,EACnD,CACJ,CACD,OAAOsrC,CACV,GA7gBL,4BA8gBI,SAAe1S,GAA4B,IAAvB4S,EAAuB,wDACjCC,EnBhjBO,CACrB1rC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,ImBkjB7BmiC,GAAY0I,EAAgB7S,GAC5B,IAAK,IAAIjhC,EAAI,EAAGA,EAAI/H,KAAKo4C,KAAKnwC,OAAQF,IAAK,CACvC,IAAMlG,EAAO7B,KAAKo4C,KAAKrwC,IAClB6zC,GACD/5C,EAAKiD,QAAQi2C,cACbl5C,EAAK8qC,QACL9qC,IAASA,EAAK9G,MACd6uC,GAAaiS,EAAgB,CACzB1rC,GAAItO,EAAK8qC,OAAO7zB,OAAO3I,EACvBC,GAAIvO,EAAK8qC,OAAO7zB,OAAO1I,IAG1B2F,GAAalU,EAAK+T,eAEvBg0B,GAAaiS,EAAgBh6C,EAAK+T,aACrC,CAID,OAHIG,GAAa/V,KAAK4V,eAClBg0B,GAAaiS,EAAgB77C,KAAK4V,cAE/BimC,CACV,GApiBL,6BAqiBI,SAAgB7S,GACZ,IAAM8S,EnBvkBO,CACrB3rC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,ImBykB7BmiC,GAAY2I,EAAqB9S,GACjC,IAAK,IAAIjhC,EAAI,EAAGA,EAAI/H,KAAKo4C,KAAKnwC,OAAQF,IAAK,CACvC,IAAMlG,EAAO7B,KAAKo4C,KAAKrwC,GACvB,GAAKlG,EAAKwM,UAEL0H,GAAalU,EAAK+T,cAAvB,CAEA4yB,GAAS3mC,EAAK+T,eAAiB/T,EAAKk4C,iBACpC,IAAMrG,EnBhlBG,CACrBvjC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,ImBmlBzBmiC,GAAYO,EADI7xC,EAAK+qC,kBAErB6G,GAAoBqI,EAAqBj6C,EAAK+T,aAAc/T,EAAK4yC,SAAW5yC,EAAK4yC,SAASvJ,eAAYltC,EAAW01C,EALrG,CAMf,CAID,OAHI39B,GAAa/V,KAAK4V,eAClB69B,GAAoBqI,EAAqB97C,KAAK4V,cAE3CkmC,CACV,GAxjBL,4BAyjBI,SAAe57B,GACXlgB,KAAK+7C,YAAc77B,EACnBlgB,KAAKjF,KAAKihD,2BACVh8C,KAAK62C,mBAAoB,CAC5B,GA7jBL,wBA8jBI,SAAW/xC,GACP9E,KAAK8E,SAAL,0BACO9E,KAAK8E,SACLA,GAFP,IAGI+vC,eAAiC72C,IAAtB8G,EAAQ+vC,WAA0B/vC,EAAQ+vC,WAE5D,GApkBL,+BAqkBI,WACI70C,KAAK2sC,YAAS3uC,EACdgC,KAAKwL,YAASxN,EACdgC,KAAKy0C,cAAWz2C,EAChBgC,KAAK85C,gCAA6B97C,EAClCgC,KAAK+7C,iBAAc/9C,EACnBgC,KAAK8H,YAAS9J,EACdgC,KAAK40C,eAAgB,CACxB,GA7kBL,gDA8kBI,WACS50C,KAAKi8C,gBAQNj8C,KAAKi8C,eAAeC,2BACpBj8B,GAAUE,WACVngB,KAAKi8C,eAAepE,oBAAmB,EAE9C,GA3lBL,gCA4lBI,WAA+C,IACvC5/B,EADWkkC,EAA4B,wDAOrC9J,EAAOryC,KAAKo8C,UAClBp8C,KAAK62C,oBAAsB72C,KAAK62C,kBAAoBxE,EAAKwE,mBACzD72C,KAAK+2C,mBAAqB/2C,KAAK+2C,iBAAmB1E,EAAK0E,kBACvD/2C,KAAK82C,0BAA4B92C,KAAK82C,wBAA0BzE,EAAKyE,yBACrE,IAAMuF,EAAWhyC,QAAQrK,KAAK+0C,eAAiB/0C,OAASqyC,EAKlDiK,IAAYH,GACbE,GAAYr8C,KAAK82C,yBAClB92C,KAAK62C,oBACmB,QAAtB5+B,EAAKjY,KAAKiN,cAA2B,IAAPgL,OAAgB,EAASA,EAAG4+B,oBAC5D72C,KAAKu8C,gCACT,IAAID,EAAJ,CAEA,MAA6Bt8C,KAAK8E,QAA1B0G,EAAR,EAAQA,OAAQqB,EAAhB,EAAgBA,SAIhB,GAAK7M,KAAKwL,SAAYA,GAAUqB,GAAhC,CASA,GAPA7M,KAAKk8C,yBAA2Bj8B,GAAUE,WAOrCngB,KAAK+7C,cAAgB/7C,KAAK84C,eAAgB,CAE3C,IAAMmD,EAAiBj8C,KAAKw8C,6BACxBP,GACAA,EAAezwC,QACY,IAA3BxL,KAAKk4C,mBACLl4C,KAAKi8C,eAAiBA,EACtBj8C,KAAKy8C,qCACLz8C,KAAK84C,enBzqBA,CACrB3oC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,ImB2qBrBhR,KAAK08C,qBnB1qBA,CACrBvsC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,ImB4qBrBy2B,GAAqBznC,KAAK08C,qBAAsB18C,KAAKwL,OAAO0/B,UAAW+Q,EAAezwC,OAAO0/B,WAC7FiI,GAAYnzC,KAAK84C,eAAgB94C,KAAK08C,uBAGtC18C,KAAKi8C,eAAiBj8C,KAAK84C,oBAAiB96C,CAEnD,CAKD,GAAKgC,KAAK84C,gBAAmB94C,KAAK+7C,YAAlC,CAyCA,GApCK/7C,KAAK8H,SACN9H,KAAK8H,OnB5rBI,CACrBqI,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,ImB8rBzBhR,KAAK28C,qBnB7rBI,CACrBxsC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,KmBmsBzBhR,KAAK84C,gBACL94C,KAAK08C,sBACL18C,KAAKi8C,gBACLj8C,KAAKi8C,eAAen0C,QACpB9H,KAAKy8C,qCACLlV,GAAgBvnC,KAAK8H,OAAQ9H,KAAK84C,eAAgB94C,KAAKi8C,eAAen0C,SAKjE9H,KAAK+7C,aACN1xC,QAAQrK,KAAK+0C,cAEb/0C,KAAK8H,OAAS9H,KAAK48C,eAAe58C,KAAKwL,OAAO0/B,WAG9CiI,GAAYnzC,KAAK8H,OAAQ9H,KAAKwL,OAAO0/B,WAEzCnC,GAAc/oC,KAAK8H,OAAQ9H,KAAK+7C,cAMhC5I,GAAYnzC,KAAK8H,OAAQ9H,KAAKwL,OAAO0/B,WAKrClrC,KAAKu8C,+BAAgC,CACrCv8C,KAAKu8C,gCAAiC,EACtC,IAAMN,EAAiBj8C,KAAKw8C,6BACxBP,GACA5xC,QAAQ4xC,EAAelH,gBACnB1qC,QAAQrK,KAAK+0C,gBAChBkH,EAAen3C,QAAQi2C,cACxBkB,EAAen0C,QACY,IAA3B9H,KAAKk4C,mBACLl4C,KAAKi8C,eAAiBA,EACtBj8C,KAAKy8C,qCACLz8C,KAAK84C,enB1uBA,CACrB3oC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,ImB4uBrBhR,KAAK08C,qBnB3uBA,CACrBvsC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,ImB6uBrBy2B,GAAqBznC,KAAK08C,qBAAsB18C,KAAK8H,OAAQm0C,EAAen0C,QAC5EqrC,GAAYnzC,KAAK84C,eAAgB94C,KAAK08C,uBAGtC18C,KAAKi8C,eAAiBj8C,KAAK84C,oBAAiB96C,CAEnD,CAIDi4C,GAAoBE,sBA/DV,CA9BA,CANA,CAoGb,GAttBL,wCAutBI,WACI,GAAKn2C,KAAKiN,SACNu7B,GAASxoC,KAAKiN,OAAO2I,gBACrB6yB,GAAezoC,KAAKiN,OAAO2I,cAG/B,OAAI5V,KAAKiN,OAAO4vC,eACL78C,KAAKiN,OAGLjN,KAAKiN,OAAOuvC,4BAE1B,GAnuBL,0BAouBI,WACI,OAAOnyC,SAASrK,KAAK84C,gBACjB94C,KAAK+7C,aACL/7C,KAAK8E,QAAQw0C,aACbt5C,KAAKwL,OACZ,GAzuBL,4BA0uBI,WACI,IAAIyM,EACEo6B,EAAOryC,KAAKo8C,UACZC,EAAWhyC,QAAQrK,KAAK+0C,eAAiB/0C,OAASqyC,EACpDiK,GAAU,EAuBd,IAlBIt8C,KAAK62C,oBAA6C,QAAtB5+B,EAAKjY,KAAKiN,cAA2B,IAAPgL,OAAgB,EAASA,EAAG4+B,sBACtFyF,GAAU,GAMVD,IACCr8C,KAAK82C,yBAA2B92C,KAAK+2C,oBACtCuF,GAAU,GAMVt8C,KAAKk8C,2BAA6Bj8B,GAAUE,YAC5Cm8B,GAAU,IAEVA,EAAJ,CAEA,MAA6Bt8C,KAAK8E,QAA1B0G,EAAR,EAAQA,OAAQqB,EAAhB,EAAgBA,SAWhB,GANA7M,KAAK42C,gBAAkBvsC,QAASrK,KAAKiN,QAAUjN,KAAKiN,OAAO2pC,iBACvD52C,KAAKsxC,kBACLtxC,KAAK88C,kBACJ98C,KAAK42C,kBACN52C,KAAK+7C,YAAc/7C,KAAK84C,oBAAiB96C,GAExCgC,KAAKwL,SAAYA,GAAUqB,GAAhC,CAMAsmC,GAAYnzC,KAAK46C,gBAAiB56C,KAAKwL,OAAO0/B,WAI9C,IAAM6R,EAAiB/8C,KAAK8vC,UAAU3/B,EAChC6sC,EAAiBh9C,KAAK8vC,UAAU1/B,GtBjyBlD,SAAyB44B,EAAK8G,EAAWmN,GAAsC,IAA5BC,EAA4B,wDACrEC,EAAaF,EAASh1C,OAC5B,GAAKk1C,EAAL,CAIA,IAAIt7C,EACAqe,EAFJ4vB,EAAU3/B,EAAI2/B,EAAU1/B,EAAI,EAG5B,IAAK,IAAIrI,EAAI,EAAGA,EAAIo1C,EAAYp1C,IAAK,CAEjCmY,GADAre,EAAOo7C,EAASl1C,IACHgoC,gBAKb,IAAM1hC,EAAWxM,EAAKwM,SAClBA,GACAA,EAASnP,OACkB,aAA3BmP,EAASnP,MAAMX,UAGf2+C,GACAr7C,EAAKiD,QAAQi2C,cACbl5C,EAAK8qC,QACL9qC,IAASA,EAAK9G,MACd6uC,GAAaZ,EAAK,CACd74B,GAAItO,EAAK8qC,OAAO7zB,OAAO3I,EACvBC,GAAIvO,EAAK8qC,OAAO7zB,OAAO1I,IAG3B8P,IAEA4vB,EAAU3/B,GAAK+P,EAAM/P,EAAEiB,MACvB0+B,EAAU1/B,GAAK8P,EAAM9P,EAAEgB,MAEvB23B,GAAcC,EAAK9oB,IAEnBg9B,GAAsBnnC,GAAalU,EAAK+T,eACxCg0B,GAAaZ,EAAKnnC,EAAK+T,cAE9B,CAKDk6B,EAAU3/B,EAAI84B,GAAc6G,EAAU3/B,GACtC2/B,EAAU1/B,EAAI64B,GAAc6G,EAAU1/B,EA3C5B,CA4Cb,CsBuvBWgtC,CAAgBp9C,KAAK46C,gBAAiB56C,KAAK8vC,UAAW9vC,KAAKo4C,KAAMiE,IAK7DhK,EAAK7mC,QACJ6mC,EAAKvqC,QACgB,IAArB9H,KAAK8vC,UAAU3/B,GAAgC,IAArBnQ,KAAK8vC,UAAU1/B,IAC1CiiC,EAAKvqC,OAASuqC,EAAK7mC,OAAO0/B,WAE9B,IAAQpjC,EAAWuqC,EAAXvqC,OACR,GAAKA,EAAL,CAaK9H,KAAK+vC,kBACN/vC,KAAK+vC,gBnBj2BM,CACvB5/B,EAP2B,CAC3Bg3B,UAAW,EACX/1B,MAAO,EACPyH,OAAQ,EACRquB,YAAa,GAIb92B,EAR2B,CAC3B+2B,UAAW,EACX/1B,MAAO,EACPyH,OAAQ,EACRquB,YAAa,ImBo2BDlnC,KAAKq9C,6BnBl2BM,CACvBltC,EAP2B,CAC3Bg3B,UAAW,EACX/1B,MAAO,EACPyH,OAAQ,EACRquB,YAAa,GAIb92B,EAR2B,CAC3B+2B,UAAW,EACX/1B,MAAO,EACPyH,OAAQ,EACRquB,YAAa,KmBs2BL,IAAMoW,EAA0Bt9C,KAAKu9C,oBAUrCnW,GAAapnC,KAAK+vC,gBAAiB/vC,KAAK46C,gBAAiB9yC,EAAQ9H,KAAK4V,cACtE5V,KAAKu9C,oBAAsBvI,GAAyBh1C,KAAK+vC,gBAAiB/vC,KAAK8vC,WAC3E9vC,KAAKu9C,sBAAwBD,GAC7Bt9C,KAAK8vC,UAAU3/B,IAAM4sC,GACrB/8C,KAAK8vC,UAAU1/B,IAAM4sC,IACrBh9C,KAAKg4C,cAAe,EACpBh4C,KAAKg0C,iBACLh0C,KAAKg6C,gBAAgB,mBAAoBlyC,IAK7CmuC,GAAoBG,wBA3BnB,MANOp2C,KAAKu9C,sBACLv9C,KAAK+vC,gBnB11BE,CACvB5/B,EAP2B,CAC3Bg3B,UAAW,EACX/1B,MAAO,EACPyH,OAAQ,EACRquB,YAAa,GAIb92B,EAR2B,CAC3B+2B,UAAW,EACX/1B,MAAO,EACPyH,OAAQ,EACRquB,YAAa,ImB61BGlnC,KAAKu9C,oBAAsB,OAC3Bv9C,KAAKg0C,iBAnCH,CAbA,CA+Eb,GAr1BL,kBAs1BI,WACIh0C,KAAKi4C,WAAY,CAEpB,GAz1BL,kBA01BI,WACIj4C,KAAKi4C,WAAY,CAEpB,GA71BL,4BA81BI,WAAiC,IAAlBuF,IAAkB,yDAE7B,GADAx9C,KAAK8E,QAAQkvC,gBAAkBh0C,KAAK8E,QAAQkvC,iBACxCwJ,EAAW,CACX,IAAMtM,EAAQlxC,KAAKmxC,WACnBD,GAASA,EAAM8C,gBAClB,CACGh0C,KAAK+0C,eAAiB/0C,KAAK+0C,aAAa1mC,WACxCrO,KAAK+0C,kBAAe/2C,EAE3B,GAv2BL,gCAw2BI,SAAmBkiB,GAA6C,WAAtCm5B,EAAsC,wDACtD5E,EAAWz0C,KAAKy0C,SAChBgJ,EAAuBhJ,EACvBA,EAAS7+B,aACT,CAAC,EACD8nC,GAAc,UAAK19C,KAAK4V,cACxBmmC,EnBp5BS,CACvB5rC,EAP2B,CAC3Bg3B,UAAW,EACX/1B,MAAO,EACPyH,OAAQ,EACRquB,YAAa,GAIb92B,EAR2B,CAC3B+2B,UAAW,EACX/1B,MAAO,EACPyH,OAAQ,EACRquB,YAAa,ImBu5BAlnC,KAAKi8C,gBACLj8C,KAAKi8C,eAAen3C,QAAQw0C,aAC7Bt5C,KAAK84C,eAAiB94C,KAAK08C,0BAAuB1+C,GAEtDgC,KAAKu8C,gCAAkClD,EACvC,IAWIsE,EAXEC,EnBr5BO,CACrBztC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,ImBu5BvB6sC,EAAiBpJ,EAAWA,EAASvsC,YAASlK,EAC9C8/C,EAAe99C,KAAKwL,OAASxL,KAAKwL,OAAOtD,YAASlK,EAClD+/C,EAA0BF,IAAmBC,EAC7C5M,EAAQlxC,KAAKmxC,WACboB,GAAgBrB,GAASA,EAAME,QAAQnpC,QAAU,EACjDqqC,EAAyBjoC,QAAQ0zC,IAClCxL,IAC0B,IAA3BvyC,KAAK8E,QAAQ+vC,YACZ70C,KAAKo4C,KAAKjuC,KAAK6zC,KACpBh+C,KAAKk4C,kBAAoB,EAEzBl4C,KAAKi+C,eAAiB,SAAC1oB,GACnB,IAAM5I,EAAW4I,EAAS,IAC1B2oB,GAAanC,EAAY5rC,EAAG+P,EAAM/P,EAAGwc,GACrCuxB,GAAanC,EAAY3rC,EAAG8P,EAAM9P,EAAGuc,GACrC,EAAKwxB,eAAepC,GAChB,EAAKjD,gBACL,EAAK4D,sBACL,EAAKlxC,QACL,EAAKywC,gBACL,EAAKA,eAAezwC,SACpBi8B,GAAqBmW,EAAgB,EAAKpyC,OAAO0/B,UAAW,EAAK+Q,eAAezwC,OAAO0/B,WACvFkT,GAAO,EAAKtF,eAAgB,EAAK4D,qBAAsBkB,EAAgBjxB,GAKnEgxB,GACA9J,GAAU,EAAKiF,eAAgB6E,KAC/B,EAAK9G,mBAAoB,GAExB8G,IACDA,EnBt7BC,CACrBxtC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,KmBw7BrBmiC,GAAYwK,EAAoB,EAAK7E,iBAErCiF,IACA,EAAKrJ,gBAAkBgJ,EACvBvL,GAAUuL,EAAaD,EAAsB,EAAK7nC,aAAc+W,EAAU2lB,EAAwBC,IAEtG,EAAKx3C,KAAKihD,2BACV,EAAKhI,iBACL,EAAKkE,kBAAoBvrB,CAC5B,EACD3sB,KAAKi+C,eAAej+C,KAAK8E,QAAQw0C,WAAa,IAAO,EACxD,GAj6BL,4BAk6BI,SAAex0C,GAAS,WACpB9E,KAAKg6C,gBAAgB,kBACrBh6C,KAAKsxC,kBAAoBtxC,KAAKsxC,iBAAiB1b,OAC3C51B,KAAK+0C,cAAgB/0C,KAAK+0C,aAAazD,kBACvCtxC,KAAK+0C,aAAazD,iBAAiB1b,OAEnC51B,KAAK88C,mBACL56B,GAAYliB,KAAK88C,kBACjB98C,KAAK88C,sBAAmB9+C,GAO5BgC,KAAK88C,iBAAmB/6B,GAAAA,QAAa,WACjCutB,GAAsBC,wBAAyB,EAC/C,EAAK+B,iBC39BrB,SAA4B9sC,EAAOysB,EAAWnsB,GAC1C,IAAMu5C,EAAgBruC,EAAcxL,GAASA,EAAQk7B,GAAYl7B,GAEjE,OADA65C,EAAcv0C,MAAMizB,GAAmB,GAAIshB,EAAeptB,EAAWnsB,IAC9Du5C,EAAcpzC,SACxB,CDu9BuCqzC,CAAmB,EAh8BnC,KAg8BkC,QAAC,UACpCx5C,GADmC,IAEtCoyB,SAAU,SAAC3B,GACP,EAAK0oB,eAAe1oB,GACpBzwB,EAAQoyB,UAAYpyB,EAAQoyB,SAAS3B,EACxC,EACD0B,WAAY,WACRnyB,EAAQmyB,YAAcnyB,EAAQmyB,aAC9B,EAAKsnB,mBACR,KAED,EAAKxJ,eACL,EAAKA,aAAazD,iBAAmB,EAAKA,kBAE9C,EAAKwL,sBAAmB9+C,CAC3B,GACJ,GAn8BL,+BAo8BI,WACQgC,KAAK+0C,eACL/0C,KAAK+0C,aAAazD,sBAAmBtzC,EACrCgC,KAAK+0C,aAAaP,qBAAkBx2C,GAExC,IAAMkzC,EAAQlxC,KAAKmxC,WACnBD,GAASA,EAAMsN,wBACfx+C,KAAK+0C,aACD/0C,KAAKsxC,iBACDtxC,KAAK00C,qBACD12C,EACZgC,KAAKg6C,gBAAgB,oBACxB,GAh9BL,6BAi9BI,WACQh6C,KAAKsxC,mBACLtxC,KAAKi+C,gBAAkBj+C,KAAKi+C,eAh+BpB,KAi+BRj+C,KAAKsxC,iBAAiB1b,QAE1B51B,KAAKu+C,mBACR,GAv9BL,qCAw9BI,WACI,IAAMlM,EAAOryC,KAAKo8C,UACZO,EAAuDtK,EAAvDsK,qBAAsB70C,EAAiCuqC,EAAjCvqC,OAAQ0D,EAAyB6mC,EAAzB7mC,OAAQoK,EAAiBy8B,EAAjBz8B,aAC5C,GAAK+mC,GAAyB70C,GAAW0D,EAAzC,CAOA,GAAIxL,OAASqyC,GACTryC,KAAKwL,QACLA,GACAizC,GAA0Bz+C,KAAK8E,QAAQ45C,cAAe1+C,KAAKwL,OAAO0/B,UAAW1/B,EAAO0/B,WAAY,CAChGpjC,EAAS9H,KAAK8H,QnBvgCL,CACrBqI,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,ImBygCzB,IAAM2tC,EAAU9X,GAAW7mC,KAAKwL,OAAO0/B,UAAU/6B,GACjDrI,EAAOqI,EAAEY,IAAMshC,EAAKvqC,OAAOqI,EAAEY,IAC7BjJ,EAAOqI,EAAEa,IAAMlJ,EAAOqI,EAAEY,IAAM4tC,EAC9B,IAAMC,EAAU/X,GAAW7mC,KAAKwL,OAAO0/B,UAAU96B,GACjDtI,EAAOsI,EAAEW,IAAMshC,EAAKvqC,OAAOsI,EAAEW,IAC7BjJ,EAAOsI,EAAEY,IAAMlJ,EAAOsI,EAAEW,IAAM6tC,CACjC,CACDzL,GAAYwJ,EAAsB70C,GAMlC8hC,GAAa+S,EAAsB/mC,GAOnCwxB,GAAapnC,KAAKq9C,6BAA8Br9C,KAAK46C,gBAAiB+B,EAAsB/mC,EA/BlF,CAgCb,GA5/BL,gCA6/BI,SAAmB/I,EAAUhL,GACpB7B,KAAKm4C,YAAY/oC,IAAIvC,IACtB7M,KAAKm4C,YAAY9oC,IAAIxC,EAAU,IAAIknC,IAEzB/zC,KAAKm4C,YAAYjpC,IAAIrC,GAC7BuU,IAAIvf,GACV,IAAMgB,EAAShB,EAAKiD,QAAQ+5C,uBAC5Bh9C,EAAKmvC,QAAQ,CACTl1C,WAAY+G,EAASA,EAAO/G,gBAAakC,EACzCq2C,sBAAuBxxC,GAAUA,EAAOi8C,4BAClCj8C,EAAOi8C,4BAA4Bj9C,QACnC7D,GAEb,GA1gCL,oBA2gCI,WACI,IAAMkzC,EAAQlxC,KAAKmxC,WACnB,OAAOD,GAAQA,EAAMmB,OAASryC,IACjC,GA9gCL,qBA+gCI,WACI,IAAIiY,EAEJ,OADqBjY,KAAK8E,QAAlB+H,WACsC,QAA1BoL,EAAKjY,KAAKmxC,kBAA+B,IAAPl5B,OAAgB,EAASA,EAAGo6B,OAAgBryC,IACrG,GAnhCL,yBAohCI,WACI,IAAIiY,EAEJ,OADqBjY,KAAK8E,QAAlB+H,SACqC,QAA1BoL,EAAKjY,KAAKmxC,kBAA+B,IAAPl5B,OAAgB,EAASA,EAAGg8B,cAAWj2C,CAC/F,GAxhCL,sBAyhCI,WACI,IAAQ6O,EAAa7M,KAAK8E,QAAlB+H,SACR,GAAIA,EACA,OAAO7M,KAAKjF,KAAKo9C,YAAYjpC,IAAIrC,EACxC,GA7hCL,qBA8hCI,WAAiE,6DAAJ,CAAC,EAApDsqC,EAAuD,EAAvDA,WAAYr7C,EAA2C,EAA3CA,WAAYu4C,EAA+B,EAA/BA,sBACxBnD,EAAQlxC,KAAKmxC,WACfD,GACAA,EAAMF,QAAQhxC,KAAMq0C,GACpB8C,IACAn3C,KAAK+vC,qBAAkB/xC,EACvBgC,KAAKm3C,YAAa,GAElBr7C,GACAkE,KAAK6wC,WAAW,CAAE/0C,WAAAA,GACzB,GAxiCL,sBAyiCI,WACI,IAAMo1C,EAAQlxC,KAAKmxC,WACnB,QAAID,GACOA,EAAMD,SAASjxC,KAK7B,GAjjCL,2BAkjCI,WACI,IAAQgN,EAAkBhN,KAAK8E,QAAvBkI,cACR,GAAKA,EAAL,CAGA,IAAI+xC,GAAY,EAKRnpC,EAAiB5I,EAAjB4I,aAQR,IAPIA,EAAaxB,QACbwB,EAAavB,SACbuB,EAAatB,SACbsB,EAAarB,WACbwqC,GAAY,GAGXA,EAAL,CAIA,IAFA,IAAMC,EAAc,CAAC,EAEZj3C,EAAI,EAAGA,EAAIiuC,GAAc/tC,OAAQF,IAAK,CAC3C,IAAMK,EAAM,SAAW4tC,GAAcjuC,GAEjC6N,EAAaxN,KACb42C,EAAY52C,GAAOwN,EAAaxN,GAChC4E,EAAciyC,eAAe72C,EAAK,GAEzC,CAKD,IAAK,IAAMA,KAFX4E,EAAc5I,SAEI46C,EACdhyC,EAAciyC,eAAe72C,EAAK42C,EAAY52C,IAIlD4E,EAAcgnC,gBApBJ,CAhBA,CAqCb,GA1lCL,iCA2lCI,WAAoC,IAC5B/7B,EAAI4W,EADQ1T,EAAgB,uDAAJ,CAAC,EAGvBtgB,EAAS,CAAC,EAChB,IAAKmF,KAAKqO,UAAYrO,KAAKk3C,MACvB,OAAOr8C,EACX,IAAKmF,KAAKi4C,UACN,MAAO,CAAElxC,WAAY,UAGrBlM,EAAOkM,WAAa,GAExB,IAAM8O,EAAoB7V,KAAK65C,uBAC/B,GAAI75C,KAAKm3C,WAQL,OAPAn3C,KAAKm3C,YAAa,EAClBt8C,EAAOsa,QAAU,GACjBta,EAAOqkD,cACH3iC,GAAmBpB,EAAU+jC,gBAAkB,GACnDrkD,EAAO2K,UAAYqQ,EACbA,EAAkB7V,KAAK4V,aAAc,IACrC,OACC/a,EAEX,IAAMw3C,EAAOryC,KAAKo8C,UAClB,IAAKp8C,KAAK+vC,kBAAoB/vC,KAAKwL,SAAW6mC,EAAKvqC,OAAQ,CACvD,IAAMq3C,EAAc,CAAC,EAerB,OAdIn/C,KAAK8E,QAAQ+H,WACbsyC,EAAYhqC,aACsBnX,IAA9BgC,KAAK4V,aAAaT,QACZnV,KAAK4V,aAAaT,QAClB,EACVgqC,EAAYD,cACR3iC,GAAmBpB,EAAU+jC,gBAAkB,IAEnDl/C,KAAKg4C,eAAiBjiC,GAAa/V,KAAK4V,gBACxCupC,EAAY35C,UAAYqQ,EAClBA,EAAkB,CAAC,EAAG,IACtB,OACN7V,KAAKg4C,cAAe,GAEjBmH,CACV,CACD,IAAMC,EAAiB/M,EAAKqC,iBAAmBrC,EAAKz8B,aACpD5V,KAAKq/C,0BACLxkD,EAAO2K,UAAYwvC,GAAyBh1C,KAAKq9C,6BAA8Br9C,KAAK8vC,UAAWsP,GAC3FvpC,IACAhb,EAAO2K,UAAYqQ,EAAkBupC,EAAgBvkD,EAAO2K,YAEhE,MAAiBxF,KAAK+vC,gBAAd5/B,EAAR,EAAQA,EAAGC,EAAX,EAAWA,EA+BX,IAAK,IAAMhI,KA9BXvN,EAAOib,gBAAP,UAAuC,IAAX3F,EAAE0I,OAA9B,aAA0D,IAAXzI,EAAEyI,OAAjD,OACIw5B,EAAKqC,gBAKL75C,EAAOsa,QACHk9B,IAASryC,KACiG,QAAnG6uB,EAAuC,QAAjC5W,EAAKmnC,EAAejqC,eAA4B,IAAP8C,EAAgBA,EAAKjY,KAAK4V,aAAaT,eAA4B,IAAP0Z,EAAgBA,EAAK,EACjI7uB,KAAKw0C,gBACDx0C,KAAK4V,aAAaT,QAClBiqC,EAAe3M,YAO7B53C,EAAOsa,QACHk9B,IAASryC,UACwBhC,IAA3BohD,EAAejqC,QACXiqC,EAAejqC,QACf,QAC2BnX,IAA/BohD,EAAe3M,YACX2M,EAAe3M,YACf,EAKA/iC,EACd,QAA4B1R,IAAxBohD,EAAeh3C,GAAnB,CAEA,MAA6BsH,EAAgBtH,GAArCwnC,EAAR,EAAQA,QAASkC,EAAjB,EAAiBA,QAOXwN,EAAiC,SAArBzkD,EAAO2K,UACnB45C,EAAeh3C,GACfwnC,EAAQwP,EAAeh3C,GAAMiqC,GACnC,GAAIP,EAEA,IADA,IAAMyN,EAAMzN,EAAQ7pC,OACXF,EAAI,EAAGA,EAAIw3C,EAAKx3C,IACrBlN,EAAOi3C,EAAQ/pC,IAAMu3C,OAIzBzkD,EAAOuN,GAAOk3C,CAlBN,CAgChB,OANIt/C,KAAK8E,QAAQ+H,WACbhS,EAAOqkD,cACH7M,IAASryC,KACHuc,GAAmBpB,EAAU+jC,gBAAkB,GAC/C,QAEPrkD,CACV,GA7sCL,2BA8sCI,WACImF,KAAKu0C,WAAav0C,KAAKy0C,cAAWz2C,CACrC,GAhtCL,uBAktCI,WACIgC,KAAKjF,KAAK48C,MAAMxvC,SAAQ,SAACtG,GAAW,IAAIoW,EAAI,OAAwC,QAAhCA,EAAKpW,EAAKyvC,wBAAqC,IAAPr5B,OAAgB,EAASA,EAAG2d,MAAS,IACjI51B,KAAKjF,KAAK48C,MAAMxvC,QAAQ+xC,IACxBl6C,KAAKjF,KAAKo9C,YAAYlZ,OACzB,KAttCL,IAwtCH,CACD,SAAS4O,GAAahsC,GAClBA,EAAKgsC,cACR,CACD,SAASwM,GAAmBx4C,GACxB,IAAIoW,EACEw8B,GAAuC,QAA1Bx8B,EAAKpW,EAAK0yC,kBAA+B,IAAPt8B,OAAgB,EAASA,EAAGw8B,WAAa5yC,EAAK4yC,SACnG,GAAI5yC,EAAK0vC,UACL1vC,EAAK2J,QACLipC,GACA5yC,EAAK29C,aAAa,aAAc,CAChC,MAA2D39C,EAAK2J,OAA7CA,EAAnB,EAAQ0/B,UAAgCuU,EAAxC,EAA2BhE,YACnBiD,EAAkB78C,EAAKiD,QAAvB45C,cACFrC,EAAW5H,EAASvsC,SAAWrG,EAAK2J,OAAOtD,OAG3B,SAAlBw2C,EACArW,IAAS,SAACvB,GACN,IAAM4Y,EAAerD,EACf5H,EAASgH,YAAY3U,GACrB2N,EAASvJ,UAAUpE,GACnB7+B,EAAS4+B,GAAW6Y,GAC1BA,EAAa3uC,IAAMvF,EAAOs7B,GAAM/1B,IAChC2uC,EAAa1uC,IAAM0uC,EAAa3uC,IAAM9I,CACzC,IAEIw2C,GAA0BC,EAAejK,EAASvJ,UAAW1/B,IAClE68B,IAAS,SAACvB,GACN,IAAM4Y,EAAerD,EACf5H,EAASgH,YAAY3U,GACrB2N,EAASvJ,UAAUpE,GACnB7+B,EAAS4+B,GAAWr7B,EAAOs7B,IACjC4Y,EAAa1uC,IAAM0uC,EAAa3uC,IAAM9I,EAIlCpG,EAAKi3C,iBAAmBj3C,EAAKyvC,mBAC7BzvC,EAAKg1C,mBAAoB,EACzBh1C,EAAKi3C,eAAehS,GAAM91B,IACtBnP,EAAKi3C,eAAehS,GAAM/1B,IAAM9I,EAE3C,IAEL,IAAM03C,EnBzyCa,CACvBxvC,EAP2B,CAC3Bg3B,UAAW,EACX/1B,MAAO,EACPyH,OAAQ,EACRquB,YAAa,GAIb92B,EAR2B,CAC3B+2B,UAAW,EACX/1B,MAAO,EACPyH,OAAQ,EACRquB,YAAa,ImB4yCTE,GAAauY,EAAan0C,EAAQipC,EAASvJ,WAC3C,IAAM0U,EnB3yCa,CACvBzvC,EAP2B,CAC3Bg3B,UAAW,EACX/1B,MAAO,EACPyH,OAAQ,EACRquB,YAAa,GAIb92B,EAR2B,CAC3B+2B,UAAW,EACX/1B,MAAO,EACPyH,OAAQ,EACRquB,YAAa,ImB8yCLmV,EACAjV,GAAawY,EAAa/9C,EAAK+6C,eAAe6C,GAAgB,GAAOhL,EAASgH,aAG9ErU,GAAawY,EAAap0C,EAAQipC,EAASvJ,WAE/C,IAAMkD,GAAoBwF,GAAY+L,GAClChH,GAA2B,EAC/B,IAAK92C,EAAK0yC,WAAY,CAClB,IAAM0H,EAAiBp6C,EAAK26C,6BAK5B,GAAIP,IAAmBA,EAAe1H,WAAY,CAC9C,IAAkBsL,EAAyC5D,EAAnDxH,SAAkCqL,EAAiB7D,EAAzBzwC,OAClC,GAAIq0C,GAAkBC,EAAc,CAChC,IAAMC,EnBxzCD,CACrB5vC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,ImB0zCrBy2B,GAAqBsY,EAAkBtL,EAASvJ,UAAW2U,EAAe3U,WAC1E,IAAM0S,EnB1zCD,CACrBztC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,ImB4zCrBy2B,GAAqBmW,EAAgBpyC,EAAQs0C,EAAa5U,WACrD2I,GAAUkM,EAAkBnC,KAC7BjF,GAA2B,GAE3BsD,EAAen3C,QAAQw0C,aACvBz3C,EAAKi3C,eAAiB8E,EACtB/7C,EAAK66C,qBAAuBqD,EAC5Bl+C,EAAKo6C,eAAiBA,EAE7B,CACJ,CACJ,CACDp6C,EAAKm4C,gBAAgB,YAAa,CAC9BxuC,OAAAA,EACAipC,SAAAA,EACAv0B,MAAO0/B,EACPD,YAAAA,EACAvR,iBAAAA,EACAuK,yBAAAA,GAEP,MACI,GAAI92C,EAAK0vC,SAAU,CACpB,IAAQ5M,EAAmB9iC,EAAKiD,QAAxB6/B,eACRA,GAAkBA,GACrB,CAMD9iC,EAAKiD,QAAQhJ,gBAAakC,CAC7B,CACD,SAAS45C,GAAoB/1C,GAIzBo0C,GAAoBC,aACfr0C,EAAKoL,SAQLpL,EAAKg7C,iBACNh7C,EAAKg1C,kBAAoBh1C,EAAKoL,OAAO4pC,mBAOzCh1C,EAAKi1C,0BAA4Bj1C,EAAKi1C,wBAA0BzsC,QAAQxI,EAAKg1C,mBACzEh1C,EAAKoL,OAAO4pC,mBACZh1C,EAAKoL,OAAO6pC,0BAChBj1C,EAAKk1C,mBAAqBl1C,EAAKk1C,iBAAmBl1C,EAAKoL,OAAO8pC,kBACjE,CACD,SAASgB,GAAgBl2C,GACrBA,EAAKg1C,kBACDh1C,EAAKi1C,wBACDj1C,EAAKk1C,kBACD,CACf,CACD,SAASwD,GAAc14C,GACnBA,EAAK04C,eACR,CACD,SAASL,GAAkBr4C,GACvBA,EAAKq4C,mBACR,CACD,SAASC,GAAmBt4C,GACxBA,EAAK+yC,eAAgB,CACxB,CACD,SAASwF,GAAoBv4C,GACzB,IAAQmL,EAAkBnL,EAAKiD,QAAvBkI,cACJA,GAAiBA,EAAcuV,WAAWy9B,uBAC1ChzC,EAAcuxB,OAAO,uBAEzB18B,EAAK60C,gBACR,CACD,SAAS+B,GAAgB52C,GACrBA,EAAK42C,kBACL52C,EAAKk6C,YAAcl6C,EAAKi3C,eAAiBj3C,EAAKiG,YAAS9J,EACvD6D,EAAKg1C,mBAAoB,CAC5B,CACD,SAASgB,GAAmBh2C,GACxBA,EAAKg2C,oBACR,CACD,SAASC,GAAej2C,GACpBA,EAAKi2C,gBACR,CACD,SAAS4B,GAAc73C,GACnBA,EAAK63C,eACR,CACD,SAASc,GAAoBtJ,GACzBA,EAAM+O,oBACT,CACD,SAAS/B,GAAaxvB,EAAQxO,EAAOvX,GACjC+lB,EAAOyY,UAAY1qB,GAAIyD,EAAMinB,UAAW,EAAGx+B,GAC3C+lB,EAAOtd,MAAQqL,GAAIyD,EAAM9O,MAAO,EAAGzI,GACnC+lB,EAAO7V,OAASqH,EAAMrH,OACtB6V,EAAOwY,YAAchnB,EAAMgnB,WAC9B,CACD,SAASgZ,GAAQxxB,EAAQjC,EAAMC,EAAI/jB,GAC/B+lB,EAAO3d,IAAM0L,GAAIgQ,EAAK1b,IAAK2b,EAAG3b,IAAKpI,GACnC+lB,EAAO1d,IAAMyL,GAAIgQ,EAAKzb,IAAK0b,EAAG1b,IAAKrI,EACtC,CACD,SAASy1C,GAAO1vB,EAAQjC,EAAMC,EAAI/jB,GAC9Bu3C,GAAQxxB,EAAOve,EAAGsc,EAAKtc,EAAGuc,EAAGvc,EAAGxH,GAChCu3C,GAAQxxB,EAAOte,EAAGqc,EAAKrc,EAAGsc,EAAGtc,EAAGzH,EACnC,CACD,SAASq1C,GAAoBn8C,GACzB,OAAQA,EAAK6yC,sBAAwD12C,IAArC6D,EAAK6yC,gBAAgBjC,WACxD,CACD,IAAMuG,GAA0B,CAC5B9zC,SAAU,IACVujB,KAAM,CAAC,GAAK,EAAG,GAAK,IAExB,SAAS03B,GAAUrZ,GACfA,EAAK/1B,IAAM/W,KAAKuX,MAAMu1B,EAAK/1B,KAC3B+1B,EAAK91B,IAAMhX,KAAKuX,MAAMu1B,EAAK91B,IAC9B,CACD,SAASwqC,GAASxS,GACdmX,GAAUnX,EAAI74B,GACdgwC,GAAUnX,EAAI54B,EACjB,CACD,SAASquC,GAA0BC,EAAejK,EAAUjpC,GACxD,MAA0B,aAAlBkzC,GACe,oBAAlBA,IACI3X,GAAO+M,GAAYW,GAAWX,GAAYtoC,GAAS,GAC/D,CEr8CD,IAAM40C,GAAyB/J,GAAqB,CAChDC,qBAAsB,SAACx5C,EAAKyhC,GAAN,OAAiBrgB,GAAYphB,EAAK,SAAUyhC,EAA5C,EACtBiY,cAAe,iBAAO,CAClBrmC,EAAGlH,SAASo3C,gBAAgBC,YAAcr3C,SAASs3C,KAAKD,WACxDlwC,EAAGnH,SAASo3C,gBAAgBp+C,WAAagH,SAASs3C,KAAKt+C,UAF5C,EAIfw0C,kBAAmB,kBAAM,CAAN,ICNjBhK,GAAqB,CACvB1qC,aAAS/D,GAEPwiD,GAAqBnK,GAAqB,CAC5CG,cAAe,SAACnoC,GAAD,MAAe,CAC1B8B,EAAG9B,EAASiyC,WACZlwC,EAAG/B,EAASpM,UAFD,EAIfs0C,cAAe,WACX,IAAK9J,GAAmB1qC,QAAS,CAC7B,IAAM0+C,EAAe,IAAIL,GAAuB,CAAC,GACjDK,EAAanyC,MAAMV,QACnB6yC,EAAa5P,WAAW,CAAEkK,cAAc,IACxCtO,GAAmB1qC,QAAU0+C,CAChC,CACD,OAAOhU,GAAmB1qC,OAC7B,EACD20C,eAAgB,SAACroC,EAAU7J,GACvB6J,EAASnP,MAAMsG,eAAsBxH,IAAVwG,EAAsBA,EAAQ,MAC5D,EACDiyC,kBAAmB,SAACpoC,GAAD,OAAchE,QAAuD,UAA/CuD,OAAO8yC,iBAAiBryC,GAAUsyC,SAAxD,IClBjBz1C,GAAO,CACTI,IAAK,CACDyU,QAAS4uB,IAEbzjC,KAAM,CACF6U,QAASuuB,GACTsS,eAAgBJ,GAChB7zC,cAAAA,KCAFk0C,GAAwB,uDAC9B,SAASC,GAAiB/+C,GACtB,IAAM0pB,EAAQo1B,GAAsBE,KAAKh/C,GACzC,IAAK0pB,EACD,MAAO,CAAC,GACZ,eAA4BA,EAA5B,GACA,MAAO,CADP,UAEH,CAED,SAASu1B,GAAiBj/C,EAASmZ,GAAoB,IAAXq6B,EAAW,uDAAH,EAChD5tB,GAAU4tB,GAFG,EAEJ,gEAA6ExzC,EAA7E,yDACT,MAA0B++C,GAAiB/+C,GAA3C,gBAAO0O,EAAP,KAAcwwC,EAAd,KAEA,GAAKxwC,EAAL,CAGA,IAAMgN,EAAW7P,OAAO8yC,iBAAiBxlC,GAASgmC,iBAAiBzwC,GACnE,OAAIgN,EACOA,EAASjH,OAEX7F,EAAmBswC,GAEjBD,GAAiBC,EAAU/lC,EAASq6B,EAAQ,GAG5C0L,CAXD,CAab,CC/BD,IAAME,GAAiB,IAAItxC,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,SACA,IACA,IACA,aACA,eAEEuxC,GAAkB,SAACh5C,GAAD,OAAS+4C,GAAe/xC,IAAIhH,EAA5B,EAIlBi5C,GAAgB,SAAC33C,GAAD,OAAOA,IAAMuH,GAAUvH,IAAMwI,EAA7B,EAChBovC,GAAmB,SAACC,EAAQC,GAAT,OAAiBrwC,WAAWowC,EAAOxvC,MAAM,MAAMyvC,GAA/C,EACnBC,GAAyB,SAACC,EAAMC,GAAP,OAAgB,SAACC,EAAD,GAA0B,IAAhBp8C,EAAgB,EAAhBA,UACrD,GAAkB,SAAdA,IAAyBA,EACzB,OAAO,EACX,IAAMq8C,EAAWr8C,EAAUimB,MAAM,sBACjC,GAAIo2B,EACA,OAAOP,GAAiBO,EAAS,GAAIF,GAGrC,IAAMJ,EAAS/7C,EAAUimB,MAAM,oBAC/B,OAAI81B,EACOD,GAAiBC,EAAO,GAAIG,GAG5B,CAGlB,CAhB8B,EAiBzBI,GAAgB,IAAIjyC,IAAI,CAAC,IAAK,IAAK,MACnCkyC,GAAgCpyC,EAAmBpI,QAAO,SAACa,GAAD,OAAU05C,GAAc1yC,IAAIhH,EAA5B,IAChE,SAAS45C,GAAgCh1C,GACrC,IAAMi1C,EAAoB,GAW1B,OAVAF,GAA8B55C,SAAQ,SAACC,GACnC,IAAM5D,EAAQwI,EAAckzB,SAAS93B,QACvBpK,IAAVwG,IACAy9C,EAAkBt6C,KAAK,CAACS,EAAK5D,EAAM0K,QACnC1K,EAAM6K,IAAIjH,EAAI2H,WAAW,SAAW,EAAI,GAE/C,IAEGkyC,EAAkBh6C,QAClB+E,EAAc5I,SACX69C,CACV,CACD,IAAMC,GAAmB,CAErBvjD,MAAO,kBAAGwR,EAAH,EAAGA,EAAH,IAAU2D,YAAAA,OAAV,MAAwB,IAAxB,MAA6BF,aAAAA,OAA7B,MAA4C,IAA5C,SAAsDzD,EAAEa,IAAMb,EAAEY,IAAMI,WAAW2C,GAAe3C,WAAWyC,EAA3G,EACPT,OAAQ,kBAAG/C,EAAH,EAAGA,EAAH,IAAUuD,WAAAA,OAAV,MAAuB,IAAvB,MAA4BE,cAAAA,OAA5B,MAA4C,IAA5C,SAAsDzD,EAAEY,IAAMZ,EAAEW,IAAMI,WAAWwC,GAAcxC,WAAW0C,EAA1G,EACRP,IAAK,SAACsuC,EAAD,OAAUtuC,EAAV,EAAUA,IAAV,OAAoBnC,WAAWmC,EAA/B,EACLG,KAAM,SAACmuC,EAAD,OAAUnuC,EAAV,EAAUA,KAAV,OAAqBtC,WAAWsC,EAAhC,EACND,OAAQ,kBAAGpD,EAAH,EAAGA,EAAOkD,EAAV,EAAUA,IAAV,OAAoBnC,WAAWmC,IAAQlD,EAAEY,IAAMZ,EAAEW,IAAjD,EACRwC,MAAO,kBAAGpD,EAAH,EAAGA,EAAOsD,EAAV,EAAUA,KAAV,OAAqBtC,WAAWsC,IAAStD,EAAEa,IAAMb,EAAEY,IAAnD,EAEPZ,EAAGsxC,GAAuB,EAAG,IAC7BrxC,EAAGqxC,GAAuB,EAAG,KAGjCS,GAAiBntC,WAAamtC,GAAiB/xC,EAC/C+xC,GAAiBltC,WAAaktC,GAAiB9xC,EAC/C,IAAM+xC,GAA2B,SAACr6C,EAAQkF,EAAeo1C,GACrD,IAAMC,EAAar1C,EAAc68B,qBAC3B3uB,EAAUlO,EAAcjL,QACxBugD,EAAuB5B,iBAAiBxlC,GACtC3c,EAAY+jD,EAAZ/jD,QACFsa,EAAS,CAAC,EAGA,SAAZta,GACAyO,EAAciyC,eAAe,UAAWn3C,EAAOvJ,SAAW,SAK9D6jD,EAAYj6C,SAAQ,SAACC,GACjByQ,EAAOzQ,GAAO85C,GAAiB95C,GAAKi6C,EAAYC,EACnD,IAEDt1C,EAAc5I,SACd,IAAMm+C,EAAav1C,EAAc68B,qBAQjC,OAPAuY,EAAYj6C,SAAQ,SAACC,GAGjB,IAAM5D,EAAQwI,EAAckzB,SAAS93B,GACrC5D,GAASA,EAAMg+C,KAAK3pC,EAAOzQ,IAC3BN,EAAOM,GAAO85C,GAAiB95C,GAAKm6C,EAAYD,EACnD,IACMx6C,CACV,EAyHD,SAAS26C,GAAez1C,EAAelF,EAAQ+Q,EAAQ6E,GACnD,OA3MqB,SAAC5V,GACtB,OAAOV,OAAOD,KAAKW,GAAQqC,KAAKi3C,GACnC,CAyMUsB,CAAiB56C,GAzHa,SAACkF,EAAelF,GAA4C,IAApC+Q,EAAoC,uDAA3B,CAAC,EAAG6E,EAAuB,uDAAP,CAAC,EAC3F5V,GAAS,UAAKA,GACd4V,GAAgB,UAAKA,GACrB,IAAMilC,EAAuBv7C,OAAOD,KAAKW,GAAQP,OAAO65C,IAGpDwB,EAAyB,GACzBC,GAAsC,EACpCC,EAAuB,GAkF7B,GAjFAH,EAAqBx6C,SAAQ,SAACC,GAC1B,IAAM5D,EAAQwI,EAAckzB,SAAS93B,GACrC,GAAK4E,EAAcizB,SAAS73B,GAA5B,CAEA,IAGI26C,EAHAt2B,EAAO5T,EAAOzQ,GACd46C,EAAWnjB,GAAuBpT,GAChCC,EAAK5kB,EAAOM,GAMlB,GAAIkU,GAAkBoQ,GAAK,CACvB,IAAMu2B,EAAev2B,EAAGzkB,OAClBi7C,EAAsB,OAAVx2B,EAAG,GAAc,EAAI,EACvCD,EAAOC,EAAGw2B,GACVF,EAAWnjB,GAAuBpT,GAClC,IAAK,IAAI1kB,EAAIm7C,EAAWn7C,EAAIk7C,GAKV,OAAVv2B,EAAG3kB,GAL+BA,IAOjCg7C,EAMDp7B,GAAUkY,GAAuBnT,EAAG3kB,MAAQg7C,EAAQ,2CALpDA,EAASljB,GAAuBnT,EAAG3kB,IACnC4f,GAAUo7B,IAAWC,GAChB3B,GAAc2B,IAAa3B,GAAc0B,GAAU,gEAMnE,MAEGA,EAASljB,GAAuBnT,GAEpC,GAAIs2B,IAAaD,EAGb,GAAI1B,GAAc2B,IAAa3B,GAAc0B,GAAS,CAClD,IAAMhhD,EAAUyC,EAAM0K,MACC,kBAAZnN,GACPyC,EAAM6K,IAAI8B,WAAWpP,IAEP,kBAAP2qB,EACP5kB,EAAOM,GAAO+I,WAAWub,GAEpB/iB,MAAMC,QAAQ8iB,IAAOq2B,IAAW7wC,KACrCpK,EAAOM,GAAOskB,EAAGxD,IAAI/X,YAE5B,MACsB,OAAb6xC,QAAkC,IAAbA,OAAsB,EAASA,EAASx9C,aACvD,OAAXu9C,QAA8B,IAAXA,OAAoB,EAASA,EAAOv9C,aAC9C,IAATinB,GAAqB,IAAPC,GAGF,IAATD,EACAjoB,EAAM6K,IAAI0zC,EAAOv9C,UAAUinB,IAG3B3kB,EAAOM,GAAO46C,EAASx9C,UAAUknB,IAMhCm2B,IACDD,EACIZ,GAAgCh1C,GACpC61C,GAAsC,GAE1CC,EAAqBn7C,KAAKS,GAC1BsV,EAActV,QACapK,IAAvB0f,EAActV,GACRsV,EAActV,GACdN,EAAOM,GACjB5D,EAAMg+C,KAAK91B,GA1ET,CA6Eb,IACGo2B,EAAqB76C,OAAQ,CAC7B,IAAMk7C,EAAUL,EAAqB3jD,QAAQ,WAAa,EACpDyO,OAAOw1C,YACP,KACAC,EAAkBlB,GAAyBr6C,EAAQkF,EAAe81C,GAaxE,OAXIF,EAAuB36C,QACvB26C,EAAuBz6C,SAAQ,YAAkB,oBAAhBC,EAAgB,KAAX5D,EAAW,KAC7CwI,EAAckzB,SAAS93B,GAAKiH,IAAI7K,EACnC,IAGLwI,EAAc5I,SAEV4E,GAAyB,OAAZm6C,GACbv1C,OAAO01C,SAAS,CAAEhwC,IAAK6vC,IAEpB,CAAEr7C,OAAQu7C,EAAiB3lC,cAAAA,EACrC,CAEG,MAAO,CAAE5V,OAAAA,EAAQ4V,cAAAA,EAExB,CAUS6lC,CAAiCv2C,EAAelF,EAAQ+Q,EAAQ6E,GAChE,CAAE5V,OAAAA,EAAQ4V,cAAAA,EACnB,CC5ND,IAAM8lC,GAAkB,SAACx2C,EAAelF,EAAQ+Q,EAAQ6E,GACpD,IAAMD,EFqCV,SAA6BzQ,EAA7B,EAA2D0Q,GAAe,IAAzB5V,EAAyB,oBAChEoT,EAAUlO,EAAcjL,QAC9B,KAAMmZ,aAAmBmO,SACrB,MAAO,CAAEvhB,OAAAA,EAAQ4V,cAAAA,GAiBrB,IAAK,IAAMtV,KAdPsV,IACAA,GAAgB,UAAKA,IAGzB1Q,EAAcsL,OAAOnQ,SAAQ,SAAC3D,GAC1B,IAAMzC,EAAUyC,EAAM0K,MACtB,GAAKyB,EAAmB5O,GAAxB,CAEA,IAAM0b,EAAWujC,GAAiBj/C,EAASmZ,GACvCuC,GACAjZ,EAAM6K,IAAIoO,EAHJ,CAIb,IAGiB3V,EAAQ,CACtB,IAAM/F,EAAU+F,EAAOM,GACvB,GAAKuI,EAAmB5O,GAAxB,CAEA,IAAM0b,EAAWujC,GAAiBj/C,EAASmZ,GACtCuC,IAGL3V,EAAOM,GAAOqV,EACTC,IACDA,EAAgB,CAAC,QAIM1f,IAAvB0f,EAActV,KACdsV,EAActV,GAAOrG,GAZb,CAcf,CACD,MAAO,CAAE+F,OAAAA,EAAQ4V,cAAAA,EACpB,CE5EoB+lC,CAAoBz2C,EAAelF,EAAQ4V,GAG5D,OAAO+kC,GAAez1C,EAFtBlF,EAAS2V,EAAS3V,OAE2B+Q,EAD7C6E,EAAgBD,EAASC,cAE5B,ECXKgmC,GAAuB,CAAE3hD,QAAS,MAClC4hD,GAA2B,CAAE5hD,SAAS,GCF5C,IAAM6hD,GAAqB,IAAI3+B,Q,kCCoBzB4+B,GAAez8C,OAAOD,KAAKsE,GAC3Bq4C,GAAcD,GAAa57C,OAC3B87C,GAAoB,CACtB,iBACA,oBACA,SACA,sBACA,gBACA,uBACA,2BAEEC,GAAkBh6C,EAAa/B,OAK/Bg8C,GAAAA,WACF,cAAiG,WAAnFh3C,EAAmF,EAAnFA,OAAQrS,EAA2E,EAA3EA,MAAOuS,EAAoE,EAApEA,gBAAiBC,EAAmD,EAAnDA,oBAAqBL,EAA8B,EAA9BA,YAAgBjI,EAAc,uDAAJ,CAAC,GAAG,gBAK7F9E,KAAK+B,QAAU,KAIf/B,KAAKjB,SAAW,IAAI8Q,IAIpB7P,KAAKoK,eAAgB,EACrBpK,KAAKiK,uBAAwB,EAQ7BjK,KAAKkhC,mBAAqB,KAM1BlhC,KAAKsY,OAAS,IAAIrJ,IAIlBjP,KAAKsM,SAAW,CAAC,EAKjBtM,KAAKkkD,mBAAqB,IAAIj1C,IAM9BjP,KAAKmkD,iBAAmB,CAAC,EAIzBnkD,KAAKm+B,OAAS,CAAC,EAMfn+B,KAAKokD,uBAAyB,CAAC,EAC/BpkD,KAAKqkD,aAAe,kBAAM,EAAK9lB,OAAO,SAAU,EAAK3oB,aAAjC,EACpB5V,KAAKoE,OAAS,WACL,EAAKrC,UAEV,EAAKuiD,eACL,EAAKC,eAAe,EAAKxiD,QAAS,EAAK0Z,YAAa,EAAK7gB,MAAMsE,MAAO,EAAKkc,YAC9E,EACDpb,KAAKg0C,eAAiB,kBAAMjyB,GAAAA,OAAa,EAAK3d,QAAQ,GAAO,EAAvC,EACtB,IAAQwR,EAA8B7I,EAA9B6I,aAAc6F,EAAgB1O,EAAhB0O,YACtBzb,KAAK4V,aAAeA,EACpB5V,KAAKwkD,YAAL,UAAuB5uC,GACvB5V,KAAKykD,cAAgB7pD,EAAM4P,SAAN,UAAqBoL,GAAiB,CAAC,EAC5D5V,KAAKyb,YAAcA,EACnBzb,KAAKiN,OAASA,EACdjN,KAAKpF,MAAQA,EACboF,KAAKmN,gBAAkBA,EACvBnN,KAAKu1C,MAAQtoC,EAASA,EAAOsoC,MAAQ,EAAI,EACzCv1C,KAAKoN,oBAAsBA,EAC3BpN,KAAK8E,QAAUA,EACf9E,KAAKiK,sBAAwBA,EAAsBrP,GACnDoF,KAAKoK,cAAgBA,EAAcxP,GAC/BoF,KAAKoK,gBACLpK,KAAKuhC,gBAAkB,IAAI1xB,KAE/B7P,KAAKsjC,uBAAyBj5B,QAAQ4C,GAAUA,EAAOlL,SAWvD,MAA+C/B,KAAK4b,4BAA4BhhB,EAAO,CAAC,GAAhFimC,EAAR,EAAQA,WAAe6jB,EAAvB,SACA,IAAK,IAAMt8C,KAAOs8C,EAAqB,CACnC,IAAMlgD,EAAQkgD,EAAoBt8C,QACRpK,IAAtB4X,EAAaxN,IAAsB4H,EAAcxL,KACjDA,EAAM6K,IAAIuG,EAAaxN,IAAM,GACzBk1B,GAAwBuD,IACxBA,EAAWzf,IAAIhZ,GAG1B,CACJ,C,2DAQD,SAA4Bu8C,EAAQC,GAChC,MAAO,CAAC,CACX,G,mBACD,SAAMv2C,GAAU,WACZrO,KAAK+B,QAAUsM,EACfu1C,GAAmBv0C,IAAIhB,EAAUrO,MAC7BA,KAAKob,aAAepb,KAAKob,WAAW/M,UACpCrO,KAAKob,WAAW9M,MAAMD,GAEtBrO,KAAKiN,QAAUjN,KAAKoK,gBAAkBpK,KAAKiK,wBAC3CjK,KAAK6kD,sBAAwB7kD,KAAKiN,OAAO63C,gBAAgB9kD,OAE7DA,KAAKsY,OAAOnQ,SAAQ,SAAC3D,EAAO4D,GAAR,OAAgB,EAAK28C,kBAAkB38C,EAAK5D,EAA5C,IACfm/C,GAAyB5hD,SC1JtC,WAEI,GADA4hD,GAAyB5hD,SAAU,EAC9BiH,EAEL,GAAI4E,OAAOo3C,WAAY,CACnB,IAAMC,EAAmBr3C,OAAOo3C,WAAW,4BACrCE,EAA8B,kBAAOxB,GAAqB3hD,QAAUkjD,EAAiBpiC,OAAvD,EACpCoiC,EAAiBE,YAAYD,GAC7BA,GACH,MAEGxB,GAAqB3hD,SAAU,CAEtC,CD8IWqjD,GAEJplD,KAAKkhC,mBAC4B,UAA7BlhC,KAAKoN,sBAE8B,WAA7BpN,KAAKoN,qBAEDs2C,GAAqB3hD,SAI/B/B,KAAKiN,QACLjN,KAAKiN,OAAOlO,SAASqiB,IAAIphB,MAC7BA,KAAK0N,OAAO1N,KAAKpF,MAAOoF,KAAKmN,gBAChC,G,qBACD,WAQI,IAAK,IAAM/E,KAPXw7C,GAAAA,OAA0B5jD,KAAK+B,SAC/B/B,KAAKob,YAAcpb,KAAKob,WAAW7M,UACnC2T,GAAYliB,KAAKqkD,cACjBniC,GAAYliB,KAAKoE,QACjBpE,KAAKkkD,mBAAmB/7C,SAAQ,SAACg5B,GAAD,OAAYA,GAAZ,IAChCnhC,KAAK6kD,uBAAyB7kD,KAAK6kD,wBACnC7kD,KAAKiN,QAAUjN,KAAKiN,OAAOlO,SAASwiB,OAAOvhB,MACzBA,KAAKm+B,OACnBn+B,KAAKm+B,OAAO/1B,GAAK62B,QAErB,IAAK,IAAM72B,KAAOpI,KAAKsM,SACnBtM,KAAKsM,SAASlE,GAAKmG,UAEvBvO,KAAK+B,QAAU,IAClB,G,+BACD,SAAkBqG,EAAK5D,GAAO,WACpB6gD,EAAmBz1C,EAAeR,IAAIhH,GACtCk9C,EAAiB9gD,EAAMq6B,GAAG,UAAU,SAAC0mB,GACvC,EAAK3vC,aAAaxN,GAAOm9C,EACzB,EAAK3qD,MAAMs8B,UACPnV,GAAAA,OAAa,EAAKsiC,cAAc,GAAO,GACvCgB,GAAoB,EAAKjqC,aACzB,EAAKA,WAAW27B,kBAAmB,EAE1C,IACKyO,EAAwBhhD,EAAMq6B,GAAG,gBAAiB7+B,KAAKg0C,gBAC7Dh0C,KAAKkkD,mBAAmB70C,IAAIjH,GAAK,WAC7Bk9C,IACAE,GACH,GACJ,G,8BACD,SAAiBtoD,GAIb,OAAK8C,KAAK+B,SACL/B,KAAKylD,0BACNzlD,KAAK6Q,OAAS3T,EAAM2T,KAGjB7Q,KAAKylD,yBAAyBzlD,KAAK+B,QAAS7E,EAAM6E,SAF9C,CAGd,G,0BACD,WAA6CmM,EAAUjC,EAAmBgC,GAetE,IAfgG,IAC5Fy3C,EACA/4C,EAF4F,OAAxEg5C,GAAwE,EAArF5mD,SAAqF,UAevFgJ,EAAI,EAAGA,EAAI+7C,GAAa/7C,IAAK,CAClC,IAAMrN,EAAOmpD,GAAa97C,GAC1B,EAA2G0D,EAAmB/Q,GAAtHgR,EAAR,EAAQA,UAAoBk6C,EAA5B,EAAmB7lC,QAA6B6gC,EAAhD,EAAgDA,eAA+BiF,EAA/E,EAAgEl5C,cAC5Di0C,IACA8E,EAA4B9E,GAC5Bl1C,EAAUi6C,MACL3lD,KAAKsM,SAAS5R,IAASkrD,IACxB5lD,KAAKsM,SAAS5R,GAAQ,IAAIkrD,EAAmB5lD,OAE7C6lD,IACAl5C,EAAgBk5C,GAG3B,CACD,IAAK7lD,KAAKob,YAAcsqC,EAA2B,CAC/C1lD,KAAKob,WAAa,IAAIsqC,EAA0B1lD,KAAK4V,aAAc5V,KAAKiN,QAAUjN,KAAKiN,OAAOmO,YAC9F,IAAQvO,EAAuE84C,EAAvE94C,SAAUrB,EAA6Dm6C,EAA7Dn6C,OAAQN,EAAqDy6C,EAArDz6C,KAAM6gC,EAA+C4Z,EAA/C5Z,gBAAiBgP,EAA8B4K,EAA9B5K,aAAczB,EAAgBqM,EAAhBrM,WAC/Dt5C,KAAKob,WAAWy1B,WAAW,CACvBhkC,SAAAA,EACArB,OAAAA,EACAkvC,oBAAqBrwC,QAAQa,IACxB6gC,GAAmBxiC,EAAYwiC,GACpC/+B,cAAehN,KACfg0C,eAAgB,kBAAM,EAAKA,gBAAX,EAQhB0K,cAAiC,kBAAXlzC,EAAsBA,EAAS,OACrDqzC,uBAAwB5wC,EACxB8sC,aAAAA,EACAzB,WAAAA,GAEP,CACD,OAAO3sC,CACV,G,4BACD,WACI,IAAK,IAAMvE,KAAOpI,KAAKsM,SAAU,CAC7B,IAAMw5C,EAAU9lD,KAAKsM,SAASlE,GAC1B09C,EAAQ9lC,UACR8lC,EAAQp4C,UAGRo4C,EAAQx3C,QACRw3C,EAAQ9lC,WAAY,EAE3B,CACJ,G,0BACD,WACIhgB,KAAK+lD,MAAM/lD,KAAKyb,YAAazb,KAAK4V,aAAc5V,KAAK8E,QAAS9E,KAAKpF,MACtE,G,gCAMD,WACI,OAAOoF,KAAK+B,QACN/B,KAAKgmD,2BAA2BhmD,KAAK+B,QAAS/B,KAAKpF,O7BzRxC,CACrBuV,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,G6B4RpC,G,4BACD,SAAe5I,GACX,OAAOpI,KAAK4V,aAAaxN,EAC5B,G,4BACD,SAAeA,EAAK5D,GAChBxE,KAAK4V,aAAaxN,GAAO5D,CAC5B,G,kCAQD,SAAqBsD,GAA0B,IAAlBm+C,IAAkB,yDAC3C,OAAOjmD,KAAKkmD,iCAAiCp+C,EAAQ9H,KAAKpF,MAAOqrD,EACpE,G,oBAKD,SAAOrrD,EAAOuS,IACNvS,EAAMib,mBAAqB7V,KAAKpF,MAAMib,oBACtC7V,KAAKg0C,iBAETh0C,KAAKqB,UAAYrB,KAAKpF,MACtBoF,KAAKpF,MAAQA,EACboF,KAAK6kC,oBAAsB7kC,KAAKmN,gBAChCnN,KAAKmN,gBAAkBA,EAIvB,IAAK,IAAIpF,EAAI,EAAGA,EAAIg8C,GAAkB97C,OAAQF,IAAK,CAC/C,IAAMK,EAAM27C,GAAkBh8C,GAC1B/H,KAAKokD,uBAAuBh8C,KAC5BpI,KAAKokD,uBAAuBh8C,YACrBpI,KAAKokD,uBAAuBh8C,IAEvC,IAAM+9C,EAAWvrD,EAAM,KAAOwN,GAC1B+9C,IACAnmD,KAAKokD,uBAAuBh8C,GAAOpI,KAAK6+B,GAAGz2B,EAAK+9C,GAEvD,CACDnmD,KAAKmkD,iBE5Ub,SAAqCjpC,EAASpU,EAAMsgB,GAChD,IAAQyZ,EAAe/5B,EAAf+5B,WACR,IAAK,IAAMz4B,KAAOtB,EAAM,CACpB,IAAMs/C,EAAYt/C,EAAKsB,GACjBi+C,EAAYj/B,EAAKhf,GACvB,GAAI4H,EAAco2C,GAKdlrC,EAAQilB,SAAS/3B,EAAKg+C,GAClB9oB,GAAwBuD,IACxBA,EAAWzf,IAAIhZ,QAUlB,GAAI4H,EAAcq2C,GAKnBnrC,EAAQilB,SAAS/3B,EAAKs3B,GAAY0mB,EAAW,CAAEjsB,MAAOjf,KAClDoiB,GAAwBuD,IACxBA,EAAWM,OAAO/4B,QAGrB,GAAIi+C,IAAcD,EAMnB,GAAIlrC,EAAQ+kB,SAAS73B,GAAM,CACvB,IAAMk+C,EAAgBprC,EAAQglB,SAAS93B,IAEtCk+C,EAAc3nB,aAAe2nB,EAAcj3C,IAAI+2C,EACnD,KACI,CACD,IAAMb,EAAcrqC,EAAQqrC,eAAen+C,GAC3C8S,EAAQilB,SAAS/3B,EAAKs3B,QAA4B1hC,IAAhBunD,EAA4BA,EAAca,EAAW,CAAEjsB,MAAOjf,IACnG,CAER,CAED,IAAK,IAAM9S,KAAOgf,OACIppB,IAAd8I,EAAKsB,IACL8S,EAAQsrC,YAAYp+C,GAE5B,OAAOtB,CACV,CFqR+B2/C,CAA4BzmD,KAAMA,KAAK4b,4BAA4BhhB,EAAOoF,KAAKqB,WAAYrB,KAAKmkD,kBACpHnkD,KAAK0mD,wBACL1mD,KAAK0mD,wBAEZ,G,sBACD,WACI,OAAO1mD,KAAKpF,KACf,G,wBAID,SAAWF,GACP,OAAOsF,KAAKpF,MAAM0P,SAAWtK,KAAKpF,MAAM0P,SAAS5P,QAAQsD,CAC5D,G,kCAID,WACI,OAAOgC,KAAKpF,MAAMkB,UACrB,G,mCACD,WACI,OAAOkE,KAAKpF,MAAM8N,kBACrB,G,mCACD,WACI,OAAO1I,KAAKoK,cACNpK,KACAA,KAAKiN,OACDjN,KAAKiN,OAAO05C,6BACZ3oD,CACb,G,+BACD,WAAyC,IAAvB4oD,EAAuB,wDACrC,GAAIA,EACA,OAAO5mD,KAAKiN,OAASjN,KAAKiN,OAAO61B,yBAAsB9kC,EAE3D,IAAKgC,KAAKiK,sBAAuB,CAC7B,IAAMpK,EAAUG,KAAKiN,QACfjN,KAAKiN,OAAO61B,qBACZ,CAAC,EAIP,YAH2B9kC,IAAvBgC,KAAKpF,MAAM4P,UACX3K,EAAQ2K,QAAUxK,KAAKpF,MAAM4P,SAE1B3K,CACV,CAED,IADA,IAAMA,EAAU,CAAC,EACRkI,EAAI,EAAGA,EAAIi8C,GAAiBj8C,IAAK,CACtC,IAAMrN,EAAOsP,EAAajC,GACpB+C,EAAO9K,KAAKpF,MAAMF,IACpB+O,EAAeqB,KAAkB,IAATA,KACxBjL,EAAQnF,GAAQoQ,EAEvB,CACD,OAAOjL,CACV,G,6BAID,SAAgBojB,GACZ,IAAM4jC,EAAqB7mD,KAAK2mD,wBAChC,GAAIE,EAGA,OAFAA,EAAmBtlB,iBACfslB,EAAmBtlB,gBAAgBngB,IAAI6B,GACpC,kBAAM4jC,EAAmBtlB,gBAAgBhgB,OAAO0B,EAAhD,CAEd,G,sBAID,SAAS7a,EAAK5D,GAENA,IAAUxE,KAAKsY,OAAOpJ,IAAI9G,KAC1BpI,KAAKwmD,YAAYp+C,GACjBpI,KAAK+kD,kBAAkB38C,EAAK5D,IAEhCxE,KAAKsY,OAAOjJ,IAAIjH,EAAK5D,GACrBxE,KAAK4V,aAAaxN,GAAO5D,EAAM0K,KAClC,G,yBAID,SAAY9G,GACRpI,KAAKsY,OAAOiJ,OAAOnZ,GACnB,IAAM02B,EAAc9+B,KAAKkkD,mBAAmBh1C,IAAI9G,GAC5C02B,IACAA,IACA9+B,KAAKkkD,mBAAmB3iC,OAAOnZ,WAE5BpI,KAAK4V,aAAaxN,GACzBpI,KAAK8mD,2BAA2B1+C,EAAKpI,KAAKyb,YAC7C,G,sBAID,SAASrT,GACL,OAAOpI,KAAKsY,OAAOlJ,IAAIhH,EAC1B,G,sBACD,SAASA,EAAKgzB,GACV,GAAIp7B,KAAKpF,MAAM0d,QAAUtY,KAAKpF,MAAM0d,OAAOlQ,GACvC,OAAOpI,KAAKpF,MAAM0d,OAAOlQ,GAE7B,IAAI5D,EAAQxE,KAAKsY,OAAOpJ,IAAI9G,GAK5B,YAJcpK,IAAVwG,QAAwCxG,IAAjBo9B,IACvB52B,EAAQk7B,GAAYtE,EAAc,CAAEjB,MAAOn6B,OAC3CA,KAAKmgC,SAAS/3B,EAAK5D,IAEhBA,CACV,G,uBAMD,SAAU4D,GACN,IAAI6P,EACJ,YAAkCja,IAA3BgC,KAAK4V,aAAaxN,IAAuBpI,KAAK+B,QAES,QAAvDkW,EAAKjY,KAAK+mD,uBAAuB/mD,KAAKpF,MAAOwN,UAAyB,IAAP6P,EAAgBA,EAAKjY,KAAKgnD,sBAAsBhnD,KAAK+B,QAASqG,EAAKpI,KAAK8E,SADxI9E,KAAK4V,aAAaxN,EAE3B,G,2BAKD,SAAcA,EAAK5D,GACfxE,KAAKwkD,WAAWp8C,GAAO5D,CAC1B,G,2BAKD,SAAc4D,GACV,IAAI6P,EACIzN,EAAYxK,KAAKpF,MAAjB4P,QACFy8C,EAAsC,kBAAZz8C,GAA2C,kBAAZA,EACD,QAAvDyN,EAAKiE,GAAwBlc,KAAKpF,MAAO4P,UAA6B,IAAPyN,OAAgB,EAASA,EAAG7P,QAC5FpK,EAIN,GAAIwM,QAAgCxM,IAArBipD,EACX,OAAOA,EAMX,IAAMn/C,EAAS9H,KAAK+mD,uBAAuB/mD,KAAKpF,MAAOwN,GACvD,YAAepK,IAAX8J,GAAyBkI,EAAclI,QAMR9J,IAA5BgC,KAAKykD,cAAcr8C,SACDpK,IAArBipD,OACEjpD,EACAgC,KAAKwkD,WAAWp8C,GARXN,CASd,G,gBACD,SAAGqW,EAAW1a,GAIV,OAHKzD,KAAKm+B,OAAOhgB,KACbne,KAAKm+B,OAAOhgB,GAAa,IAAIuf,IAE1B19B,KAAKm+B,OAAOhgB,GAAWiD,IAAI3d,EACrC,G,oBACD,SAAO0a,GACH,GAAIne,KAAKm+B,OAAOhgB,GAAY,8BADXm6B,EACW,iCADXA,EACW,mBACxB,EAAAt4C,KAAKm+B,OAAOhgB,IAAWogB,OAAvB,QAAiC+Z,EACpC,CACJ,K,EAndC2L,G,kCGhCAiD,GAAAA,SAAAA,I,mJACF,SAAyBjoC,EAAGC,GAMxB,OAAsC,EAA/BD,EAAEkoC,wBAAwBjoC,GAAS,GAAK,CAClD,G,oCACD,SAAuBtkB,EAAOwN,GAC1B,OAAOxN,EAAMsE,MAAQtE,EAAMsE,MAAMkJ,QAAOpK,CAC3C,G,wCACD,SAA2BoK,EAA3B,GAAiD,IAAf7M,EAAe,EAAfA,KAAM2D,EAAS,EAATA,aAC7B3D,EAAK6M,UACLlJ,EAAMkJ,EAChB,G,8CACD,aAAgG4X,GAAW,IAAxElkB,EAAwE,EAAxEA,WAAY4hB,EAA4D,EAA5DA,cAAkB5V,EAA0C,SAA9BiP,EAA8B,EAA9BA,gBACrE8B,ElDsFZ,SAAmB/Q,EAAQhM,EAAYkR,GACnC,IAAM6L,EAAS,CAAC,EAChB,IAAK,IAAMzQ,KAAON,EAAQ,CACtB,IAAMs/C,EAAmB9mB,GAAwBl4B,EAAKtM,GACtD,QAAyBkC,IAArBopD,EACAvuC,EAAOzQ,GAAOg/C,MAEb,CACD,IAAM5iD,EAAQwI,EAAckzB,SAAS93B,GACjC5D,IACAqU,EAAOzQ,GAAO5D,EAAM0K,MAE3B,CACJ,CACD,OAAO2J,CACV,CkDrGoBwuC,CAAUv/C,EAAQhM,GAAc,CAAC,EAAGkE,MAYjD,GARI+W,IACI2G,IACAA,EAAgB3G,EAAgB2G,IAChC5V,IACAA,EAASiP,EAAgBjP,IACzB+Q,IACAA,EAAS9B,EAAgB8B,KAE7BmH,EAAW,CACX,IAAMnE,ElDmBlB,SAAiC7O,EAAelF,EAAQ+Q,GACpD,IAAIZ,EAAI4W,EACFy4B,EAAelgD,OAAOD,KAAKW,GAAQP,QAAO,SAACa,GAAD,OAAU4E,EAAcizB,SAAS73B,EAAjC,IAC1Cm/C,EAAeD,EAAar/C,OAClC,IAAKs/C,EACD,OAAO,EACX,IAAK,IAAIx/C,EAAI,EAAGA,EAAIw/C,EAAcx/C,IAAK,CACnC,IAAMK,EAAMk/C,EAAav/C,GACnBy/C,EAAc1/C,EAAOM,GACvB5D,EAAQ,KAKRmF,MAAMC,QAAQ49C,KACdhjD,EAAQgjD,EAAY,IAOV,OAAVhjD,IACAA,EAAoG,QAA3FqqB,EAA4B,QAAtB5W,EAAKY,EAAOzQ,UAAyB,IAAP6P,EAAgBA,EAAKjL,EAAcy6C,UAAUr/C,UAAyB,IAAPymB,EAAgBA,EAAK/mB,EAAOM,SAM9HpK,IAAVwG,GAAiC,OAAVA,IAEN,kBAAVA,ImDjFc,iBAAiBiL,KnDkFnBjL,IAAU03B,GAAkB13B,IAE/CA,EAAQ2M,WAAW3M,IAEbu7B,GAAcv7B,IAAUoqB,GAAQnf,KAAK+3C,KAC3ChjD,EAAQuqB,GAAkB3mB,EAAKo/C,IAEnCx6C,EAAcmzB,SAAS/3B,EAAKs3B,GAAYl7B,EAAO,CAAE21B,MAAOntB,UACpChP,IAAhB6a,EAAOzQ,KACPyQ,EAAOzQ,GAAO5D,GAEJ,OAAVA,GACAwI,EAAc06C,cAAct/C,EAAK5D,GACxC,CACD,OAAO,CACV,CkDlE6BmjD,CAAwB3nD,KAAM8H,EAAQ+Q,GAEpD9B,GAAmB8E,IACnBhD,EAAS9B,EAAgB8B,IAE7B,IAAMmW,EAASw0B,GAAgBxjD,KAAM8H,EAAQ+Q,EAAQ6E,GACrDA,EAAgBsR,EAAOtR,cACvB5V,EAASknB,EAAOlnB,MACnB,CACD,eACIhM,WAAAA,EACA4hB,cAAAA,GACG5V,EAEV,K,EA5CCo/C,CAAyBjD,I,IESzB2D,GAAAA,SAAAA,I,gJACF,SAAsBv5C,EAAUjG,GAC5B,GAAIwH,EAAeR,IAAIhH,GAAM,CACzB,IAAMy/C,EAAc7rB,GAAoB5zB,GACxC,OAAOy/C,GAAcA,EAAYx2C,SAAe,CACnD,CAEG,IAVc6J,EAUR4sC,GAVQ5sC,EAUyB7M,EATxCT,OAAO8yC,iBAAiBxlC,IAUjB1W,GAASkM,EAAkBtI,GAC3B0/C,EAAc5G,iBAAiB94C,GAC/B0/C,EAAc1/C,KAAS,EAC7B,MAAwB,kBAAV5D,EAAqBA,EAAMgS,OAAShS,CAEzD,G,wCACD,SAA2B6J,EAA3B,GACI,OAAOw7B,GAAmBx7B,EAD+B,EAAtB3F,mBAEtC,G,mBACD,SAAM+S,EAAa7F,EAAc9Q,EAASlK,GACtC+a,GAAgB8F,EAAa7F,EAAc9Q,EAASlK,EAAMib,kBAC7D,G,yCACD,SAA4Bjb,EAAOyG,GAC/B,OAAOua,GAA4BhhB,EAAOyG,EAC7C,G,oCACD,WAAyB,WACjBrB,KAAK+nD,oBACL/nD,KAAK+nD,2BACE/nD,KAAK+nD,mBAEhB,IAAQhpD,EAAaiB,KAAKpF,MAAlBmE,SACJiR,EAAcjR,KACdiB,KAAK+nD,kBAAoBhpD,EAAS8/B,GAAG,UAAU,SAACtJ,GACxC,EAAKxzB,UACL,EAAKA,QAAQimD,YAAb,UAA8BzyB,GACrC,IAER,G,4BACD,SAAelnB,EAAUoN,EAAaN,EAAWC,GAC7CH,GAAW5M,EAAUoN,EAAaN,EAAWC,EAChD,K,EAtCCwsC,CAA0BV,I,WCZjB,SAASe,GAAehhD,EAAQihD,GAC7C,MAAQ9gD,OAAOnG,UAAUuI,eAAezJ,KAAKkH,EAAQihD,IAEpC,QADfjhD,GAAS,EAAAkhD,GAAA,GAAelhD,MAG1B,OAAOA,CACT,CCNe,SAASmhD,KActB,OAZEA,GADqB,qBAAZC,SAA2BA,QAAQn5C,IACrCm5C,QAAQn5C,IAAIo5C,OAEZ,SAAcxgD,EAAQogD,EAAUK,GACrC,IAAIC,EAAO,GAAc1gD,EAAQogD,GACjC,GAAKM,EAAL,CACA,IAAIC,EAAOrhD,OAAOK,yBAAyB+gD,EAAMN,GACjD,OAAIO,EAAKv5C,IACAu5C,EAAKv5C,IAAInP,KAAKiI,UAAUC,OAAS,EAAIH,EAASygD,GAEhDE,EAAKjkD,KALK,CAMnB,EAEK4jD,GAAKxgD,MAAM5H,KAAMgI,UAC1B,C,ICLM0gD,GAAAA,SAAAA,I,+BACF,aAAc,8BACV,eAAS1gD,YACJmR,UAAW,EAFN,CAGb,C,sDACD,SAAuBve,EAAOwN,GAC1B,OAAOxN,EAAMwN,EAChB,G,mCACD,SAAsBiG,EAAUjG,GAC5B,GAAIwH,EAAeR,IAAIhH,GAAM,CACzB,IAAMy/C,EAAc7rB,GAAoB5zB,GACxC,OAAOy/C,GAAcA,EAAYx2C,SAAe,CACnD,CAED,OADAjJ,EAAOmT,GAAoBnM,IAAIhH,GAA0BA,EAAnB0S,GAAY1S,GAC3CiG,EAASs6C,aAAavgD,EAChC,G,wCACD,WACI,MrCjBiB,CACrB+H,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,GqCmBpC,G,yCACD,SAA4BpW,EAAOyG,GAC/B,OAAOua,GAA4BhhB,EAAOyG,EAC7C,G,mBACD,SAAMoa,EAAa7F,EAAc9Q,EAASlK,GACtCse,GAAcuC,EAAa7F,EAAc9Q,EAAS9E,KAAKmZ,SAAUve,EAAMib,kBAC1E,G,4BACD,SAAexH,EAAUoN,EAAaN,EAAWC,GAC7CI,GAAUnN,EAAUoN,EAAaN,EAAWC,EAC/C,G,mBACD,SAAM/M,GACFrO,KAAKmZ,SAAWA,GAAS9K,EAAS2P,SAClC,iDAAY3P,EACf,K,EA/BCq6C,CAAyBxB,ICPzB0B,GAAyB,SAACv8C,EAAWvH,GACvC,OAAOyK,EAAelD,GAChB,IAAIq8C,GAAiB5jD,EAAS,CAAEuR,4BAA4B,IAC5D,IAAIuxC,GAAkB9iD,EAAS,CAAEuR,4BAA4B,GACtE,ECLK7K,GAAS,CACXA,OAAQ,CACJo1C,eAAgBJ,GAChB7zC,cAAAA,KCGFV,IAAoB,kCACnB60B,IACA5Z,IACAhc,IACAM,IAQDq9C,GAAuBl6C,GAAkB,SAACtC,EAAWxJ,GAAZ,OChB/C,SAA+BwJ,EAA/B,EAA0EJ,EAAmBC,GAAqB,QAAtEkM,mBAAAA,OAAsE,SACxG0wC,EAAav5C,EAAelD,GAC5BuR,GACAK,GACN,yBACO6qC,GADP,IAEI78C,kBAAAA,EACAE,UAAWuO,GAAgBtC,GAC3BlM,oBAAAA,EACAG,UAAAA,GAEP,CDKqE08C,CAAsB18C,EAAWxJ,EAAQoJ,GAAmB28C,GAAnF,G","sources":["../node_modules/@mui/material/styles/getOverlayAlpha.js","../node_modules/@mui/material/Paper/paperClasses.js","../node_modules/@mui/material/Paper/Paper.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/CardMedia/cardMediaClasses.js","../node_modules/@mui/material/CardMedia/CardMedia.js","../node_modules/react-transition-group/esm/config.js","../node_modules/react-transition-group/esm/Transition.js","../node_modules/react-transition-group/esm/utils/reflow.js","../node_modules/@mui/material/transitions/utils.js","../node_modules/@mui/material/Zoom/Zoom.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["// Inspired by https://github.com/material-components/material-components-ios/blob/bca36107405594d5b7b16265a5b0ed698f85a5ee/components/Elevation/src/UIColor%2BMaterialElevation.m#L61\nconst getOverlayAlpha = elevation => {\n  let alphaValue;\n  if (elevation < 1) {\n    alphaValue = 5.11916 * elevation ** 2;\n  } else {\n    alphaValue = 4.5 * Math.log(elevation + 1) + 2;\n  }\n  return (alphaValue / 100).toFixed(2);\n};\nexport default getOverlayAlpha;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getPaperUtilityClass(slot) {\n  return generateUtilityClass('MuiPaper', slot);\n}\nconst paperClasses = generateUtilityClasses('MuiPaper', ['root', 'rounded', 'outlined', 'elevation', 'elevation0', 'elevation1', 'elevation2', 'elevation3', 'elevation4', 'elevation5', 'elevation6', 'elevation7', 'elevation8', 'elevation9', 'elevation10', 'elevation11', 'elevation12', 'elevation13', 'elevation14', 'elevation15', 'elevation16', 'elevation17', 'elevation18', 'elevation19', 'elevation20', 'elevation21', 'elevation22', 'elevation23', 'elevation24']);\nexport default paperClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"elevation\", \"square\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled from '../styles/styled';\nimport getOverlayAlpha from '../styles/getOverlayAlpha';\nimport useThemeProps from '../styles/useThemeProps';\nimport useTheme from '../styles/useTheme';\nimport { getPaperUtilityClass } from './paperClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    square,\n    elevation,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, !square && 'rounded', variant === 'elevation' && `elevation${elevation}`]\n  };\n  return composeClasses(slots, getPaperUtilityClass, classes);\n};\nconst PaperRoot = styled('div', {\n  name: 'MuiPaper',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], !ownerState.square && styles.rounded, ownerState.variant === 'elevation' && styles[`elevation${ownerState.elevation}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  var _theme$vars$overlays;\n  return _extends({\n    backgroundColor: (theme.vars || theme).palette.background.paper,\n    color: (theme.vars || theme).palette.text.primary,\n    transition: theme.transitions.create('box-shadow')\n  }, !ownerState.square && {\n    borderRadius: theme.shape.borderRadius\n  }, ownerState.variant === 'outlined' && {\n    border: `1px solid ${(theme.vars || theme).palette.divider}`\n  }, ownerState.variant === 'elevation' && _extends({\n    boxShadow: (theme.vars || theme).shadows[ownerState.elevation]\n  }, !theme.vars && theme.palette.mode === 'dark' && {\n    backgroundImage: `linear-gradient(${alpha('#fff', getOverlayAlpha(ownerState.elevation))}, ${alpha('#fff', getOverlayAlpha(ownerState.elevation))})`\n  }, theme.vars && {\n    backgroundImage: (_theme$vars$overlays = theme.vars.overlays) == null ? void 0 : _theme$vars$overlays[ownerState.elevation]\n  }));\n});\nconst Paper = /*#__PURE__*/React.forwardRef(function Paper(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiPaper'\n  });\n  const {\n      className,\n      component = 'div',\n      elevation = 1,\n      square = false,\n      variant = 'elevation'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    elevation,\n    square,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const theme = useTheme();\n    if (theme.shadows[elevation] === undefined) {\n      console.error([`MUI: The elevation provided <Paper elevation={${elevation}}> is not available in the theme.`, `Please make sure that \\`theme.shadows[${elevation}]\\` is defined.`].join('\\n'));\n    }\n  }\n  return /*#__PURE__*/_jsx(PaperRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Paper.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Shadow depth, corresponds to `dp` in the spec.\n   * It accepts values between 0 and 24 inclusive.\n   * @default 1\n   */\n  elevation: chainPropTypes(integerPropType, props => {\n    const {\n      elevation,\n      variant\n    } = props;\n    if (elevation > 0 && variant === 'outlined') {\n      return new Error(`MUI: Combining \\`elevation={${elevation}}\\` with \\`variant=\"${variant}\"\\` has no effect. Either use \\`elevation={0}\\` or use a different \\`variant\\`.`);\n    }\n    return null;\n  }),\n  /**\n   * If `true`, rounded corners are disabled.\n   * @default false\n   */\n  square: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'elevation'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['elevation', 'outlined']), PropTypes.string])\n} : void 0;\nexport default Paper;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardMediaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardMedia', slot);\n}\nconst cardMediaClasses = generateUtilityClasses('MuiCardMedia', ['root', 'media', 'img']);\nexport default cardMediaClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"image\", \"src\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCardMediaUtilityClass } from './cardMediaClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    isMediaComponent,\n    isImageComponent\n  } = ownerState;\n  const slots = {\n    root: ['root', isMediaComponent && 'media', isImageComponent && 'img']\n  };\n  return composeClasses(slots, getCardMediaUtilityClass, classes);\n};\nconst CardMediaRoot = styled('div', {\n  name: 'MuiCardMedia',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      isMediaComponent,\n      isImageComponent\n    } = ownerState;\n    return [styles.root, isMediaComponent && styles.media, isImageComponent && styles.img];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'block',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center'\n}, ownerState.isMediaComponent && {\n  width: '100%'\n}, ownerState.isImageComponent && {\n  // ⚠️ object-fit is not supported by IE11.\n  objectFit: 'cover'\n}));\nconst MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nconst IMAGE_COMPONENTS = ['picture', 'img'];\nconst CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardMedia'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      image,\n      src,\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isMediaComponent = MEDIA_COMPONENTS.indexOf(component) !== -1;\n  const composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: `url(\"${image}\")`\n  }, style) : style;\n  const ownerState = _extends({}, props, {\n    component,\n    isMediaComponent,\n    isImageComponent: IMAGE_COMPONENTS.indexOf(component) !== -1\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardMediaRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    role: !isMediaComponent && image ? 'img' : undefined,\n    ref: ref,\n    style: composedStyle,\n    ownerState: ownerState,\n    src: isMediaComponent ? image || src : undefined\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('MUI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardMedia;","export default {\n  disabled: false\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { forceReflow } from './utils/reflow';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        if (this.props.unmountOnExit || this.props.mountOnEnter) {\n          var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this); // https://github.com/reactjs/react-transition-group/pull/749\n          // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.\n          // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.\n\n          if (node) forceReflow(node);\n        }\n\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","export var forceReflow = function forceReflow(node) {\n  return node.scrollTop;\n};","export const reflow = node => node.scrollTop;\nexport function getTransitionProps(props, options) {\n  var _style$transitionDura, _style$transitionTimi;\n  const {\n    timeout,\n    easing,\n    style = {}\n  } = props;\n  return {\n    duration: (_style$transitionDura = style.transitionDuration) != null ? _style$transitionDura : typeof timeout === 'number' ? timeout : timeout[options.mode] || 0,\n    easing: (_style$transitionTimi = style.transitionTimingFunction) != null ? _style$transitionTimi : typeof easing === 'object' ? easing[options.mode] : easing,\n    delay: style.transitionDelay\n  };\n}","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"addEndListener\", \"appear\", \"children\", \"easing\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"style\", \"timeout\", \"TransitionComponent\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport { elementAcceptingRef } from '@mui/utils';\nimport useTheme from '../styles/useTheme';\nimport { reflow, getTransitionProps } from '../transitions/utils';\nimport useForkRef from '../utils/useForkRef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst styles = {\n  entering: {\n    transform: 'none'\n  },\n  entered: {\n    transform: 'none'\n  }\n};\n\n/**\n * The Zoom transition can be used for the floating variant of the\n * [Button](/material-ui/react-button/#floating-action-buttons) component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\nconst Zoom = /*#__PURE__*/React.forwardRef(function Zoom(props, ref) {\n  const theme = useTheme();\n  const defaultTimeout = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  const {\n      addEndListener,\n      appear = true,\n      children,\n      easing,\n      in: inProp,\n      onEnter,\n      onEntered,\n      onEntering,\n      onExit,\n      onExited,\n      onExiting,\n      style,\n      timeout = defaultTimeout,\n      // eslint-disable-next-line react/prop-types\n      TransitionComponent = Transition\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const nodeRef = React.useRef(null);\n  const handleRef = useForkRef(nodeRef, children.ref, ref);\n  const normalizedTransitionCallback = callback => maybeIsAppearing => {\n    if (callback) {\n      const node = nodeRef.current;\n\n      // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n      if (maybeIsAppearing === undefined) {\n        callback(node);\n      } else {\n        callback(node, maybeIsAppearing);\n      }\n    }\n  };\n  const handleEntering = normalizedTransitionCallback(onEntering);\n  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {\n    reflow(node); // So the animation always start from the start.\n\n    const transitionProps = getTransitionProps({\n      style,\n      timeout,\n      easing\n    }, {\n      mode: 'enter'\n    });\n    node.style.webkitTransition = theme.transitions.create('transform', transitionProps);\n    node.style.transition = theme.transitions.create('transform', transitionProps);\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  const handleEntered = normalizedTransitionCallback(onEntered);\n  const handleExiting = normalizedTransitionCallback(onExiting);\n  const handleExit = normalizedTransitionCallback(node => {\n    const transitionProps = getTransitionProps({\n      style,\n      timeout,\n      easing\n    }, {\n      mode: 'exit'\n    });\n    node.style.webkitTransition = theme.transitions.create('transform', transitionProps);\n    node.style.transition = theme.transitions.create('transform', transitionProps);\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  const handleExited = normalizedTransitionCallback(onExited);\n  const handleAddEndListener = next => {\n    if (addEndListener) {\n      // Old call signature before `react-transition-group` implemented `nodeRef`\n      addEndListener(nodeRef.current, next);\n    }\n  };\n  return /*#__PURE__*/_jsx(TransitionComponent, _extends({\n    appear: appear,\n    in: inProp,\n    nodeRef: nodeRef,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: handleAddEndListener,\n    timeout: timeout\n  }, other, {\n    children: (state, childProps) => {\n      return /*#__PURE__*/React.cloneElement(children, _extends({\n        style: _extends({\n          transform: 'scale(0)',\n          visibility: state === 'exited' && !inProp ? 'hidden' : undefined\n        }, styles[state], style, children.props.style),\n        ref: handleRef\n      }, childProps));\n    }\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Zoom.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Add a custom transition end trigger. Called with the transitioning DOM\n   * node and a done callback. Allows for more fine grained transition end\n   * logic. Note: Timeouts are still used as a fallback if provided.\n   */\n  addEndListener: PropTypes.func,\n  /**\n   * Perform the enter transition when it first mounts if `in` is also `true`.\n   * Set this to `false` to disable this behavior.\n   * @default true\n   */\n  appear: PropTypes.bool,\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n  /**\n   * The transition timing function.\n   * You may specify a single easing or a object containing enter and exit values.\n   */\n  easing: PropTypes.oneOfType([PropTypes.shape({\n    enter: PropTypes.string,\n    exit: PropTypes.string\n  }), PropTypes.string]),\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  timeout: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nexport default Zoom;","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\nconst frame = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nfunction cancelFrame(process) {\n    stepsOrder.forEach((key) => steps[key].cancel(process));\n}\n\nexport { cancelFrame, frame, steps, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { frame } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.12.21\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return false;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n    return true;\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { frame, cancelFrame } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { frame } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { cancelFrame, steps, frame } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.21\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.21 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            const newValues = checkTargetForNewValues(this, target, origin);\n            // If new values have been added, for instance named color values, transform these\n            if (transformValues && newValues) {\n                origin = transformValues(origin);\n            }\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["elevation","Math","log","toFixed","getPaperUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","PaperRoot","styled","name","overridesResolver","props","styles","ownerState","root","variant","square","rounded","_theme$vars$overlays","theme","_extends","backgroundColor","vars","palette","background","paper","color","text","primary","transition","transitions","create","borderRadius","shape","border","divider","boxShadow","shadows","mode","backgroundImage","alpha","getOverlayAlpha","overlays","React","inProps","ref","useThemeProps","className","component","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx","getCardUtilityClass","CardRoot","Paper","overflow","raised","undefined","getCardMediaUtilityClass","CardMediaRoot","isMediaComponent","isImageComponent","media","img","display","backgroundSize","backgroundRepeat","backgroundPosition","width","objectFit","MEDIA_COMPONENTS","IMAGE_COMPONENTS","children","image","src","style","indexOf","composedStyle","role","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","_React$Component","context","_this","call","this","initialStatus","appear","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","state","status","nextCallback","_inheritsLoose","getDerivedStateFromProps","_ref","prevState","_proto","prototype","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","exit","timeout","mounting","node","nodeRef","current","ReactDOM","scrollTop","forceReflow","performEnter","performExit","setState","_this2","appearing","_ref2","maybeNode","maybeAppearing","timeouts","enterTimeout","config","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExit","onExiting","onExited","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","doesNotHaveTimeoutOrListener","addEndListener","_ref3","maybeNextCallback","setTimeout","render","_this$props","childProps","TransitionGroupContext","value","noop","contextType","propTypes","defaultProps","getTransitionProps","options","_style$transitionDura","_style$transitionTimi","easing","duration","transitionDuration","transitionTimingFunction","delay","transitionDelay","entering","transform","entered","useTheme","defaultTimeout","enteringScreen","leavingScreen","inProp","TransitionComponent","handleRef","useForkRef","normalizedTransitionCallback","maybeIsAppearing","handleEntering","handleEnter","isAppearing","reflow","transitionProps","webkitTransition","handleEntered","handleExiting","handleExit","handleExited","next","visibility","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","hasOwnProperty","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","isVariantNode","Boolean","variants","useCreateMotionContext","initial","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","blockInitialAnimation","useInsertionEffect","update","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","clamp","min","max","number","parse","parseFloat","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","transformTemplate","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","values","_objectWithoutProperties","excluded","objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","passive","addEventListener","removeEventListener","isPrimaryPointer","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","transformers","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","isMounted","frameData","delta","timestamp","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","add","index","splice","delete","process","createRenderStep","processStep","stepId","processFrame","requestAnimationFrame","startLoop","frame","keepAlive","immediate","cancelFrame","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","FocusGesture","isFocusVisible","matches","onFocus","onBlur","isNodeOrChild","child","parentElement","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","startObserver","hasOptionsChanged","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","keyframeValues","times","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","now","performance","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","autoplay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","createInstantAnimation","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getKeyframes","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","getValueTransition","animateMotionValue","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","isFloat","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","getSize","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","appearId","shouldReduceMotion","remove","animateVariant","getAnimation","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance2D","xDelta","yDelta","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","useId","usePresence","applyTo","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","checkElapsed","record","data","MotionDebug","isSVGElement","SVGElement","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","canSkip","attemptToResolveRelativeTarget","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","HTMLProjectionNode","documentNode","getComputedStyle","position","ProjectionNode","splitCSSVariableRegex","parseCSSVariable","exec","getVariableValue","fallback","getPropertyValue","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","_superPropBase","property","getPrototypeOf","_get","Reflect","bind","receiver","base","desc","SVGVisualElement","getAttribute","createDomVisualElement","motion","baseConfig","createDomMotionConfig"],"sourceRoot":""}